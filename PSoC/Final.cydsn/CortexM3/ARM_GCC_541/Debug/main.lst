ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_ui2d
  20              		.global	__aeabi_ddiv
  21              		.global	__aeabi_i2d
  22              		.global	__aeabi_dsub
  23              		.global	__aeabi_dadd
  24              		.global	__aeabi_dmul
  25              		.global	__aeabi_dcmpgt
  26              		.global	__aeabi_dcmplt
  27              		.global	__aeabi_d2uiz
  28              		.section	.text.inter_1,"ax",%progbits
  29              		.align	2
  30              		.global	inter_1
  31              		.thumb
  32              		.thumb_func
  33              		.type	inter_1, %function
  34              	inter_1:
  35              	.LFB64:
  36              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <stdlib.h>
  15:main.c        **** #include <string.h>
  16:main.c        **** #include <time.h>
  17:main.c        **** 
  18:main.c        **** float cx = 0.0;         // center x-coordinate from Pixy
  19:main.c        **** double servoPWM = 127;  // starting servo PWM value
  20:main.c        **** uint8 evasiveMode = 0;  // flag to trigger evasive turns
  21:main.c        **** uint16 frontDistance = 0;    // distance to object behind
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 2


  22:main.c        **** uint16 rearDistance = 0;    // distance to object behind
  23:main.c        **** 
  24:main.c        **** uint8 turn = 0; // variable to decide left or right when obstacle in front but no obstacle detected
  25:main.c        **** uint16 targetSpeed = 3;
  26:main.c        **** 
  27:main.c        **** // speed control variables
  28:main.c        **** uint16 old_time = 65535;
  29:main.c        **** uint16 new_time;
  30:main.c        **** uint16 elapsed_time;
  31:main.c        **** char strbuf2[32];
  32:main.c        **** 
  33:main.c        **** double PWM;
  34:main.c        **** volatile double speed;
  35:main.c        **** 
  36:main.c        **** //PID parameters
  37:main.c        **** double kp = 20;
  38:main.c        **** double ki = .2;
  39:main.c        **** double accumulated_error = 0;
  40:main.c        **** double PWM_base = 15;
  41:main.c        **** 
  42:main.c        **** // speed control
  43:main.c        **** CY_ISR(inter_1) {
  37              		.loc 1 43 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  42              		.cfi_def_cfa_offset 36
  43              		.cfi_offset 4, -36
  44              		.cfi_offset 5, -32
  45              		.cfi_offset 6, -28
  46              		.cfi_offset 7, -24
  47              		.cfi_offset 8, -20
  48              		.cfi_offset 9, -16
  49              		.cfi_offset 10, -12
  50              		.cfi_offset 11, -8
  51              		.cfi_offset 14, -4
  52 0004 85B0     		sub	sp, sp, #20
  53              		.cfi_def_cfa_offset 56
  44:main.c        ****     
  45:main.c        ****     // storing the most recently captured time
  46:main.c        ****     new_time = Timer_ReadCapture();
  54              		.loc 1 46 0
  55 0006 FFF7FEFF 		bl	Timer_ReadCapture
  56              	.LVL0:
  57 000a 424B     		ldr	r3, .L11
  58 000c 1880     		strh	r0, [r3]	@ movhi
  47:main.c        ****     
  48:main.c        ****     // calculating the elapsed time and accounting for the event of a roll over in the timer
  49:main.c        ****     if(new_time < old_time){
  59              		.loc 1 49 0
  60 000e 424B     		ldr	r3, .L11+4
  61 0010 1B88     		ldrh	r3, [r3]
  62 0012 9842     		cmp	r0, r3
  63 0014 02D2     		bcs	.L2
  50:main.c        ****         elapsed_time = old_time - new_time;
  64              		.loc 1 50 0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 3


  65 0016 1A1A     		subs	r2, r3, r0
  66 0018 4049     		ldr	r1, .L11+8
  67 001a 0A80     		strh	r2, [r1]	@ movhi
  68              	.L2:
  51:main.c        ****     }
  52:main.c        ****     
  53:main.c        ****     if(new_time >= old_time){
  69              		.loc 1 53 0
  70 001c 9842     		cmp	r0, r3
  71 001e 03D3     		bcc	.L3
  54:main.c        ****         elapsed_time = 65535 - (new_time - old_time);
  72              		.loc 1 54 0
  73 0020 C01A     		subs	r0, r0, r3
  74 0022 C043     		mvns	r0, r0
  75 0024 3D4B     		ldr	r3, .L11+8
  76 0026 1880     		strh	r0, [r3]	@ movhi
  77              	.L3:
  55:main.c        ****     }
  56:main.c        ****     
  57:main.c        ****     //clears the timer's status register in preparation for the next interrupt and time capture
  58:main.c        ****     Timer_ReadStatusRegister();
  78              		.loc 1 58 0
  79 0028 FFF7FEFF 		bl	Timer_ReadStatusRegister
  80              	.LVL1:
  59:main.c        ****     
  60:main.c        ****     // saving the most recently captured time to be used in calculating elapsed time with the subse
  61:main.c        ****     old_time = new_time;
  81              		.loc 1 61 0
  82 002c 3A4C     		ldr	r4, .L11+4
  83 002e 394B     		ldr	r3, .L11
  84 0030 1B88     		ldrh	r3, [r3]
  85 0032 2380     		strh	r3, [r4]	@ movhi
  62:main.c        ****     
  63:main.c        ****     // calculating speed. 1256 is approximation of (2(pi)r) / (5*10^-4), which accounts for scalar 
  64:main.c        ****     speed = (1256.0 / (double)(elapsed_time));
  86              		.loc 1 64 0
  87 0034 394B     		ldr	r3, .L11+8
  88 0036 B3F800A0 		ldrh	r10, [r3]
  89 003a 5046     		mov	r0, r10
  90 003c FFF7FEFF 		bl	__aeabi_ui2d
  91              	.LVL2:
  92 0040 0246     		mov	r2, r0
  93 0042 0B46     		mov	r3, r1
  94 0044 0020     		movs	r0, #0
  95 0046 3649     		ldr	r1, .L11+12
  96 0048 FFF7FEFF 		bl	__aeabi_ddiv
  97              	.LVL3:
  98 004c 354D     		ldr	r5, .L11+16
  99 004e C5E90001 		strd	r0, [r5]
  65:main.c        ****     
  66:main.c        ****     // summing previous error values for integral term
  67:main.c        ****     accumulated_error += targetSpeed-speed;
 100              		.loc 1 67 0
 101 0052 6088     		ldrh	r0, [r4, #2]
 102 0054 FFF7FEFF 		bl	__aeabi_i2d
 103              	.LVL4:
 104 0058 8046     		mov	r8, r0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 4


 105 005a 8946     		mov	r9, r1
 106 005c D5E90023 		ldrd	r2, [r5]
 107 0060 FFF7FEFF 		bl	__aeabi_dsub
 108              	.LVL5:
 109 0064 DFF8D4B0 		ldr	fp, .L11+40
 110 0068 DBE90023 		ldrd	r2, [fp]
 111 006c FFF7FEFF 		bl	__aeabi_dadd
 112              	.LVL6:
 113 0070 0646     		mov	r6, r0
 114 0072 0F46     		mov	r7, r1
 115 0074 CBE90067 		strd	r6, [fp]
  68:main.c        ****     
  69:main.c        ****     // implementing PID control equation to calulate new PWM comparison value
  70:main.c        ****     PWM = PWM_base + kp* (targetSpeed - speed) + ki* accumulated_error;
 116              		.loc 1 70 0
 117 0078 D5E90023 		ldrd	r2, [r5]
 118 007c 4046     		mov	r0, r8
 119 007e 4946     		mov	r1, r9
 120 0080 FFF7FEFF 		bl	__aeabi_dsub
 121              	.LVL7:
 122 0084 D4E90223 		ldrd	r2, [r4, #8]
 123 0088 FFF7FEFF 		bl	__aeabi_dmul
 124              	.LVL8:
 125 008c D4E90423 		ldrd	r2, [r4, #16]
 126 0090 FFF7FEFF 		bl	__aeabi_dadd
 127              	.LVL9:
 128 0094 8046     		mov	r8, r0
 129 0096 8946     		mov	r9, r1
 130 0098 D4E90623 		ldrd	r2, [r4, #24]
 131 009c 3046     		mov	r0, r6
 132 009e 3946     		mov	r1, r7
 133 00a0 FFF7FEFF 		bl	__aeabi_dmul
 134              	.LVL10:
 135 00a4 0246     		mov	r2, r0
 136 00a6 0B46     		mov	r3, r1
 137 00a8 4046     		mov	r0, r8
 138 00aa 4946     		mov	r1, r9
 139 00ac FFF7FEFF 		bl	__aeabi_dadd
 140              	.LVL11:
 141 00b0 1D4C     		ldr	r4, .L11+20
 142 00b2 C4E90001 		strd	r0, [r4]
  71:main.c        ****     
  72:main.c        ****     // creating a string consisiting of the elapsed time, current speed and PWM values
  73:main.c        ****     sprintf(strbuf2, "%u %f %f", elapsed_time, speed, PWM);
 143              		.loc 1 73 0
 144 00b6 D5E90023 		ldrd	r2, [r5]
 145 00ba CDE90201 		strd	r0, [sp, #8]
 146 00be CDE90023 		strd	r2, [sp]
 147 00c2 5246     		mov	r2, r10
 148 00c4 1949     		ldr	r1, .L11+24
 149 00c6 1A48     		ldr	r0, .L11+28
 150 00c8 FFF7FEFF 		bl	sprintf
 151              	.LVL12:
  74:main.c        ****     
  75:main.c        ****     // setting limits for the PWM signal
  76:main.c        ****     if(PWM > 100)
 152              		.loc 1 76 0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 5


 153 00cc 0022     		movs	r2, #0
 154 00ce 194B     		ldr	r3, .L11+32
 155 00d0 D4E90001 		ldrd	r0, [r4]
 156 00d4 FFF7FEFF 		bl	__aeabi_dcmpgt
 157              	.LVL13:
 158 00d8 18B1     		cbz	r0, .L4
  77:main.c        ****         PWM = 100;
 159              		.loc 1 77 0
 160 00da 0020     		movs	r0, #0
 161 00dc 1549     		ldr	r1, .L11+32
 162 00de C4E90001 		strd	r0, [r4]
 163              	.L4:
  78:main.c        ****     if(PWM < 20)
 164              		.loc 1 78 0
 165 00e2 0022     		movs	r2, #0
 166 00e4 144B     		ldr	r3, .L11+36
 167 00e6 1049     		ldr	r1, .L11+20
 168 00e8 D1E90001 		ldrd	r0, [r1]
 169 00ec FFF7FEFF 		bl	__aeabi_dcmplt
 170              	.LVL14:
 171 00f0 28B1     		cbz	r0, .L6
  79:main.c        ****         PWM = 2;
 172              		.loc 1 79 0
 173 00f2 0020     		movs	r0, #0
 174 00f4 4FF08041 		mov	r1, #1073741824
 175 00f8 0B4B     		ldr	r3, .L11+20
 176 00fa C3E90001 		strd	r0, [r3]
 177              	.L6:
  80:main.c        ****     
  81:main.c        ****     // outputting the new PWM signal. If the counter in the PWM is less than the comparison value, 
  82:main.c        ****     PWM_WriteCompare((uint8)PWM);
 178              		.loc 1 82 0
 179 00fe 0A4B     		ldr	r3, .L11+20
 180 0100 D3E90001 		ldrd	r0, [r3]
 181 0104 FFF7FEFF 		bl	__aeabi_d2uiz
 182              	.LVL15:
 183 0108 C0B2     		uxtb	r0, r0
 184 010a FFF7FEFF 		bl	PWM_WriteCompare
 185              	.LVL16:
  83:main.c        ****     
  84:main.c        **** }
 186              		.loc 1 84 0
 187 010e 05B0     		add	sp, sp, #20
 188              		.cfi_def_cfa_offset 36
 189              		@ sp needed
 190 0110 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 191              	.L12:
 192              		.align	2
 193              	.L11:
 194 0114 00000000 		.word	new_time
 195 0118 00000000 		.word	.LANCHOR0
 196 011c 00000000 		.word	elapsed_time
 197 0120 00A09340 		.word	1083416576
 198 0124 00000000 		.word	speed
 199 0128 00000000 		.word	PWM
 200 012c 00000000 		.word	.LC0
 201 0130 00000000 		.word	strbuf2
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 6


 202 0134 00005940 		.word	1079574528
 203 0138 00003440 		.word	1077149696
 204 013c 00000000 		.word	.LANCHOR1
 205              		.cfi_endproc
 206              	.LFE64:
 207              		.size	inter_1, .-inter_1
 208              		.section	.text.inter_2,"ax",%progbits
 209              		.align	2
 210              		.global	inter_2
 211              		.thumb
 212              		.thumb_func
 213              		.type	inter_2, %function
 214              	inter_2:
 215              	.LFB65:
  85:main.c        **** 
  86:main.c        **** // wall detection response
  87:main.c        **** CY_ISR(inter_2) {
 216              		.loc 1 87 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 10B5     		push	{r4, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
  88:main.c        ****     
  89:main.c        ****     
  90:main.c        ****     if((P_left_1_Read() == 1) || (P_front_left_Read() == 1) || (P_left_2_Read() == 1))
 224              		.loc 1 90 0
 225 0002 FFF7FEFF 		bl	P_left_1_Read
 226              	.LVL17:
 227 0006 0128     		cmp	r0, #1
 228 0008 07D0     		beq	.L14
 229              		.loc 1 90 0 is_stmt 0 discriminator 1
 230 000a FFF7FEFF 		bl	P_front_left_Read
 231              	.LVL18:
 232 000e 0128     		cmp	r0, #1
 233 0010 03D0     		beq	.L14
 234              		.loc 1 90 0 discriminator 2
 235 0012 FFF7FEFF 		bl	P_left_2_Read
 236              	.LVL19:
 237 0016 0128     		cmp	r0, #1
 238 0018 05D1     		bne	.L15
 239              	.L14:
  91:main.c        ****         servoPWM = 200; // turn right
 240              		.loc 1 91 0 is_stmt 1
 241 001a 0020     		movs	r0, #0
 242 001c 5B49     		ldr	r1, .L32
 243 001e 5C4B     		ldr	r3, .L32+4
 244 0020 C3E90801 		strd	r0, [r3, #32]
 245 0024 3BE0     		b	.L16
 246              	.L15:
  92:main.c        ****     
  93:main.c        ****     else if((P_right_1_Read() == 1) || (P_front_right_Read() == 1) || (P_right_2_Read() == 1))
 247              		.loc 1 93 0
 248 0026 FFF7FEFF 		bl	P_right_1_Read
 249              	.LVL20:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 7


 250 002a 0128     		cmp	r0, #1
 251 002c 07D0     		beq	.L17
 252              		.loc 1 93 0 is_stmt 0 discriminator 1
 253 002e FFF7FEFF 		bl	P_front_right_Read
 254              	.LVL21:
 255 0032 0128     		cmp	r0, #1
 256 0034 03D0     		beq	.L17
 257              		.loc 1 93 0 discriminator 2
 258 0036 FFF7FEFF 		bl	P_right_2_Read
 259              	.LVL22:
 260 003a 0128     		cmp	r0, #1
 261 003c 05D1     		bne	.L18
 262              	.L17:
  94:main.c        ****         servoPWM = 20; // turn left 
 263              		.loc 1 94 0 is_stmt 1
 264 003e 0020     		movs	r0, #0
 265 0040 5449     		ldr	r1, .L32+8
 266 0042 534B     		ldr	r3, .L32+4
 267 0044 C3E90801 		strd	r0, [r3, #32]
 268 0048 29E0     		b	.L16
 269              	.L18:
  95:main.c        ****     
  96:main.c        ****     else if ((turn == 0) && !((P_right_1_Read() == 1) || (P_front_right_Read() == 1) || (P_right_2_
 270              		.loc 1 96 0
 271 004a 534B     		ldr	r3, .L32+12
 272 004c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 273 004e 8BB9     		cbnz	r3, .L19
 274              		.loc 1 96 0 is_stmt 0 discriminator 1
 275 0050 FFF7FEFF 		bl	P_right_1_Read
 276              	.LVL23:
 277 0054 0128     		cmp	r0, #1
 278 0056 0DD0     		beq	.L19
 279              		.loc 1 96 0 discriminator 2
 280 0058 FFF7FEFF 		bl	P_front_right_Read
 281              	.LVL24:
 282 005c 0128     		cmp	r0, #1
 283 005e 09D0     		beq	.L19
 284              		.loc 1 96 0 discriminator 3
 285 0060 FFF7FEFF 		bl	P_right_2_Read
 286              	.LVL25:
 287 0064 0128     		cmp	r0, #1
 288 0066 05D0     		beq	.L19
  97:main.c        ****         servoPWM = 20; // turn left 
 289              		.loc 1 97 0 is_stmt 1
 290 0068 0020     		movs	r0, #0
 291 006a 4A49     		ldr	r1, .L32+8
 292 006c 484B     		ldr	r3, .L32+4
 293 006e C3E90801 		strd	r0, [r3, #32]
 294 0072 14E0     		b	.L16
 295              	.L19:
  98:main.c        ****     
  99:main.c        ****     else if ((turn == 1) && !((P_left_1_Read() == 1) || (P_front_left_Read() == 1) || (P_left_2_Rea
 296              		.loc 1 99 0
 297 0074 484B     		ldr	r3, .L32+12
 298 0076 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 299 0078 012B     		cmp	r3, #1
 300 007a 10D1     		bne	.L16
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 8


 301              		.loc 1 99 0 is_stmt 0 discriminator 1
 302 007c FFF7FEFF 		bl	P_left_1_Read
 303              	.LVL26:
 304 0080 0128     		cmp	r0, #1
 305 0082 0CD0     		beq	.L16
 306              		.loc 1 99 0 discriminator 2
 307 0084 FFF7FEFF 		bl	P_front_left_Read
 308              	.LVL27:
 309 0088 0128     		cmp	r0, #1
 310 008a 08D0     		beq	.L16
 311              		.loc 1 99 0 discriminator 3
 312 008c FFF7FEFF 		bl	P_left_2_Read
 313              	.LVL28:
 314 0090 0128     		cmp	r0, #1
 315 0092 04D0     		beq	.L16
 100:main.c        ****         servoPWM = 200; // turn right
 316              		.loc 1 100 0 is_stmt 1
 317 0094 0020     		movs	r0, #0
 318 0096 3D49     		ldr	r1, .L32
 319 0098 3D4B     		ldr	r3, .L32+4
 320 009a C3E90801 		strd	r0, [r3, #32]
 321              	.L16:
 101:main.c        ****     
 102:main.c        ****     PWM_1_WriteCompare((uint8)servoPWM); // change servo angle
 322              		.loc 1 102 0
 323 009e 3C4B     		ldr	r3, .L32+4
 324 00a0 D3E90801 		ldrd	r0, [r3, #32]
 325 00a4 FFF7FEFF 		bl	__aeabi_d2uiz
 326              	.LVL29:
 327 00a8 C0B2     		uxtb	r0, r0
 328 00aa FFF7FEFF 		bl	PWM_1_WriteCompare
 329              	.LVL30:
 103:main.c        **** 
 104:main.c        ****     // interupt stops fleeMode code so tag parameters included here
 105:main.c        ****     static char rearBuffer[32]; // to hold distance of object in rear camera
 106:main.c        ****     static uint8 readIndex = 0;
 107:main.c        **** 
 108:main.c        ****     while (UART_1_GetRxBufferSize() > 0) {
 330              		.loc 1 108 0
 331 00ae 67E0     		b	.L20
 332              	.L30:
 333              	.LBB2:
 109:main.c        ****         char receivedChar = UART_1_GetChar();
 334              		.loc 1 109 0
 335 00b0 FFF7FEFF 		bl	UART_1_GetChar
 336              	.LVL31:
 110:main.c        **** 
 111:main.c        ****         if (receivedChar == '\r' || receivedChar == '\n') {
 337              		.loc 1 111 0
 338 00b4 0D28     		cmp	r0, #13
 339 00b6 01D0     		beq	.L21
 340              		.loc 1 111 0 is_stmt 0 discriminator 1
 341 00b8 0A28     		cmp	r0, #10
 342 00ba 54D1     		bne	.L22
 343              	.L21:
 112:main.c        ****             rearBuffer[readIndex] = '\0';
 344              		.loc 1 112 0 is_stmt 1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 9


 345 00bc 3648     		ldr	r0, .L32+12
 346              	.LVL32:
 347 00be 437A     		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 348 00c0 0344     		add	r3, r3, r0
 349 00c2 0022     		movs	r2, #0
 350 00c4 1A73     		strb	r2, [r3, #12]
 113:main.c        ****             readIndex = 0;
 351              		.loc 1 113 0
 352 00c6 4272     		strb	r2, [r0, #9]
 114:main.c        ****             
 115:main.c        ****             // extract rc_detected and dist
 116:main.c        ****             if (strncmp(rearBuffer, "rc_detected:1", 13) == 0) {
 353              		.loc 1 116 0
 354 00c8 0D22     		movs	r2, #13
 355 00ca 3449     		ldr	r1, .L32+16
 356 00cc 0C30     		adds	r0, r0, #12
 357 00ce FFF7FEFF 		bl	strncmp
 358              	.LVL33:
 359 00d2 0028     		cmp	r0, #0
 360 00d4 3DD1     		bne	.L23
 361              	.LBB3:
 117:main.c        ****                 char *distPtr = strstr(rearBuffer, "dist:");  // find "dist:"
 362              		.loc 1 117 0
 363 00d6 3249     		ldr	r1, .L32+20
 364 00d8 3248     		ldr	r0, .L32+24
 365 00da FFF7FEFF 		bl	strstr
 366              	.LVL34:
 118:main.c        ****                 if (distPtr) {
 367              		.loc 1 118 0
 368 00de 0028     		cmp	r0, #0
 369 00e0 33D0     		beq	.L24
 119:main.c        ****                     rearDistance = atoi(distPtr + 5);  // extract distance value
 370              		.loc 1 119 0
 371 00e2 0530     		adds	r0, r0, #5
 372              	.LVL35:
 373 00e4 FFF7FEFF 		bl	atoi
 374              	.LVL36:
 375 00e8 80B2     		uxth	r0, r0
 376 00ea 2B4B     		ldr	r3, .L32+12
 377 00ec 9885     		strh	r0, [r3, #44]	@ movhi
 120:main.c        ****                     
 121:main.c        ****                     if (rearDistance > 80 && rearDistance < 165) {
 378              		.loc 1 121 0
 379 00ee A0F15103 		sub	r3, r0, #81
 380 00f2 9BB2     		uxth	r3, r3
 381 00f4 532B     		cmp	r3, #83
 382 00f6 03D8     		bhi	.L25
 122:main.c        ****                         targetSpeed = 4;
 383              		.loc 1 122 0
 384 00f8 0422     		movs	r2, #4
 385 00fa 254B     		ldr	r3, .L32+4
 386 00fc 5A80     		strh	r2, [r3, #2]	@ movhi
 387 00fe 13E0     		b	.L26
 388              	.L25:
 123:main.c        ****                     } else if (rearDistance < 80) {
 389              		.loc 1 123 0
 390 0100 4F28     		cmp	r0, #79
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 10


 391 0102 03D8     		bhi	.L27
 124:main.c        ****                         targetSpeed = 3;
 392              		.loc 1 124 0
 393 0104 0322     		movs	r2, #3
 394 0106 224B     		ldr	r3, .L32+4
 395 0108 5A80     		strh	r2, [r3, #2]	@ movhi
 396 010a 0DE0     		b	.L26
 397              	.L27:
 125:main.c        ****                     } else if (rearDistance > 165){ 
 398              		.loc 1 125 0
 399 010c A528     		cmp	r0, #165
 400 010e 0BD9     		bls	.L26
 126:main.c        ****                         STOP_Write(0);
 401              		.loc 1 126 0
 402 0110 0020     		movs	r0, #0
 403 0112 FFF7FEFF 		bl	STOP_Write
 404              	.LVL37:
 127:main.c        ****                         MODE_Write(0);
 405              		.loc 1 127 0
 406 0116 0020     		movs	r0, #0
 407 0118 FFF7FEFF 		bl	MODE_Write
 408              	.LVL38:
 128:main.c        ****                         LED_Write(1);
 409              		.loc 1 128 0
 410 011c 0120     		movs	r0, #1
 411 011e FFF7FEFF 		bl	LED_Write
 412              	.LVL39:
 129:main.c        ****                         UART_1_PutString("Tagged.\r\n");
 413              		.loc 1 129 0
 414 0122 2148     		ldr	r0, .L32+28
 415 0124 FFF7FEFF 		bl	UART_1_PutString
 416              	.LVL40:
 417              	.L26:
 130:main.c        ****                     }
 131:main.c        ****                     
 132:main.c        ****                     sprintf(strbuf2, "%d", rearDistance);
 418              		.loc 1 132 0
 419 0128 204C     		ldr	r4, .L32+32
 420 012a 1B4B     		ldr	r3, .L32+12
 421 012c 9A8D     		ldrh	r2, [r3, #44]
 422 012e 2049     		ldr	r1, .L32+36
 423 0130 2046     		mov	r0, r4
 424 0132 FFF7FEFF 		bl	sprintf
 425              	.LVL41:
 133:main.c        ****                     UART_1_PutString(strbuf2);
 426              		.loc 1 133 0
 427 0136 2046     		mov	r0, r4
 428 0138 FFF7FEFF 		bl	UART_1_PutString
 429              	.LVL42:
 134:main.c        ****                     UART_1_PutString("\r\n");
 430              		.loc 1 134 0
 431 013c 1D48     		ldr	r0, .L32+40
 432 013e FFF7FEFF 		bl	UART_1_PutString
 433              	.LVL43:
 135:main.c        ****                     UART_1_PutString("**************************\r\n");
 434              		.loc 1 135 0
 435 0142 1D48     		ldr	r0, .L32+44
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 11


 436 0144 FFF7FEFF 		bl	UART_1_PutString
 437              	.LVL44:
 438 0148 1AE0     		b	.L20
 439              	.LVL45:
 440              	.L24:
 136:main.c        ****                 }
 137:main.c        ****                 else {
 138:main.c        ****                     // UART_1_PutString("Error: 'dist:' not found in buffer\r\n");
 139:main.c        ****                     rearDistance = 0;  // Reset distance
 441              		.loc 1 139 0
 442 014a 0022     		movs	r2, #0
 443 014c 124B     		ldr	r3, .L32+12
 444 014e 9A85     		strh	r2, [r3, #44]	@ movhi
 445 0150 16E0     		b	.L20
 446              	.LVL46:
 447              	.L23:
 448              	.LBE3:
 140:main.c        ****                 }
 141:main.c        ****             }
 142:main.c        ****             else if (strncmp(rearBuffer, "rc_detected:0", 13) == 0) {
 449              		.loc 1 142 0
 450 0152 0D22     		movs	r2, #13
 451 0154 1949     		ldr	r1, .L32+48
 452 0156 1348     		ldr	r0, .L32+24
 453 0158 FFF7FEFF 		bl	strncmp
 454              	.LVL47:
 455 015c 80B9     		cbnz	r0, .L20
 143:main.c        ****                 rearDistance = 0;  // No object detected
 456              		.loc 1 143 0
 457 015e 0022     		movs	r2, #0
 458 0160 0D4B     		ldr	r3, .L32+12
 459 0162 9A85     		strh	r2, [r3, #44]	@ movhi
 460 0164 0CE0     		b	.L20
 461              	.LVL48:
 462              	.L22:
 144:main.c        ****                 // UART_1_PutString("Evasive mode deactivated (no object).\r\n");
 145:main.c        ****             }
 146:main.c        ****         }
 147:main.c        ****         // condition to prevent buffer overflow
 148:main.c        ****         else if (readIndex < sizeof(rearBuffer) - 1) {
 463              		.loc 1 148 0
 464 0166 0C4B     		ldr	r3, .L32+12
 465 0168 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 466 016a 1E2B     		cmp	r3, #30
 467 016c 05D8     		bhi	.L29
 149:main.c        ****             rearBuffer[readIndex++] = receivedChar;
 468              		.loc 1 149 0
 469 016e 0A4A     		ldr	r2, .L32+12
 470 0170 591C     		adds	r1, r3, #1
 471 0172 5172     		strb	r1, [r2, #9]
 472 0174 1344     		add	r3, r3, r2
 473 0176 1873     		strb	r0, [r3, #12]
 474 0178 02E0     		b	.L20
 475              	.L29:
 150:main.c        ****         }
 151:main.c        ****         else {
 152:main.c        ****             readIndex = 0;  // reset buffer on overflow
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 12


 476              		.loc 1 152 0
 477 017a 0022     		movs	r2, #0
 478 017c 064B     		ldr	r3, .L32+12
 479 017e 5A72     		strb	r2, [r3, #9]
 480              	.LVL49:
 481              	.L20:
 482              	.LBE2:
 108:main.c        ****         char receivedChar = UART_1_GetChar();
 483              		.loc 1 108 0
 484 0180 FFF7FEFF 		bl	UART_1_GetRxBufferSize
 485              	.LVL50:
 486 0184 0028     		cmp	r0, #0
 487 0186 93D1     		bne	.L30
 153:main.c        ****         }
 154:main.c        ****     }
 155:main.c        **** }
 488              		.loc 1 155 0
 489 0188 10BD     		pop	{r4, pc}
 490              	.L33:
 491 018a 00BF     		.align	2
 492              	.L32:
 493 018c 00006940 		.word	1080623104
 494 0190 00000000 		.word	.LANCHOR0
 495 0194 00003440 		.word	1077149696
 496 0198 00000000 		.word	.LANCHOR1
 497 019c 0C000000 		.word	.LC1
 498 01a0 1C000000 		.word	.LC2
 499 01a4 0C000000 		.word	.LANCHOR1+12
 500 01a8 24000000 		.word	.LC3
 501 01ac 00000000 		.word	strbuf2
 502 01b0 30000000 		.word	.LC4
 503 01b4 34000000 		.word	.LC5
 504 01b8 38000000 		.word	.LC6
 505 01bc 58000000 		.word	.LC7
 506              		.cfi_endproc
 507              	.LFE65:
 508              		.size	inter_2, .-inter_2
 509              		.global	__aeabi_d2f
 510              		.global	__aeabi_fcmpeq
 511              		.global	__aeabi_fmul
 512              		.global	__aeabi_fadd
 513              		.global	__aeabi_f2d
 514              		.section	.text.chaseMode,"ax",%progbits
 515              		.align	2
 516              		.global	chaseMode
 517              		.thumb
 518              		.thumb_func
 519              		.type	chaseMode, %function
 520              	chaseMode:
 521              	.LFB66:
 156:main.c        **** 
 157:main.c        **** // defines randomized turn
 158:main.c        **** //CY_ISR (inter_3){
 159:main.c        **** //    turn = (rand() % 2);
 160:main.c        **** //}
 161:main.c        **** 
 162:main.c        **** // function to handle front UART input and parse cx value
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 13


 163:main.c        **** void chaseMode() {
 522              		.loc 1 163 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 70B5     		push	{r4, r5, r6, lr}
 527              		.cfi_def_cfa_offset 16
 528              		.cfi_offset 4, -16
 529              		.cfi_offset 5, -12
 530              		.cfi_offset 6, -8
 531              		.cfi_offset 14, -4
 164:main.c        ****     static char frontBuffer[32];    // to hold cx value
 165:main.c        ****     static char rearBuffer[32];    // to hold object detection in rear camera
 166:main.c        ****     static char leftBuffer[32];     // to hold object detection in left camera
 167:main.c        ****     static char rightBuffer[32];    // to hold object detection in right camera
 168:main.c        ****     static uint8 frontIndex = 0;
 169:main.c        ****     static uint8 rearIndex = 0;
 170:main.c        ****     static uint8 leftIndex = 0;    
 171:main.c        ****     static uint8 rightIndex = 0;
 172:main.c        ****     
 173:main.c        ****     // front camera input
 174:main.c        ****     while (UART_2_GetRxBufferSize() > 0) {
 532              		.loc 1 174 0
 533 0002 A2E0     		b	.L35
 534              	.L48:
 535              	.LBB4:
 175:main.c        ****         char receivedChar = UART_2_GetChar();
 536              		.loc 1 175 0
 537 0004 FFF7FEFF 		bl	UART_2_GetChar
 538              	.LVL51:
 176:main.c        **** 
 177:main.c        ****         if (receivedChar == '\r' || receivedChar == '\n') {
 539              		.loc 1 177 0
 540 0008 0D28     		cmp	r0, #13
 541 000a 02D0     		beq	.L36
 542              		.loc 1 177 0 is_stmt 0 discriminator 1
 543 000c 0A28     		cmp	r0, #10
 544 000e 40F08B80 		bne	.L37
 545              	.L36:
 546              	.LBB5:
 178:main.c        ****             frontBuffer[frontIndex] = '\0';
 547              		.loc 1 178 0 is_stmt 1
 548 0012 B848     		ldr	r0, .L77
 549              	.LVL52:
 550 0014 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 551 0018 0344     		add	r3, r3, r0
 552 001a 0022     		movs	r2, #0
 553 001c 83F83020 		strb	r2, [r3, #48]
 179:main.c        ****             frontIndex = 0;
 554              		.loc 1 179 0
 555 0020 80F82E20 		strb	r2, [r0, #46]
 180:main.c        **** 
 181:main.c        ****             char *cxPtr = strstr(frontBuffer, "cx:");
 556              		.loc 1 181 0
 557 0024 00F13004 		add	r4, r0, #48
 558 0028 B349     		ldr	r1, .L77+4
 559 002a 2046     		mov	r0, r4
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 14


 560 002c FFF7FEFF 		bl	strstr
 561              	.LVL53:
 562 0030 0546     		mov	r5, r0
 563              	.LVL54:
 182:main.c        ****             char *distPtr = strstr(frontBuffer, "dist:");
 564              		.loc 1 182 0
 565 0032 B249     		ldr	r1, .L77+8
 566 0034 2046     		mov	r0, r4
 567              	.LVL55:
 568 0036 FFF7FEFF 		bl	strstr
 569              	.LVL56:
 570 003a 0646     		mov	r6, r0
 571              	.LVL57:
 183:main.c        ****             if (cxPtr && distPtr) {
 572              		.loc 1 183 0
 573 003c 002D     		cmp	r5, #0
 574 003e 00F08480 		beq	.L35
 575              		.loc 1 183 0 is_stmt 0 discriminator 1
 576 0042 0028     		cmp	r0, #0
 577 0044 00F08180 		beq	.L35
 184:main.c        ****                 cx = atof(cxPtr + 3);          // convert cx value to float
 578              		.loc 1 184 0 is_stmt 1
 579 0048 E81C     		adds	r0, r5, #3
 580              	.LVL58:
 581 004a FFF7FEFF 		bl	atof
 582              	.LVL59:
 583 004e 303C     		subs	r4, r4, #48
 584 0050 FFF7FEFF 		bl	__aeabi_d2f
 585              	.LVL60:
 586 0054 2065     		str	r0, [r4, #80]	@ float
 185:main.c        ****                 frontDistance = atoi(distPtr + 5);  // convert distance value to integer
 587              		.loc 1 185 0
 588 0056 701D     		adds	r0, r6, #5
 589 0058 FFF7FEFF 		bl	atoi
 590              	.LVL61:
 591 005c A4F85400 		strh	r0, [r4, #84]	@ movhi
 186:main.c        ****                 UART_1_PutString("frontBuffer:");
 592              		.loc 1 186 0
 593 0060 A748     		ldr	r0, .L77+12
 594 0062 FFF7FEFF 		bl	UART_1_PutString
 595              	.LVL62:
 187:main.c        ****                 UART_1_PutString(frontBuffer);
 596              		.loc 1 187 0
 597 0066 04F13000 		add	r0, r4, #48
 598 006a FFF7FEFF 		bl	UART_1_PutString
 599              	.LVL63:
 188:main.c        ****                 UART_1_PutString("\r\n");
 600              		.loc 1 188 0
 601 006e A548     		ldr	r0, .L77+16
 602 0070 FFF7FEFF 		bl	UART_1_PutString
 603              	.LVL64:
 189:main.c        **** 
 190:main.c        ****                 // if tagged car, stop
 191:main.c        ****                 if (frontDistance > 80 && frontDistance < 156) targetSpeed = 4;
 604              		.loc 1 191 0
 605 0074 B4F85420 		ldrh	r2, [r4, #84]
 606 0078 A2F15103 		sub	r3, r2, #81
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 15


 607 007c 9BB2     		uxth	r3, r3
 608 007e 4A2B     		cmp	r3, #74
 609 0080 03D8     		bhi	.L39
 610              		.loc 1 191 0 is_stmt 0 discriminator 1
 611 0082 0422     		movs	r2, #4
 612 0084 A04B     		ldr	r3, .L77+20
 613 0086 5A80     		strh	r2, [r3, #2]	@ movhi
 614 0088 13E0     		b	.L40
 615              	.L39:
 192:main.c        ****                 else if (frontDistance < 80) targetSpeed = 3;
 616              		.loc 1 192 0 is_stmt 1
 617 008a 4F2A     		cmp	r2, #79
 618 008c 03D8     		bhi	.L41
 619              		.loc 1 192 0 is_stmt 0 discriminator 1
 620 008e 0322     		movs	r2, #3
 621 0090 9D4B     		ldr	r3, .L77+20
 622 0092 5A80     		strh	r2, [r3, #2]	@ movhi
 623 0094 0DE0     		b	.L40
 624              	.L41:
 193:main.c        ****                 else if (frontDistance >= 156) {
 625              		.loc 1 193 0 is_stmt 1
 626 0096 9B2A     		cmp	r2, #155
 627 0098 0BD9     		bls	.L40
 194:main.c        ****                     MODE_Write(1);
 628              		.loc 1 194 0
 629 009a 0120     		movs	r0, #1
 630 009c FFF7FEFF 		bl	MODE_Write
 631              	.LVL65:
 195:main.c        ****                     LED_Write(0);
 632              		.loc 1 195 0
 633 00a0 0020     		movs	r0, #0
 634 00a2 FFF7FEFF 		bl	LED_Write
 635              	.LVL66:
 196:main.c        ****                     UART_1_PutString("Tagged. Now in Flee mode.");
 636              		.loc 1 196 0
 637 00a6 9948     		ldr	r0, .L77+24
 638 00a8 FFF7FEFF 		bl	UART_1_PutString
 639              	.LVL67:
 197:main.c        ****                     UART_1_PutString("\r\n");
 640              		.loc 1 197 0
 641 00ac 9548     		ldr	r0, .L77+16
 642 00ae FFF7FEFF 		bl	UART_1_PutString
 643              	.LVL68:
 644              	.L40:
 198:main.c        ****                 }
 199:main.c        ****                 
 200:main.c        ****                 
 201:main.c        ****                 if(cx != 0 && frontDistance != 0) {
 645              		.loc 1 201 0
 646 00b2 904B     		ldr	r3, .L77
 647 00b4 1C6D     		ldr	r4, [r3, #80]	@ float
 648 00b6 0021     		movs	r1, #0
 649 00b8 2046     		mov	r0, r4
 650 00ba FFF7FEFF 		bl	__aeabi_fcmpeq
 651              	.LVL69:
 652 00be 0028     		cmp	r0, #0
 653 00c0 43D1     		bne	.L35
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 16


 654              		.loc 1 201 0 is_stmt 0 discriminator 1
 655 00c2 8C4B     		ldr	r3, .L77
 656 00c4 B3F85430 		ldrh	r3, [r3, #84]
 657 00c8 002B     		cmp	r3, #0
 658 00ca 3ED0     		beq	.L35
 202:main.c        ****                     // update servo position by mapping (-1 to 1) to (2 to 250)
 203:main.c        ****                     servoPWM = 124 * cx + 126;
 659              		.loc 1 203 0 is_stmt 1
 660 00cc 9049     		ldr	r1, .L77+28
 661 00ce 2046     		mov	r0, r4
 662 00d0 FFF7FEFF 		bl	__aeabi_fmul
 663              	.LVL70:
 664 00d4 8F49     		ldr	r1, .L77+32
 665 00d6 FFF7FEFF 		bl	__aeabi_fadd
 666              	.LVL71:
 667 00da FFF7FEFF 		bl	__aeabi_f2d
 668              	.LVL72:
 669 00de 8A4B     		ldr	r3, .L77+20
 670 00e0 C3E90801 		strd	r0, [r3, #32]
 204:main.c        ****                     
 205:main.c        ****                     // probably not neccesary because we shouldn't receive a cx out of range
 206:main.c        ****                     if (servoPWM > 250) 
 671              		.loc 1 206 0
 672 00e4 0022     		movs	r2, #0
 673 00e6 8C4B     		ldr	r3, .L77+36
 674 00e8 FFF7FEFF 		bl	__aeabi_dcmpgt
 675              	.LVL73:
 676 00ec 20B1     		cbz	r0, .L43
 207:main.c        ****                         servoPWM = 250;
 677              		.loc 1 207 0
 678 00ee 0020     		movs	r0, #0
 679 00f0 8949     		ldr	r1, .L77+36
 680 00f2 854B     		ldr	r3, .L77+20
 681 00f4 C3E90801 		strd	r0, [r3, #32]
 682              	.L43:
 208:main.c        ****                     if (servoPWM < 2) 
 683              		.loc 1 208 0
 684 00f8 0022     		movs	r2, #0
 685 00fa 4FF08043 		mov	r3, #1073741824
 686 00fe 8249     		ldr	r1, .L77+20
 687 0100 D1E90801 		ldrd	r0, [r1, #32]
 688 0104 FFF7FEFF 		bl	__aeabi_dcmplt
 689              	.LVL74:
 690 0108 28B1     		cbz	r0, .L45
 209:main.c        ****                         servoPWM = 2;
 691              		.loc 1 209 0
 692 010a 0020     		movs	r0, #0
 693 010c 4FF08041 		mov	r1, #1073741824
 694 0110 7D4B     		ldr	r3, .L77+20
 695 0112 C3E90801 		strd	r0, [r3, #32]
 696              	.L45:
 210:main.c        ****                     
 211:main.c        ****                     // outputting the new PWM signal. If the counter in the PWM is less than the co
 212:main.c        ****                     PWM_1_WriteCompare((uint8)servoPWM);
 697              		.loc 1 212 0
 698 0116 7C4B     		ldr	r3, .L77+20
 699 0118 D3E90801 		ldrd	r0, [r3, #32]
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 17


 700 011c FFF7FEFF 		bl	__aeabi_d2uiz
 701              	.LVL75:
 702 0120 C0B2     		uxtb	r0, r0
 703 0122 FFF7FEFF 		bl	PWM_1_WriteCompare
 704              	.LVL76:
 705 0126 10E0     		b	.L35
 706              	.LVL77:
 707              	.L37:
 708              	.LBE5:
 213:main.c        ****                 }
 214:main.c        ****             }
 215:main.c        ****         }
 216:main.c        ****         // condition to prevent buffer overflow
 217:main.c        ****         else if (frontIndex < sizeof(frontBuffer) - 1) {
 709              		.loc 1 217 0
 710 0128 724B     		ldr	r3, .L77
 711 012a 93F82E30 		ldrb	r3, [r3, #46]	@ zero_extendqisi2
 712 012e 1E2B     		cmp	r3, #30
 713 0130 07D8     		bhi	.L47
 218:main.c        ****             frontBuffer[frontIndex++] = receivedChar;
 714              		.loc 1 218 0
 715 0132 704A     		ldr	r2, .L77
 716 0134 591C     		adds	r1, r3, #1
 717 0136 82F82E10 		strb	r1, [r2, #46]
 718 013a 1344     		add	r3, r3, r2
 719 013c 83F83000 		strb	r0, [r3, #48]
 720 0140 03E0     		b	.L35
 721              	.L47:
 219:main.c        ****         }
 220:main.c        ****         else {
 221:main.c        ****             frontIndex = 0;  // reset buffer on overflow
 722              		.loc 1 221 0
 723 0142 0022     		movs	r2, #0
 724 0144 6B4B     		ldr	r3, .L77
 725 0146 83F82E20 		strb	r2, [r3, #46]
 726              	.LVL78:
 727              	.L35:
 728              	.LBE4:
 174:main.c        ****         char receivedChar = UART_2_GetChar();
 729              		.loc 1 174 0
 730 014a FFF7FEFF 		bl	UART_2_GetRxBufferSize
 731              	.LVL79:
 732 014e 0028     		cmp	r0, #0
 733 0150 7FF458AF 		bne	.L48
 222:main.c        ****         }
 223:main.c        ****     }
 224:main.c        ****     
 225:main.c        ****     if (frontDistance == 0){
 734              		.loc 1 225 0
 735 0154 674B     		ldr	r3, .L77
 736 0156 B3F85430 		ldrh	r3, [r3, #84]
 737 015a 002B     		cmp	r3, #0
 738 015c 4AD0     		beq	.L49
 739 015e 70BD     		pop	{r4, r5, r6, pc}
 740              	.L58:
 741              	.LBB6:
 226:main.c        ****         // rear camera input
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 18


 227:main.c        ****         while (UART_1_GetRxBufferSize() > 0) {
 228:main.c        ****         char receivedChar = UART_1_GetChar();
 742              		.loc 1 228 0
 743 0160 FFF7FEFF 		bl	UART_1_GetChar
 744              	.LVL80:
 229:main.c        **** 
 230:main.c        ****         if (receivedChar == '\r' || receivedChar == '\n') {
 745              		.loc 1 230 0
 746 0164 0D28     		cmp	r0, #13
 747 0166 01D0     		beq	.L51
 748              		.loc 1 230 0 is_stmt 0 discriminator 1
 749 0168 0A28     		cmp	r0, #10
 750 016a 32D1     		bne	.L52
 751              	.L51:
 231:main.c        ****             rearBuffer[rearIndex] = '\0';
 752              		.loc 1 231 0 is_stmt 1
 753 016c 6148     		ldr	r0, .L77
 754              	.LVL81:
 755 016e 90F85630 		ldrb	r3, [r0, #86]	@ zero_extendqisi2
 756 0172 0344     		add	r3, r3, r0
 757 0174 0022     		movs	r2, #0
 758 0176 83F85820 		strb	r2, [r3, #88]
 232:main.c        ****             rearIndex = 0;
 759              		.loc 1 232 0
 760 017a 80F85620 		strb	r2, [r0, #86]
 233:main.c        ****             
 234:main.c        ****             // if rc_detected turn around
 235:main.c        ****             if (strncmp(rearBuffer, "rc_detected:1", 13) == 0) {
 761              		.loc 1 235 0
 762 017e 0D22     		movs	r2, #13
 763 0180 6649     		ldr	r1, .L77+40
 764 0182 5830     		adds	r0, r0, #88
 765 0184 FFF7FEFF 		bl	strncmp
 766              	.LVL82:
 767 0188 A0BB     		cbnz	r0, .L49
 236:main.c        ****                 UART_1_PutString("rearBuffer:");
 768              		.loc 1 236 0
 769 018a 6548     		ldr	r0, .L77+44
 770 018c FFF7FEFF 		bl	UART_1_PutString
 771              	.LVL83:
 237:main.c        ****                 UART_1_PutString(rearBuffer);
 772              		.loc 1 237 0
 773 0190 6448     		ldr	r0, .L77+48
 774 0192 FFF7FEFF 		bl	UART_1_PutString
 775              	.LVL84:
 238:main.c        ****                 UART_1_PutString("\r\n");
 776              		.loc 1 238 0
 777 0196 5B48     		ldr	r0, .L77+16
 778 0198 FFF7FEFF 		bl	UART_1_PutString
 779              	.LVL85:
 239:main.c        ****                 turn = (rand() % 2);
 780              		.loc 1 239 0
 781 019c FFF7FEFF 		bl	rand
 782              	.LVL86:
 783 01a0 614B     		ldr	r3, .L77+52
 784 01a2 1840     		ands	r0, r0, r3
 785 01a4 03D5     		bpl	.L54
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 19


 786 01a6 0138     		subs	r0, r0, #1
 787 01a8 60F00100 		orn	r0, r0, #1
 788 01ac 0130     		adds	r0, r0, #1
 789              	.L54:
 790 01ae C0B2     		uxtb	r0, r0
 791 01b0 504B     		ldr	r3, .L77
 792 01b2 1872     		strb	r0, [r3, #8]
 240:main.c        ****                 if (turn == 0) PWM_1_WriteCompare(20); // turn left 
 793              		.loc 1 240 0
 794 01b4 18B9     		cbnz	r0, .L55
 795              		.loc 1 240 0 is_stmt 0 discriminator 1
 796 01b6 1420     		movs	r0, #20
 797 01b8 FFF7FEFF 		bl	PWM_1_WriteCompare
 798              	.LVL87:
 799 01bc 04E0     		b	.L56
 800              	.L55:
 241:main.c        ****                 else if (turn == 1) PWM_1_WriteCompare(200); // turn right
 801              		.loc 1 241 0 is_stmt 1
 802 01be 0128     		cmp	r0, #1
 803 01c0 02D1     		bne	.L56
 804              		.loc 1 241 0 is_stmt 0 discriminator 1
 805 01c2 C820     		movs	r0, #200
 806 01c4 FFF7FEFF 		bl	PWM_1_WriteCompare
 807              	.LVL88:
 808              	.L56:
 242:main.c        ****                 CyDelay(2000);
 809              		.loc 1 242 0 is_stmt 1
 810 01c8 4FF4FA60 		mov	r0, #2000
 811 01cc FFF7FEFF 		bl	CyDelay
 812              	.LVL89:
 813 01d0 10E0     		b	.L49
 814              	.LVL90:
 815              	.L52:
 243:main.c        ****             }
 244:main.c        ****         }
 245:main.c        ****         // condition to prevent buffer overflow
 246:main.c        ****         else if (rearIndex < sizeof(rearBuffer) - 1) {
 816              		.loc 1 246 0
 817 01d2 484B     		ldr	r3, .L77
 818 01d4 93F85630 		ldrb	r3, [r3, #86]	@ zero_extendqisi2
 819 01d8 1E2B     		cmp	r3, #30
 820 01da 07D8     		bhi	.L57
 247:main.c        ****             rearBuffer[rearIndex++] = receivedChar;
 821              		.loc 1 247 0
 822 01dc 454A     		ldr	r2, .L77
 823 01de 591C     		adds	r1, r3, #1
 824 01e0 82F85610 		strb	r1, [r2, #86]
 825 01e4 1344     		add	r3, r3, r2
 826 01e6 83F85800 		strb	r0, [r3, #88]
 827 01ea 03E0     		b	.L49
 828              	.L57:
 248:main.c        ****         }
 249:main.c        ****         else {
 250:main.c        ****             rearIndex = 0;  // reset buffer on overflow
 829              		.loc 1 250 0
 830 01ec 0022     		movs	r2, #0
 831 01ee 414B     		ldr	r3, .L77
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 20


 832 01f0 83F85620 		strb	r2, [r3, #86]
 833              	.LVL91:
 834              	.L49:
 835              	.LBE6:
 227:main.c        ****         char receivedChar = UART_1_GetChar();
 836              		.loc 1 227 0
 837 01f4 FFF7FEFF 		bl	UART_1_GetRxBufferSize
 838              	.LVL92:
 839 01f8 0028     		cmp	r0, #0
 840 01fa B1D1     		bne	.L58
 841 01fc 3BE0     		b	.L59
 842              	.L65:
 843              	.LBB7:
 251:main.c        ****         }
 252:main.c        ****     }
 253:main.c        ****         
 254:main.c        ****         // left camera input
 255:main.c        ****         while (UART_3_GetRxBufferSize() > 0) {
 256:main.c        ****             char receivedChar = UART_3_GetChar();
 844              		.loc 1 256 0
 845 01fe FFF7FEFF 		bl	UART_3_GetChar
 846              	.LVL93:
 257:main.c        **** 
 258:main.c        ****             if (receivedChar == '\r' || receivedChar == '\n') {
 847              		.loc 1 258 0
 848 0202 0D28     		cmp	r0, #13
 849 0204 01D0     		beq	.L60
 850              		.loc 1 258 0 is_stmt 0 discriminator 1
 851 0206 0A28     		cmp	r0, #10
 852 0208 24D1     		bne	.L61
 853              	.L60:
 259:main.c        ****                 leftBuffer[leftIndex] = '\0';
 854              		.loc 1 259 0 is_stmt 1
 855 020a 3A4C     		ldr	r4, .L77
 856 020c 94F87830 		ldrb	r3, [r4, #120]	@ zero_extendqisi2
 857 0210 2344     		add	r3, r3, r4
 858 0212 0022     		movs	r2, #0
 859 0214 83F87C20 		strb	r2, [r3, #124]
 260:main.c        ****                 leftIndex = 0;
 860              		.loc 1 260 0
 861 0218 84F87820 		strb	r2, [r4, #120]
 261:main.c        ****                 UART_1_PutString("leftBuffer:");
 862              		.loc 1 261 0
 863 021c 4348     		ldr	r0, .L77+56
 864              	.LVL94:
 865 021e FFF7FEFF 		bl	UART_1_PutString
 866              	.LVL95:
 262:main.c        ****                 UART_1_PutString(leftBuffer);
 867              		.loc 1 262 0
 868 0222 7C34     		adds	r4, r4, #124
 869 0224 2046     		mov	r0, r4
 870 0226 FFF7FEFF 		bl	UART_1_PutString
 871              	.LVL96:
 263:main.c        ****                 UART_1_PutString("\r\n");
 872              		.loc 1 263 0
 873 022a 3648     		ldr	r0, .L77+16
 874 022c FFF7FEFF 		bl	UART_1_PutString
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 21


 875              	.LVL97:
 264:main.c        ****                 if (strcmp(leftBuffer, "1") == 0){ 
 876              		.loc 1 264 0
 877 0230 3F49     		ldr	r1, .L77+60
 878 0232 2046     		mov	r0, r4
 879 0234 FFF7FEFF 		bl	strcmp
 880              	.LVL98:
 881 0238 18B9     		cbnz	r0, .L62
 265:main.c        ****                     PWM_1_WriteCompare(20);
 882              		.loc 1 265 0
 883 023a 1420     		movs	r0, #20
 884 023c FFF7FEFF 		bl	PWM_1_WriteCompare
 885              	.LVL99:
 886 0240 19E0     		b	.L59
 887              	.L62:
 266:main.c        ****                 }
 267:main.c        ****                 else if (strcmp(leftBuffer, "0") == 0) { 
 888              		.loc 1 267 0
 889 0242 3C49     		ldr	r1, .L77+64
 890 0244 3C48     		ldr	r0, .L77+68
 891 0246 FFF7FEFF 		bl	strcmp
 892              	.LVL100:
 893 024a A0B9     		cbnz	r0, .L59
 268:main.c        ****                     PWM_1_WriteCompare(127);
 894              		.loc 1 268 0
 895 024c 7F20     		movs	r0, #127
 896 024e FFF7FEFF 		bl	PWM_1_WriteCompare
 897              	.LVL101:
 898 0252 10E0     		b	.L59
 899              	.LVL102:
 900              	.L61:
 269:main.c        ****                 }
 270:main.c        ****             }
 271:main.c        ****             // condition to prevent buffer overflow
 272:main.c        ****             else if (leftIndex < sizeof(leftBuffer) - 1) {
 901              		.loc 1 272 0
 902 0254 274B     		ldr	r3, .L77
 903 0256 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 904 025a 1E2B     		cmp	r3, #30
 905 025c 07D8     		bhi	.L64
 273:main.c        ****                 leftBuffer[leftIndex++] = receivedChar;
 906              		.loc 1 273 0
 907 025e 254A     		ldr	r2, .L77
 908 0260 591C     		adds	r1, r3, #1
 909 0262 82F87810 		strb	r1, [r2, #120]
 910 0266 1344     		add	r3, r3, r2
 911 0268 83F87C00 		strb	r0, [r3, #124]
 912 026c 03E0     		b	.L59
 913              	.L64:
 274:main.c        ****             }
 275:main.c        ****             else {
 276:main.c        ****                 leftIndex = 0;  // reset buffer on overflow
 914              		.loc 1 276 0
 915 026e 0022     		movs	r2, #0
 916 0270 204B     		ldr	r3, .L77
 917 0272 83F87820 		strb	r2, [r3, #120]
 918              	.LVL103:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 22


 919              	.L59:
 920              	.LBE7:
 255:main.c        ****             char receivedChar = UART_3_GetChar();
 921              		.loc 1 255 0
 922 0276 FFF7FEFF 		bl	UART_3_GetRxBufferSize
 923              	.LVL104:
 924 027a 0028     		cmp	r0, #0
 925 027c BFD1     		bne	.L65
 926 027e 65E0     		b	.L66
 927              	.L72:
 928              	.LBB8:
 277:main.c        ****             }
 278:main.c        ****         }
 279:main.c        ****         
 280:main.c        ****         // right camera input
 281:main.c        ****         while (UART_4_GetRxBufferSize() > 0) {
 282:main.c        ****         char receivedChar = UART_4_GetChar();
 929              		.loc 1 282 0
 930 0280 FFF7FEFF 		bl	UART_4_GetChar
 931              	.LVL105:
 283:main.c        **** 
 284:main.c        ****         if (receivedChar == '\r' || receivedChar == '\n') {
 932              		.loc 1 284 0
 933 0284 0D28     		cmp	r0, #13
 934 0286 01D0     		beq	.L67
 935              		.loc 1 284 0 is_stmt 0 discriminator 1
 936 0288 0A28     		cmp	r0, #10
 937 028a 25D1     		bne	.L68
 938              	.L67:
 285:main.c        ****             rightBuffer[rightIndex] = '\0';
 939              		.loc 1 285 0 is_stmt 1
 940 028c 194C     		ldr	r4, .L77
 941 028e 94F89C30 		ldrb	r3, [r4, #156]	@ zero_extendqisi2
 942 0292 2344     		add	r3, r3, r4
 943 0294 0022     		movs	r2, #0
 944 0296 83F8A020 		strb	r2, [r3, #160]
 286:main.c        ****             rightIndex = 0;
 945              		.loc 1 286 0
 946 029a 84F89C20 		strb	r2, [r4, #156]
 287:main.c        ****             UART_1_PutString("rightBuffer:");
 947              		.loc 1 287 0
 948 029e 2748     		ldr	r0, .L77+72
 949              	.LVL106:
 950 02a0 FFF7FEFF 		bl	UART_1_PutString
 951              	.LVL107:
 288:main.c        ****             UART_1_PutString(rightBuffer);
 952              		.loc 1 288 0
 953 02a4 A034     		adds	r4, r4, #160
 954 02a6 2046     		mov	r0, r4
 955 02a8 FFF7FEFF 		bl	UART_1_PutString
 956              	.LVL108:
 289:main.c        ****             UART_1_PutString("\r\n");
 957              		.loc 1 289 0
 958 02ac 1548     		ldr	r0, .L77+16
 959 02ae FFF7FEFF 		bl	UART_1_PutString
 960              	.LVL109:
 290:main.c        ****             if (strcmp(rightBuffer, "1") == 0){ 
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 23


 961              		.loc 1 290 0
 962 02b2 1F49     		ldr	r1, .L77+60
 963 02b4 2046     		mov	r0, r4
 964 02b6 FFF7FEFF 		bl	strcmp
 965              	.LVL110:
 966 02ba 18B9     		cbnz	r0, .L69
 291:main.c        ****                 PWM_1_WriteCompare(200);
 967              		.loc 1 291 0
 968 02bc C820     		movs	r0, #200
 969 02be FFF7FEFF 		bl	PWM_1_WriteCompare
 970              	.LVL111:
 971 02c2 43E0     		b	.L66
 972              	.L69:
 292:main.c        ****             }
 293:main.c        ****             else if (strcmp(rightBuffer, "0") == 0) { 
 973              		.loc 1 293 0
 974 02c4 1B49     		ldr	r1, .L77+64
 975 02c6 1E48     		ldr	r0, .L77+76
 976 02c8 FFF7FEFF 		bl	strcmp
 977              	.LVL112:
 978 02cc 0028     		cmp	r0, #0
 979 02ce 3DD1     		bne	.L66
 294:main.c        ****                 PWM_1_WriteCompare(127);
 980              		.loc 1 294 0
 981 02d0 7F20     		movs	r0, #127
 982 02d2 FFF7FEFF 		bl	PWM_1_WriteCompare
 983              	.LVL113:
 984 02d6 39E0     		b	.L66
 985              	.LVL114:
 986              	.L68:
 295:main.c        ****             }
 296:main.c        ****         }
 297:main.c        ****         // condition to prevent buffer overflow
 298:main.c        ****         else if (rightIndex < sizeof(rightBuffer) - 1) {
 987              		.loc 1 298 0
 988 02d8 064B     		ldr	r3, .L77
 989 02da 93F89C30 		ldrb	r3, [r3, #156]	@ zero_extendqisi2
 990 02de 1E2B     		cmp	r3, #30
 991 02e0 30D8     		bhi	.L71
 299:main.c        ****             rightBuffer[rightIndex++] = receivedChar;
 992              		.loc 1 299 0
 993 02e2 044A     		ldr	r2, .L77
 994 02e4 591C     		adds	r1, r3, #1
 995 02e6 82F89C10 		strb	r1, [r2, #156]
 996 02ea 1344     		add	r3, r3, r2
 997 02ec 83F8A000 		strb	r0, [r3, #160]
 998 02f0 2CE0     		b	.L66
 999              	.L78:
 1000 02f2 00BF     		.align	2
 1001              	.L77:
 1002 02f4 00000000 		.word	.LANCHOR1
 1003 02f8 68000000 		.word	.LC8
 1004 02fc 1C000000 		.word	.LC2
 1005 0300 6C000000 		.word	.LC9
 1006 0304 34000000 		.word	.LC5
 1007 0308 00000000 		.word	.LANCHOR0
 1008 030c 7C000000 		.word	.LC10
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 24


 1009 0310 0000F842 		.word	1123549184
 1010 0314 0000FC42 		.word	1123811328
 1011 0318 00406F40 		.word	1081032704
 1012 031c 0C000000 		.word	.LC1
 1013 0320 98000000 		.word	.LC11
 1014 0324 58000000 		.word	.LANCHOR1+88
 1015 0328 01000080 		.word	-2147483647
 1016 032c A4000000 		.word	.LC12
 1017 0330 B0000000 		.word	.LC13
 1018 0334 B4000000 		.word	.LC14
 1019 0338 7C000000 		.word	.LANCHOR1+124
 1020 033c B8000000 		.word	.LC15
 1021 0340 A0000000 		.word	.LANCHOR1+160
 1022              	.L71:
 300:main.c        ****         }
 301:main.c        ****         else {
 302:main.c        ****             rightIndex = 0;  // reset buffer on overflow
 1023              		.loc 1 302 0
 1024 0344 0022     		movs	r2, #0
 1025 0346 044B     		ldr	r3, .L79
 1026 0348 83F89C20 		strb	r2, [r3, #156]
 1027              	.LVL115:
 1028              	.L66:
 1029              	.LBE8:
 281:main.c        ****         char receivedChar = UART_4_GetChar();
 1030              		.loc 1 281 0
 1031 034c FFF7FEFF 		bl	UART_4_GetRxBufferSize
 1032              	.LVL116:
 1033 0350 0028     		cmp	r0, #0
 1034 0352 95D1     		bne	.L72
 1035 0354 70BD     		pop	{r4, r5, r6, pc}
 1036              	.L80:
 1037 0356 00BF     		.align	2
 1038              	.L79:
 1039 0358 00000000 		.word	.LANCHOR1
 1040              		.cfi_endproc
 1041              	.LFE66:
 1042              		.size	chaseMode, .-chaseMode
 1043              		.section	.text.fleeMode,"ax",%progbits
 1044              		.align	2
 1045              		.global	fleeMode
 1046              		.thumb
 1047              		.thumb_func
 1048              		.type	fleeMode, %function
 1049              	fleeMode:
 1050              	.LFB67:
 303:main.c        ****         }
 304:main.c        ****     }
 305:main.c        ****     }
 306:main.c        **** }   
 307:main.c        **** 
 308:main.c        **** // function to handle rear UART input and parse distance value
 309:main.c        **** void fleeMode() {
 1051              		.loc 1 309 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 25


 1055 0000 08B5     		push	{r3, lr}
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 3, -8
 1058              		.cfi_offset 14, -4
 310:main.c        ****     static char rearBuffer[32];     // to hold distance of object in rear camera
 311:main.c        ****     static char leftBuffer[32];     // to hold object detection in left camera
 312:main.c        ****     static char rightBuffer[32];    // to hold object detection in right camera
 313:main.c        ****     static uint8 rearIndex = 0;
 314:main.c        ****     static uint8 leftIndex = 0;    
 315:main.c        ****     static uint8 rightIndex = 0;
 316:main.c        ****     
 317:main.c        ****     // rear camera input
 318:main.c        ****     while (UART_1_GetRxBufferSize() > 0) {
 1059              		.loc 1 318 0
 1060 0002 6FE0     		b	.L82
 1061              	.L91:
 1062              	.LBB9:
 319:main.c        ****         char receivedChar = UART_1_GetChar();
 1063              		.loc 1 319 0
 1064 0004 FFF7FEFF 		bl	UART_1_GetChar
 1065              	.LVL117:
 320:main.c        **** 
 321:main.c        ****         if (receivedChar == '\r' || receivedChar == '\n') {
 1066              		.loc 1 321 0
 1067 0008 0D28     		cmp	r0, #13
 1068 000a 01D0     		beq	.L83
 1069              		.loc 1 321 0 is_stmt 0 discriminator 1
 1070 000c 0A28     		cmp	r0, #10
 1071 000e 58D1     		bne	.L84
 1072              	.L83:
 322:main.c        ****             rearBuffer[rearIndex] = '\0';
 1073              		.loc 1 322 0 is_stmt 1
 1074 0010 7048     		ldr	r0, .L108
 1075              	.LVL118:
 1076 0012 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 1077 0016 0344     		add	r3, r3, r0
 1078 0018 0022     		movs	r2, #0
 1079 001a 83F8C420 		strb	r2, [r3, #196]
 323:main.c        ****             rearIndex = 0;
 1080              		.loc 1 323 0
 1081 001e 80F8C020 		strb	r2, [r0, #192]
 324:main.c        ****             
 325:main.c        **** //            UART_1_PutString("flee rearBuffer:");
 326:main.c        **** //            UART_1_PutString(rearBuffer);
 327:main.c        **** //            UART_1_PutString("\r\n");
 328:main.c        ****             
 329:main.c        ****             // extract rc_detected and dist
 330:main.c        ****             if (strncmp(rearBuffer, "rc_detected:1", 13) == 0) {
 1082              		.loc 1 330 0
 1083 0022 0D22     		movs	r2, #13
 1084 0024 6C49     		ldr	r1, .L108+4
 1085 0026 C430     		adds	r0, r0, #196
 1086 0028 FFF7FEFF 		bl	strncmp
 1087              	.LVL119:
 1088 002c 0028     		cmp	r0, #0
 1089 002e 3CD1     		bne	.L85
 1090              	.LBB10:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 26


 331:main.c        ****                 char *distPtr = strstr(rearBuffer, "dist:");  // find "dist:"
 1091              		.loc 1 331 0
 1092 0030 6A49     		ldr	r1, .L108+8
 1093 0032 6B48     		ldr	r0, .L108+12
 1094 0034 FFF7FEFF 		bl	strstr
 1095              	.LVL120:
 332:main.c        ****                 if (distPtr) {
 1096              		.loc 1 332 0
 1097 0038 88B3     		cbz	r0, .L86
 333:main.c        ****                     rearDistance = atoi(distPtr + 5);  // extract distance value
 1098              		.loc 1 333 0
 1099 003a 0530     		adds	r0, r0, #5
 1100              	.LVL121:
 1101 003c FFF7FEFF 		bl	atoi
 1102              	.LVL122:
 1103 0040 80B2     		uxth	r0, r0
 1104 0042 644B     		ldr	r3, .L108
 1105 0044 9885     		strh	r0, [r3, #44]	@ movhi
 334:main.c        ****                     
 335:main.c        ****                     if (rearDistance > 80 && rearDistance < 165) {
 1106              		.loc 1 335 0
 1107 0046 A0F15103 		sub	r3, r0, #81
 1108 004a 9BB2     		uxth	r3, r3
 1109 004c 532B     		cmp	r3, #83
 1110 004e 0AD8     		bhi	.L87
 336:main.c        ****                         evasiveMode = 1;  // Enable evasive mode
 1111              		.loc 1 336 0
 1112 0050 0122     		movs	r2, #1
 1113 0052 604B     		ldr	r3, .L108
 1114 0054 83F8E420 		strb	r2, [r3, #228]
 337:main.c        ****                         targetSpeed = 4;
 1115              		.loc 1 337 0
 1116 0058 0422     		movs	r2, #4
 1117 005a 624B     		ldr	r3, .L108+16
 1118 005c 5A80     		strh	r2, [r3, #2]	@ movhi
 338:main.c        ****                         UART_1_PutString("Evasive mode activated.\r\n");
 1119              		.loc 1 338 0
 1120 005e 6248     		ldr	r0, .L108+20
 1121 0060 FFF7FEFF 		bl	UART_1_PutString
 1122              	.LVL123:
 1123 0064 3EE0     		b	.L82
 1124              	.L87:
 339:main.c        ****                     } else if (rearDistance < 80) {
 1125              		.loc 1 339 0
 1126 0066 4F28     		cmp	r0, #79
 1127 0068 0AD8     		bhi	.L89
 340:main.c        ****                         evasiveMode = 0;  // Disable evasive mode
 1128              		.loc 1 340 0
 1129 006a 0022     		movs	r2, #0
 1130 006c 594B     		ldr	r3, .L108
 1131 006e 83F8E420 		strb	r2, [r3, #228]
 341:main.c        ****                         targetSpeed = 3;
 1132              		.loc 1 341 0
 1133 0072 0322     		movs	r2, #3
 1134 0074 5B4B     		ldr	r3, .L108+16
 1135 0076 5A80     		strh	r2, [r3, #2]	@ movhi
 342:main.c        ****                         UART_1_PutString("Evasive mode deactivated.\r\n");
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 27


 1136              		.loc 1 342 0
 1137 0078 5C48     		ldr	r0, .L108+24
 1138 007a FFF7FEFF 		bl	UART_1_PutString
 1139              	.LVL124:
 1140 007e 31E0     		b	.L82
 1141              	.L89:
 343:main.c        ****                     } else if (rearDistance > 165){ 
 1142              		.loc 1 343 0
 1143 0080 A528     		cmp	r0, #165
 1144 0082 2FD9     		bls	.L82
 344:main.c        ****                         STOP_Write(0);
 1145              		.loc 1 344 0
 1146 0084 0020     		movs	r0, #0
 1147 0086 FFF7FEFF 		bl	STOP_Write
 1148              	.LVL125:
 345:main.c        ****                         MODE_Write(0);
 1149              		.loc 1 345 0
 1150 008a 0020     		movs	r0, #0
 1151 008c FFF7FEFF 		bl	MODE_Write
 1152              	.LVL126:
 346:main.c        ****                         LED_Write(1);
 1153              		.loc 1 346 0
 1154 0090 0120     		movs	r0, #1
 1155 0092 FFF7FEFF 		bl	LED_Write
 1156              	.LVL127:
 347:main.c        ****                         UART_1_PutString("Tagged. Now in chase mode.\r\n");
 1157              		.loc 1 347 0
 1158 0096 5648     		ldr	r0, .L108+28
 1159 0098 FFF7FEFF 		bl	UART_1_PutString
 1160              	.LVL128:
 1161 009c 22E0     		b	.L82
 1162              	.LVL129:
 1163              	.L86:
 348:main.c        ****                     }
 349:main.c        ****                     
 350:main.c        **** //                    sprintf(strbuf2, "%d", rearDistance);
 351:main.c        **** //                    UART_1_PutString(strbuf2);
 352:main.c        **** //                    UART_1_PutString("\r\n");
 353:main.c        **** //                    UART_1_PutString("**************************\r\n");
 354:main.c        ****                 }
 355:main.c        ****                 else {
 356:main.c        ****                     // UART_1_PutString("Error: 'dist:' not found in buffer\r\n");
 357:main.c        ****                     rearDistance = 0;  // Reset distance
 1164              		.loc 1 357 0
 1165 009e 4D4B     		ldr	r3, .L108
 1166 00a0 0022     		movs	r2, #0
 1167 00a2 9A85     		strh	r2, [r3, #44]	@ movhi
 358:main.c        ****                     evasiveMode = 0;   // Disable evasive mode
 1168              		.loc 1 358 0
 1169 00a4 83F8E420 		strb	r2, [r3, #228]
 1170 00a8 1CE0     		b	.L82
 1171              	.LVL130:
 1172              	.L85:
 1173              	.LBE10:
 359:main.c        ****                 }
 360:main.c        ****             }
 361:main.c        ****             else if (strncmp(rearBuffer, "rc_detected:0", 13) == 0) {
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 28


 1174              		.loc 1 361 0
 1175 00aa 0D22     		movs	r2, #13
 1176 00ac 5149     		ldr	r1, .L108+32
 1177 00ae 4C48     		ldr	r0, .L108+12
 1178 00b0 FFF7FEFF 		bl	strncmp
 1179              	.LVL131:
 1180 00b4 B0B9     		cbnz	r0, .L82
 362:main.c        ****                 rearDistance = 0;  // No object detected
 1181              		.loc 1 362 0
 1182 00b6 474B     		ldr	r3, .L108
 1183 00b8 0022     		movs	r2, #0
 1184 00ba 9A85     		strh	r2, [r3, #44]	@ movhi
 363:main.c        ****                 evasiveMode = 0;   // Disable evasive mode
 1185              		.loc 1 363 0
 1186 00bc 83F8E420 		strb	r2, [r3, #228]
 1187 00c0 10E0     		b	.L82
 1188              	.LVL132:
 1189              	.L84:
 364:main.c        ****             }
 365:main.c        ****         }
 366:main.c        ****         // condition to prevent buffer overflow
 367:main.c        ****         else if (rearIndex < sizeof(rearBuffer) - 1) {
 1190              		.loc 1 367 0
 1191 00c2 444B     		ldr	r3, .L108
 1192 00c4 93F8C030 		ldrb	r3, [r3, #192]	@ zero_extendqisi2
 1193 00c8 1E2B     		cmp	r3, #30
 1194 00ca 07D8     		bhi	.L90
 368:main.c        ****             rearBuffer[rearIndex++] = receivedChar;
 1195              		.loc 1 368 0
 1196 00cc 414A     		ldr	r2, .L108
 1197 00ce 591C     		adds	r1, r3, #1
 1198 00d0 82F8C010 		strb	r1, [r2, #192]
 1199 00d4 1344     		add	r3, r3, r2
 1200 00d6 83F8C400 		strb	r0, [r3, #196]
 1201 00da 03E0     		b	.L82
 1202              	.L90:
 369:main.c        ****         }
 370:main.c        ****         else {
 371:main.c        ****             rearIndex = 0;  // reset buffer on overflow
 1203              		.loc 1 371 0
 1204 00dc 0022     		movs	r2, #0
 1205 00de 3D4B     		ldr	r3, .L108
 1206 00e0 83F8C020 		strb	r2, [r3, #192]
 1207              	.LVL133:
 1208              	.L82:
 1209              	.LBE9:
 318:main.c        ****         char receivedChar = UART_1_GetChar();
 1210              		.loc 1 318 0
 1211 00e4 FFF7FEFF 		bl	UART_1_GetRxBufferSize
 1212              	.LVL134:
 1213 00e8 0028     		cmp	r0, #0
 1214 00ea 8BD1     		bne	.L91
 372:main.c        ****         }
 373:main.c        ****     }
 374:main.c        ****     
 375:main.c        ****     if (rearDistance == 0) {
 1215              		.loc 1 375 0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 29


 1216 00ec 394B     		ldr	r3, .L108
 1217 00ee 9B8D     		ldrh	r3, [r3, #44]
 1218 00f0 93B3     		cbz	r3, .L92
 1219 00f2 08BD     		pop	{r3, pc}
 1220              	.L99:
 1221              	.LBB11:
 376:main.c        ****         // left camera input
 377:main.c        ****         while (UART_3_GetRxBufferSize() > 0) {
 378:main.c        ****             char receivedChar = UART_3_GetChar();
 1222              		.loc 1 378 0
 1223 00f4 FFF7FEFF 		bl	UART_3_GetChar
 1224              	.LVL135:
 379:main.c        **** 
 380:main.c        ****             if (receivedChar == '\r' || receivedChar == '\n') {
 1225              		.loc 1 380 0
 1226 00f8 0D28     		cmp	r0, #13
 1227 00fa 01D0     		beq	.L94
 1228              		.loc 1 380 0 is_stmt 0 discriminator 1
 1229 00fc 0A28     		cmp	r0, #10
 1230 00fe 1AD1     		bne	.L95
 1231              	.L94:
 381:main.c        ****                 leftBuffer[leftIndex] = '\0';
 1232              		.loc 1 381 0 is_stmt 1
 1233 0100 3448     		ldr	r0, .L108
 1234              	.LVL136:
 1235 0102 90F8E530 		ldrb	r3, [r0, #229]	@ zero_extendqisi2
 1236 0106 0344     		add	r3, r3, r0
 1237 0108 0022     		movs	r2, #0
 1238 010a 83F8E820 		strb	r2, [r3, #232]
 382:main.c        ****                 leftIndex = 0;
 1239              		.loc 1 382 0
 1240 010e 80F8E520 		strb	r2, [r0, #229]
 383:main.c        **** //                UART_1_PutString("flee leftBuffer:");
 384:main.c        **** //                UART_1_PutString(leftBuffer);
 385:main.c        **** //                UART_1_PutString("\r\n");
 386:main.c        ****                 if (strcmp(leftBuffer, "1") == 0){ 
 1241              		.loc 1 386 0
 1242 0112 3949     		ldr	r1, .L108+36
 1243 0114 E830     		adds	r0, r0, #232
 1244 0116 FFF7FEFF 		bl	strcmp
 1245              	.LVL137:
 1246 011a 18B9     		cbnz	r0, .L96
 387:main.c        ****                     PWM_1_WriteCompare(200);
 1247              		.loc 1 387 0
 1248 011c C820     		movs	r0, #200
 1249 011e FFF7FEFF 		bl	PWM_1_WriteCompare
 1250              	.LVL138:
 1251 0122 19E0     		b	.L92
 1252              	.L96:
 388:main.c        ****                 }
 389:main.c        ****                 else if (strcmp(leftBuffer, "0") == 0) { 
 1253              		.loc 1 389 0
 1254 0124 3549     		ldr	r1, .L108+40
 1255 0126 3648     		ldr	r0, .L108+44
 1256 0128 FFF7FEFF 		bl	strcmp
 1257              	.LVL139:
 1258 012c A0B9     		cbnz	r0, .L92
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 30


 390:main.c        ****                     PWM_1_WriteCompare(127);
 1259              		.loc 1 390 0
 1260 012e 7F20     		movs	r0, #127
 1261 0130 FFF7FEFF 		bl	PWM_1_WriteCompare
 1262              	.LVL140:
 1263 0134 10E0     		b	.L92
 1264              	.LVL141:
 1265              	.L95:
 391:main.c        ****                 }
 392:main.c        ****             }
 393:main.c        ****             // condition to prevent buffer overflow
 394:main.c        ****             else if (leftIndex < sizeof(leftBuffer) - 1) {
 1266              		.loc 1 394 0
 1267 0136 274B     		ldr	r3, .L108
 1268 0138 93F8E530 		ldrb	r3, [r3, #229]	@ zero_extendqisi2
 1269 013c 1E2B     		cmp	r3, #30
 1270 013e 07D8     		bhi	.L98
 395:main.c        ****                 leftBuffer[leftIndex++] = receivedChar;
 1271              		.loc 1 395 0
 1272 0140 244A     		ldr	r2, .L108
 1273 0142 591C     		adds	r1, r3, #1
 1274 0144 82F8E510 		strb	r1, [r2, #229]
 1275 0148 1344     		add	r3, r3, r2
 1276 014a 83F8E800 		strb	r0, [r3, #232]
 1277 014e 03E0     		b	.L92
 1278              	.L98:
 396:main.c        ****             }
 397:main.c        ****             else {
 398:main.c        ****                 leftIndex = 0;  // reset buffer on overflow
 1279              		.loc 1 398 0
 1280 0150 0022     		movs	r2, #0
 1281 0152 204B     		ldr	r3, .L108
 1282 0154 83F8E520 		strb	r2, [r3, #229]
 1283              	.LVL142:
 1284              	.L92:
 1285              	.LBE11:
 377:main.c        ****             char receivedChar = UART_3_GetChar();
 1286              		.loc 1 377 0
 1287 0158 FFF7FEFF 		bl	UART_3_GetRxBufferSize
 1288              	.LVL143:
 1289 015c 0028     		cmp	r0, #0
 1290 015e C9D1     		bne	.L99
 1291 0160 32E0     		b	.L100
 1292              	.L106:
 1293              	.LBB12:
 399:main.c        ****             }
 400:main.c        ****         }
 401:main.c        ****         
 402:main.c        ****         // right camera input
 403:main.c        ****         while (UART_4_GetRxBufferSize() > 0) {
 404:main.c        ****             char receivedChar = UART_4_GetChar();
 1294              		.loc 1 404 0
 1295 0162 FFF7FEFF 		bl	UART_4_GetChar
 1296              	.LVL144:
 405:main.c        **** 
 406:main.c        ****             if (receivedChar == '\r' || receivedChar == '\n') {
 1297              		.loc 1 406 0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 31


 1298 0166 0D28     		cmp	r0, #13
 1299 0168 01D0     		beq	.L101
 1300              		.loc 1 406 0 is_stmt 0 discriminator 1
 1301 016a 0A28     		cmp	r0, #10
 1302 016c 1BD1     		bne	.L102
 1303              	.L101:
 407:main.c        ****                 rightBuffer[rightIndex] = '\0';
 1304              		.loc 1 407 0 is_stmt 1
 1305 016e 1948     		ldr	r0, .L108
 1306              	.LVL145:
 1307 0170 90F80831 		ldrb	r3, [r0, #264]	@ zero_extendqisi2
 1308 0174 0344     		add	r3, r3, r0
 1309 0176 0022     		movs	r2, #0
 1310 0178 83F80C21 		strb	r2, [r3, #268]
 408:main.c        ****                 rightIndex = 0;
 1311              		.loc 1 408 0
 1312 017c 80F80821 		strb	r2, [r0, #264]
 409:main.c        **** //                UART_1_PutString("flee rightBuffer:");
 410:main.c        **** //                UART_1_PutString(rightBuffer);
 411:main.c        **** //                UART_1_PutString("\r\n");
 412:main.c        ****                 if (strcmp(rightBuffer, "1") == 0){ 
 1313              		.loc 1 412 0
 1314 0180 1D49     		ldr	r1, .L108+36
 1315 0182 00F58670 		add	r0, r0, #268
 1316 0186 FFF7FEFF 		bl	strcmp
 1317              	.LVL146:
 1318 018a 18B9     		cbnz	r0, .L103
 413:main.c        ****                     PWM_1_WriteCompare(20);
 1319              		.loc 1 413 0
 1320 018c 1420     		movs	r0, #20
 1321 018e FFF7FEFF 		bl	PWM_1_WriteCompare
 1322              	.LVL147:
 1323 0192 19E0     		b	.L100
 1324              	.L103:
 414:main.c        ****                 }
 415:main.c        ****                 else if (strcmp(rightBuffer, "0") == 0) { 
 1325              		.loc 1 415 0
 1326 0194 1949     		ldr	r1, .L108+40
 1327 0196 1B48     		ldr	r0, .L108+48
 1328 0198 FFF7FEFF 		bl	strcmp
 1329              	.LVL148:
 1330 019c A0B9     		cbnz	r0, .L100
 416:main.c        ****                     PWM_1_WriteCompare(127);
 1331              		.loc 1 416 0
 1332 019e 7F20     		movs	r0, #127
 1333 01a0 FFF7FEFF 		bl	PWM_1_WriteCompare
 1334              	.LVL149:
 1335 01a4 10E0     		b	.L100
 1336              	.LVL150:
 1337              	.L102:
 417:main.c        ****                 }
 418:main.c        ****             }
 419:main.c        ****             // condition to prevent buffer overflow
 420:main.c        ****             else if (rightIndex < sizeof(rightBuffer) - 1) {
 1338              		.loc 1 420 0
 1339 01a6 0B4B     		ldr	r3, .L108
 1340 01a8 93F80831 		ldrb	r3, [r3, #264]	@ zero_extendqisi2
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 32


 1341 01ac 1E2B     		cmp	r3, #30
 1342 01ae 07D8     		bhi	.L105
 421:main.c        ****                 rightBuffer[rightIndex++] = receivedChar;
 1343              		.loc 1 421 0
 1344 01b0 084A     		ldr	r2, .L108
 1345 01b2 591C     		adds	r1, r3, #1
 1346 01b4 82F80811 		strb	r1, [r2, #264]
 1347 01b8 1344     		add	r3, r3, r2
 1348 01ba 83F80C01 		strb	r0, [r3, #268]
 1349 01be 03E0     		b	.L100
 1350              	.L105:
 422:main.c        ****             }
 423:main.c        ****             else {
 424:main.c        ****                 rightIndex = 0;  // reset buffer on overflow
 1351              		.loc 1 424 0
 1352 01c0 0022     		movs	r2, #0
 1353 01c2 044B     		ldr	r3, .L108
 1354 01c4 83F80821 		strb	r2, [r3, #264]
 1355              	.LVL151:
 1356              	.L100:
 1357              	.LBE12:
 403:main.c        ****             char receivedChar = UART_4_GetChar();
 1358              		.loc 1 403 0
 1359 01c8 FFF7FEFF 		bl	UART_4_GetRxBufferSize
 1360              	.LVL152:
 1361 01cc 0028     		cmp	r0, #0
 1362 01ce C8D1     		bne	.L106
 1363 01d0 08BD     		pop	{r3, pc}
 1364              	.L109:
 1365 01d2 00BF     		.align	2
 1366              	.L108:
 1367 01d4 00000000 		.word	.LANCHOR1
 1368 01d8 0C000000 		.word	.LC1
 1369 01dc 1C000000 		.word	.LC2
 1370 01e0 C4000000 		.word	.LANCHOR1+196
 1371 01e4 00000000 		.word	.LANCHOR0
 1372 01e8 C8000000 		.word	.LC16
 1373 01ec E4000000 		.word	.LC17
 1374 01f0 00010000 		.word	.LC18
 1375 01f4 58000000 		.word	.LC7
 1376 01f8 B0000000 		.word	.LC13
 1377 01fc B4000000 		.word	.LC14
 1378 0200 E8000000 		.word	.LANCHOR1+232
 1379 0204 0C010000 		.word	.LANCHOR1+268
 1380              		.cfi_endproc
 1381              	.LFE67:
 1382              		.size	fleeMode, .-fleeMode
 1383              		.global	__aeabi_d2iz
 1384              		.section	.text.performEvasiveManeuver,"ax",%progbits
 1385              		.align	2
 1386              		.global	performEvasiveManeuver
 1387              		.thumb
 1388              		.thumb_func
 1389              		.type	performEvasiveManeuver, %function
 1390              	performEvasiveManeuver:
 1391              	.LFB68:
 425:main.c        ****             }
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 33


 426:main.c        ****         }
 427:main.c        ****     }
 428:main.c        **** }
 429:main.c        **** 
 430:main.c        **** // function to perform evasive maneuvers
 431:main.c        **** void performEvasiveManeuver() {
 1392              		.loc 1 431 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 32
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396 0000 10B5     		push	{r4, lr}
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 4, -8
 1399              		.cfi_offset 14, -4
 1400 0002 88B0     		sub	sp, sp, #32
 1401              		.cfi_def_cfa_offset 40
 432:main.c        ****     if (evasiveMode) {
 1402              		.loc 1 432 0
 1403 0004 2C4B     		ldr	r3, .L114+8
 1404 0006 93F8E430 		ldrb	r3, [r3, #228]	@ zero_extendqisi2
 1405 000a 002B     		cmp	r3, #0
 1406 000c 42D0     		beq	.L111
 1407              	.LBB13:
 433:main.c        ****         servoPWM = (rand() % 249) + 2;  // random PWM between 2 and 250
 1408              		.loc 1 433 0
 1409 000e FFF7FEFF 		bl	rand
 1410              	.LVL153:
 1411 0012 2A4A     		ldr	r2, .L114+12
 1412 0014 80FB0223 		smull	r2, r3, r0, r2
 1413 0018 C218     		adds	r2, r0, r3
 1414 001a C317     		asrs	r3, r0, #31
 1415 001c C3EBE213 		rsb	r3, r3, r2, asr #7
 1416 0020 C3EB4312 		rsb	r2, r3, r3, lsl #5
 1417 0024 03EBC203 		add	r3, r3, r2, lsl #3
 1418 0028 C31A     		subs	r3, r0, r3
 1419 002a 981C     		adds	r0, r3, #2
 1420 002c FFF7FEFF 		bl	__aeabi_i2d
 1421              	.LVL154:
 1422 0030 234C     		ldr	r4, .L114+16
 1423 0032 C4E90801 		strd	r0, [r4, #32]
 434:main.c        ****         PWM_1_WriteCompare((uint8)servoPWM);
 1424              		.loc 1 434 0
 1425 0036 FFF7FEFF 		bl	__aeabi_d2uiz
 1426              	.LVL155:
 1427 003a C0B2     		uxtb	r0, r0
 1428 003c FFF7FEFF 		bl	PWM_1_WriteCompare
 1429              	.LVL156:
 435:main.c        **** 
 436:main.c        ****         // log evasive action
 437:main.c        ****         char log[32];
 438:main.c        ****         sprintf(log, "PWM: %d\r\n", (int)servoPWM);
 1430              		.loc 1 438 0
 1431 0040 D4E90801 		ldrd	r0, [r4, #32]
 1432 0044 FFF7FEFF 		bl	__aeabi_d2iz
 1433              	.LVL157:
 1434 0048 0246     		mov	r2, r0
 1435 004a 1E49     		ldr	r1, .L114+20
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 34


 1436 004c 6846     		mov	r0, sp
 1437 004e FFF7FEFF 		bl	sprintf
 1438              	.LVL158:
 439:main.c        ****         UART_1_PutString(log);
 1439              		.loc 1 439 0
 1440 0052 6846     		mov	r0, sp
 1441 0054 FFF7FEFF 		bl	UART_1_PutString
 1442              	.LVL159:
 440:main.c        ****         
 441:main.c        ****         // insert 1-3 second randomized delay
 442:main.c        ****         int delayTime = (rand() % 3 + 1) * 1000;  // random delay between 1000ms (1s) and 3000ms (3
 1443              		.loc 1 442 0
 1444 0058 FFF7FEFF 		bl	rand
 1445              	.LVL160:
 1446 005c 1A4B     		ldr	r3, .L114+24
 1447 005e 83FB0023 		smull	r2, r3, r3, r0
 1448 0062 A3EBE073 		sub	r3, r3, r0, asr #31
 1449 0066 03EB4303 		add	r3, r3, r3, lsl #1
 1450 006a C31A     		subs	r3, r0, r3
 1451 006c 4FF47A74 		mov	r4, #1000
 1452 0070 03FB0444 		mla	r4, r3, r4, r4
 1453              	.LVL161:
 443:main.c        ****         CyDelay(delayTime);
 1454              		.loc 1 443 0
 1455 0074 2046     		mov	r0, r4
 1456 0076 FFF7FEFF 		bl	CyDelay
 1457              	.LVL162:
 444:main.c        ****         
 445:main.c        ****         // log delay time
 446:main.c        ****         sprintf(log, "Random delay: %d ms\r\n", delayTime);
 1458              		.loc 1 446 0
 1459 007a 2246     		mov	r2, r4
 1460 007c 1349     		ldr	r1, .L114+28
 1461 007e 6846     		mov	r0, sp
 1462 0080 FFF7FEFF 		bl	sprintf
 1463              	.LVL163:
 447:main.c        ****         UART_1_PutString(log);
 1464              		.loc 1 447 0
 1465 0084 6846     		mov	r0, sp
 1466 0086 FFF7FEFF 		bl	UART_1_PutString
 1467              	.LVL164:
 448:main.c        ****         
 449:main.c        ****         evasiveMode = 0;
 1468              		.loc 1 449 0
 1469 008a 0022     		movs	r2, #0
 1470 008c 0A4B     		ldr	r3, .L114+8
 1471 008e 83F8E420 		strb	r2, [r3, #228]
 1472              	.LBE13:
 1473 0092 08E0     		b	.L110
 1474              	.LVL165:
 1475              	.L111:
 450:main.c        ****     }
 451:main.c        ****     else {
 452:main.c        ****         servoPWM = 127;  // random PWM between 2 and 250
 1476              		.loc 1 452 0
 1477 0094 06A1     		adr	r1, .L114
 1478 0096 D1E90001 		ldrd	r0, [r1]
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 35


 1479 009a 094B     		ldr	r3, .L114+16
 1480 009c C3E90801 		strd	r0, [r3, #32]
 453:main.c        ****         PWM_1_WriteCompare((uint8)servoPWM);    
 1481              		.loc 1 453 0
 1482 00a0 7F20     		movs	r0, #127
 1483 00a2 FFF7FEFF 		bl	PWM_1_WriteCompare
 1484              	.LVL166:
 1485              	.L110:
 454:main.c        ****     }
 455:main.c        **** }
 1486              		.loc 1 455 0
 1487 00a6 08B0     		add	sp, sp, #32
 1488              		.cfi_def_cfa_offset 8
 1489              		@ sp needed
 1490 00a8 10BD     		pop	{r4, pc}
 1491              	.L115:
 1492 00aa 00BFAFF3 		.align	3
 1492      0080
 1493              	.L114:
 1494 00b0 00000000 		.word	0
 1495 00b4 00C05F40 		.word	1080016896
 1496 00b8 00000000 		.word	.LANCHOR1
 1497 00bc 53309983 		.word	-2087112621
 1498 00c0 00000000 		.word	.LANCHOR0
 1499 00c4 20010000 		.word	.LC19
 1500 00c8 56555555 		.word	1431655766
 1501 00cc 2C010000 		.word	.LC20
 1502              		.cfi_endproc
 1503              	.LFE68:
 1504              		.size	performEvasiveManeuver, .-performEvasiveManeuver
 1505              		.section	.text.main,"ax",%progbits
 1506              		.align	2
 1507              		.global	main
 1508              		.thumb
 1509              		.thumb_func
 1510              		.type	main, %function
 1511              	main:
 1512              	.LFB69:
 456:main.c        **** 
 457:main.c        **** int main(void) {
 1513              		.loc 1 457 0
 1514              		.cfi_startproc
 1515              		@ Volatile: function does not return.
 1516              		@ args = 0, pretend = 0, frame = 0
 1517              		@ frame_needed = 0, uses_anonymous_args = 0
 1518 0000 08B5     		push	{r3, lr}
 1519              		.cfi_def_cfa_offset 8
 1520              		.cfi_offset 3, -8
 1521              		.cfi_offset 14, -4
 458:main.c        ****     CyGlobalIntEnable;  // enable global interrupts
 1522              		.loc 1 458 0
 1523              		.syntax unified
 1524              	@ 458 "main.c" 1
 1525 0002 62B6     		CPSIE   i
 1526              	@ 0 "" 2
 459:main.c        **** 
 460:main.c        ****     HE_Interrupt_Start();
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 36


 1527              		.loc 1 460 0
 1528              		.thumb
 1529              		.syntax unified
 1530 0004 FFF7FEFF 		bl	HE_Interrupt_Start
 1531              	.LVL167:
 461:main.c        ****     front_interrupt_Start();
 1532              		.loc 1 461 0
 1533 0008 FFF7FEFF 		bl	front_interrupt_Start
 1534              	.LVL168:
 462:main.c        ****     front_right_interrupt_Start();
 1535              		.loc 1 462 0
 1536 000c FFF7FEFF 		bl	front_right_interrupt_Start
 1537              	.LVL169:
 463:main.c        ****     front_left_interrupt_Start();
 1538              		.loc 1 463 0
 1539 0010 FFF7FEFF 		bl	front_left_interrupt_Start
 1540              	.LVL170:
 464:main.c        ****     turn_interrupt_Start();
 1541              		.loc 1 464 0
 1542 0014 FFF7FEFF 		bl	turn_interrupt_Start
 1543              	.LVL171:
 465:main.c        ****     Timer_Start();
 1544              		.loc 1 465 0
 1545 0018 FFF7FEFF 		bl	Timer_Start
 1546              	.LVL172:
 466:main.c        ****     PWM_Start();
 1547              		.loc 1 466 0
 1548 001c FFF7FEFF 		bl	PWM_Start
 1549              	.LVL173:
 467:main.c        ****     
 468:main.c        ****     // inputting the location of the interrupt
 469:main.c        ****     HE_Interrupt_SetVector(inter_1);
 1550              		.loc 1 469 0
 1551 0020 1648     		ldr	r0, .L121
 1552 0022 FFF7FEFF 		bl	HE_Interrupt_SetVector
 1553              	.LVL174:
 470:main.c        ****     front_interrupt_SetVector(inter_2);
 1554              		.loc 1 470 0
 1555 0026 164C     		ldr	r4, .L121+4
 1556 0028 2046     		mov	r0, r4
 1557 002a FFF7FEFF 		bl	front_interrupt_SetVector
 1558              	.LVL175:
 471:main.c        ****     front_right_interrupt_SetVector(inter_2);
 1559              		.loc 1 471 0
 1560 002e 2046     		mov	r0, r4
 1561 0030 FFF7FEFF 		bl	front_right_interrupt_SetVector
 1562              	.LVL176:
 472:main.c        ****     front_left_interrupt_SetVector(inter_2);
 1563              		.loc 1 472 0
 1564 0034 2046     		mov	r0, r4
 1565 0036 FFF7FEFF 		bl	front_left_interrupt_SetVector
 1566              	.LVL177:
 473:main.c        ****     // turn_interrupt_SetVector(inter_3);
 474:main.c        ****     
 475:main.c        **** //    back_interrupt_SetVector(inter_4);
 476:main.c        **** //    back_right_interrupt_SetVector(inter_4);
 477:main.c        **** //    back_left_interrupt_SetVector(inter_4);
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 37


 478:main.c        ****     
 479:main.c        ****     UART_1_Start();     // start UART for rear Arduino
 1567              		.loc 1 479 0
 1568 003a FFF7FEFF 		bl	UART_1_Start
 1569              	.LVL178:
 480:main.c        ****     UART_2_Start();     // start UART for front Arduino
 1570              		.loc 1 480 0
 1571 003e FFF7FEFF 		bl	UART_2_Start
 1572              	.LVL179:
 481:main.c        ****     UART_3_Start();     // start UART for left Arduino
 1573              		.loc 1 481 0
 1574 0042 FFF7FEFF 		bl	UART_3_Start
 1575              	.LVL180:
 482:main.c        ****     UART_4_Start();     // start UART for right Arduino
 1576              		.loc 1 482 0
 1577 0046 FFF7FEFF 		bl	UART_4_Start
 1578              	.LVL181:
 483:main.c        ****     
 484:main.c        ****     PWM_1_Start();      // start PWM for servo control
 1579              		.loc 1 484 0
 1580 004a FFF7FEFF 		bl	PWM_1_Start
 1581              	.LVL182:
 485:main.c        **** 
 486:main.c        ****     // set initial servo position (centered)
 487:main.c        ****     PWM_1_WriteCompare(127);
 1582              		.loc 1 487 0
 1583 004e 7F20     		movs	r0, #127
 1584 0050 FFF7FEFF 		bl	PWM_1_WriteCompare
 1585              	.LVL183:
 488:main.c        ****     
 489:main.c        ****     srand(time(NULL));  // seed random number generator for evasive maneuvers
 1586              		.loc 1 489 0
 1587 0054 0020     		movs	r0, #0
 1588 0056 FFF7FEFF 		bl	time
 1589              	.LVL184:
 1590 005a FFF7FEFF 		bl	srand
 1591              	.LVL185:
 1592              	.L117:
 490:main.c        **** 
 491:main.c        ****     for (;;) {
 492:main.c        ****         if (MODE_Read() == 0) {
 1593              		.loc 1 492 0
 1594 005e FFF7FEFF 		bl	MODE_Read
 1595              	.LVL186:
 1596 0062 10B9     		cbnz	r0, .L118
 493:main.c        ****             chaseMode();     // process front and side camera feed to chase
 1597              		.loc 1 493 0
 1598 0064 FFF7FEFF 		bl	chaseMode
 1599              	.LVL187:
 1600 0068 F9E7     		b	.L117
 1601              	.L118:
 494:main.c        ****         }
 495:main.c        ****         else if (MODE_Read() == 1){
 1602              		.loc 1 495 0
 1603 006a FFF7FEFF 		bl	MODE_Read
 1604              	.LVL188:
 1605 006e 0128     		cmp	r0, #1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 38


 1606 0070 F5D1     		bne	.L117
 496:main.c        ****             fleeMode();                 // process rear and side camera feed to flea
 1607              		.loc 1 496 0
 1608 0072 FFF7FEFF 		bl	fleeMode
 1609              	.LVL189:
 497:main.c        ****             performEvasiveManeuver();   // perform evasive actions if necessary
 1610              		.loc 1 497 0
 1611 0076 FFF7FEFF 		bl	performEvasiveManeuver
 1612              	.LVL190:
 1613 007a F0E7     		b	.L117
 1614              	.L122:
 1615              		.align	2
 1616              	.L121:
 1617 007c 00000000 		.word	inter_1
 1618 0080 00000000 		.word	inter_2
 1619              		.cfi_endproc
 1620              	.LFE69:
 1621              		.size	main, .-main
 1622              		.global	PWM_base
 1623              		.global	accumulated_error
 1624              		.global	ki
 1625              		.global	kp
 1626              		.comm	speed,8,8
 1627              		.comm	PWM,8,8
 1628              		.comm	strbuf2,32,4
 1629              		.comm	elapsed_time,2,2
 1630              		.comm	new_time,2,2
 1631              		.global	old_time
 1632              		.global	targetSpeed
 1633              		.global	turn
 1634              		.global	rearDistance
 1635              		.global	frontDistance
 1636              		.global	evasiveMode
 1637              		.global	servoPWM
 1638              		.global	cx
 1639              		.data
 1640              		.align	3
 1641              		.set	.LANCHOR0,. + 0
 1642              		.type	old_time, %object
 1643              		.size	old_time, 2
 1644              	old_time:
 1645 0000 FFFF     		.short	-1
 1646              		.type	targetSpeed, %object
 1647              		.size	targetSpeed, 2
 1648              	targetSpeed:
 1649 0002 0300     		.short	3
 1650 0004 00000000 		.space	4
 1651              		.type	kp, %object
 1652              		.size	kp, 8
 1653              	kp:
 1654 0008 00000000 		.word	0
 1655 000c 00003440 		.word	1077149696
 1656              		.type	PWM_base, %object
 1657              		.size	PWM_base, 8
 1658              	PWM_base:
 1659 0010 00000000 		.word	0
 1660 0014 00002E40 		.word	1076756480
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 39


 1661              		.type	ki, %object
 1662              		.size	ki, 8
 1663              	ki:
 1664 0018 9A999999 		.word	-1717986918
 1665 001c 9999C93F 		.word	1070176665
 1666              		.type	servoPWM, %object
 1667              		.size	servoPWM, 8
 1668              	servoPWM:
 1669 0020 00000000 		.word	0
 1670 0024 00C05F40 		.word	1080016896
 1671              		.section	.rodata.str1.4,"aMS",%progbits,1
 1672              		.align	2
 1673              	.LC0:
 1674 0000 25752025 		.ascii	"%u %f %f\000"
 1674      66202566 
 1674      00
 1675 0009 000000   		.space	3
 1676              	.LC1:
 1677 000c 72635F64 		.ascii	"rc_detected:1\000"
 1677      65746563 
 1677      7465643A 
 1677      3100
 1678 001a 0000     		.space	2
 1679              	.LC2:
 1680 001c 64697374 		.ascii	"dist:\000"
 1680      3A00
 1681 0022 0000     		.space	2
 1682              	.LC3:
 1683 0024 54616767 		.ascii	"Tagged.\015\012\000"
 1683      65642E0D 
 1683      0A00
 1684 002e 0000     		.space	2
 1685              	.LC4:
 1686 0030 256400   		.ascii	"%d\000"
 1687 0033 00       		.space	1
 1688              	.LC5:
 1689 0034 0D0A00   		.ascii	"\015\012\000"
 1690 0037 00       		.space	1
 1691              	.LC6:
 1692 0038 2A2A2A2A 		.ascii	"**************************\015\012\000"
 1692      2A2A2A2A 
 1692      2A2A2A2A 
 1692      2A2A2A2A 
 1692      2A2A2A2A 
 1693 0055 000000   		.space	3
 1694              	.LC7:
 1695 0058 72635F64 		.ascii	"rc_detected:0\000"
 1695      65746563 
 1695      7465643A 
 1695      3000
 1696 0066 0000     		.space	2
 1697              	.LC8:
 1698 0068 63783A00 		.ascii	"cx:\000"
 1699              	.LC9:
 1700 006c 66726F6E 		.ascii	"frontBuffer:\000"
 1700      74427566 
 1700      6665723A 
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 40


 1700      00
 1701 0079 000000   		.space	3
 1702              	.LC10:
 1703 007c 54616767 		.ascii	"Tagged. Now in Flee mode.\000"
 1703      65642E20 
 1703      4E6F7720 
 1703      696E2046 
 1703      6C656520 
 1704 0096 0000     		.space	2
 1705              	.LC11:
 1706 0098 72656172 		.ascii	"rearBuffer:\000"
 1706      42756666 
 1706      65723A00 
 1707              	.LC12:
 1708 00a4 6C656674 		.ascii	"leftBuffer:\000"
 1708      42756666 
 1708      65723A00 
 1709              	.LC13:
 1710 00b0 3100     		.ascii	"1\000"
 1711 00b2 0000     		.space	2
 1712              	.LC14:
 1713 00b4 3000     		.ascii	"0\000"
 1714 00b6 0000     		.space	2
 1715              	.LC15:
 1716 00b8 72696768 		.ascii	"rightBuffer:\000"
 1716      74427566 
 1716      6665723A 
 1716      00
 1717 00c5 000000   		.space	3
 1718              	.LC16:
 1719 00c8 45766173 		.ascii	"Evasive mode activated.\015\012\000"
 1719      69766520 
 1719      6D6F6465 
 1719      20616374 
 1719      69766174 
 1720 00e2 0000     		.space	2
 1721              	.LC17:
 1722 00e4 45766173 		.ascii	"Evasive mode deactivated.\015\012\000"
 1722      69766520 
 1722      6D6F6465 
 1722      20646561 
 1722      63746976 
 1723              	.LC18:
 1724 0100 54616767 		.ascii	"Tagged. Now in chase mode.\015\012\000"
 1724      65642E20 
 1724      4E6F7720 
 1724      696E2063 
 1724      68617365 
 1725 011d 000000   		.space	3
 1726              	.LC19:
 1727 0120 50574D3A 		.ascii	"PWM: %d\015\012\000"
 1727      2025640D 
 1727      0A00
 1728 012a 0000     		.space	2
 1729              	.LC20:
 1730 012c 52616E64 		.ascii	"Random delay: %d ms\015\012\000"
 1730      6F6D2064 
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 41


 1730      656C6179 
 1730      3A202564 
 1730      206D730D 
 1731              		.bss
 1732              		.align	3
 1733              		.set	.LANCHOR1,. + 0
 1734              		.type	accumulated_error, %object
 1735              		.size	accumulated_error, 8
 1736              	accumulated_error:
 1737 0000 00000000 		.space	8
 1737      00000000 
 1738              		.type	turn, %object
 1739              		.size	turn, 1
 1740              	turn:
 1741 0008 00       		.space	1
 1742              		.type	readIndex.7793, %object
 1743              		.size	readIndex.7793, 1
 1744              	readIndex.7793:
 1745 0009 00       		.space	1
 1746 000a 0000     		.space	2
 1747              		.type	rearBuffer.7792, %object
 1748              		.size	rearBuffer.7792, 32
 1749              	rearBuffer.7792:
 1750 000c 00000000 		.space	32
 1750      00000000 
 1750      00000000 
 1750      00000000 
 1750      00000000 
 1751              		.type	rearDistance, %object
 1752              		.size	rearDistance, 2
 1753              	rearDistance:
 1754 002c 0000     		.space	2
 1755              		.type	frontIndex.7805, %object
 1756              		.size	frontIndex.7805, 1
 1757              	frontIndex.7805:
 1758 002e 00       		.space	1
 1759 002f 00       		.space	1
 1760              		.type	frontBuffer.7801, %object
 1761              		.size	frontBuffer.7801, 32
 1762              	frontBuffer.7801:
 1763 0030 00000000 		.space	32
 1763      00000000 
 1763      00000000 
 1763      00000000 
 1763      00000000 
 1764              		.type	cx, %object
 1765              		.size	cx, 4
 1766              	cx:
 1767 0050 00000000 		.space	4
 1768              		.type	frontDistance, %object
 1769              		.size	frontDistance, 2
 1770              	frontDistance:
 1771 0054 0000     		.space	2
 1772              		.type	rearIndex.7806, %object
 1773              		.size	rearIndex.7806, 1
 1774              	rearIndex.7806:
 1775 0056 00       		.space	1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 42


 1776 0057 00       		.space	1
 1777              		.type	rearBuffer.7802, %object
 1778              		.size	rearBuffer.7802, 32
 1779              	rearBuffer.7802:
 1780 0058 00000000 		.space	32
 1780      00000000 
 1780      00000000 
 1780      00000000 
 1780      00000000 
 1781              		.type	leftIndex.7807, %object
 1782              		.size	leftIndex.7807, 1
 1783              	leftIndex.7807:
 1784 0078 00       		.space	1
 1785 0079 000000   		.space	3
 1786              		.type	leftBuffer.7803, %object
 1787              		.size	leftBuffer.7803, 32
 1788              	leftBuffer.7803:
 1789 007c 00000000 		.space	32
 1789      00000000 
 1789      00000000 
 1789      00000000 
 1789      00000000 
 1790              		.type	rightIndex.7808, %object
 1791              		.size	rightIndex.7808, 1
 1792              	rightIndex.7808:
 1793 009c 00       		.space	1
 1794 009d 000000   		.space	3
 1795              		.type	rightBuffer.7804, %object
 1796              		.size	rightBuffer.7804, 32
 1797              	rightBuffer.7804:
 1798 00a0 00000000 		.space	32
 1798      00000000 
 1798      00000000 
 1798      00000000 
 1798      00000000 
 1799              		.type	rearIndex.7832, %object
 1800              		.size	rearIndex.7832, 1
 1801              	rearIndex.7832:
 1802 00c0 00       		.space	1
 1803 00c1 000000   		.space	3
 1804              		.type	rearBuffer.7829, %object
 1805              		.size	rearBuffer.7829, 32
 1806              	rearBuffer.7829:
 1807 00c4 00000000 		.space	32
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1808              		.type	evasiveMode, %object
 1809              		.size	evasiveMode, 1
 1810              	evasiveMode:
 1811 00e4 00       		.space	1
 1812              		.type	leftIndex.7833, %object
 1813              		.size	leftIndex.7833, 1
 1814              	leftIndex.7833:
 1815 00e5 00       		.space	1
 1816 00e6 0000     		.space	2
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 43


 1817              		.type	leftBuffer.7830, %object
 1818              		.size	leftBuffer.7830, 32
 1819              	leftBuffer.7830:
 1820 00e8 00000000 		.space	32
 1820      00000000 
 1820      00000000 
 1820      00000000 
 1820      00000000 
 1821              		.type	rightIndex.7834, %object
 1822              		.size	rightIndex.7834, 1
 1823              	rightIndex.7834:
 1824 0108 00       		.space	1
 1825 0109 000000   		.space	3
 1826              		.type	rightBuffer.7831, %object
 1827              		.size	rightBuffer.7831, 32
 1828              	rightBuffer.7831:
 1829 010c 00000000 		.space	32
 1829      00000000 
 1829      00000000 
 1829      00000000 
 1829      00000000 
 1830              		.text
 1831              	.Letext0:
 1832              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1833              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1834              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1835              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1836              		.file 6 "Generated_Source\\PSoC5/Timer.h"
 1837              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1838              		.file 8 "Generated_Source\\PSoC5/PWM.h"
 1839              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1840              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1841              		.file 11 "Generated_Source\\PSoC5/STOP.h"
 1842              		.file 12 "Generated_Source\\PSoC5/MODE.h"
 1843              		.file 13 "Generated_Source\\PSoC5/LED.h"
 1844              		.file 14 "Generated_Source\\PSoC5/UART_1.h"
 1845              		.file 15 "Generated_Source\\PSoC5/P_left_1.h"
 1846              		.file 16 "Generated_Source\\PSoC5/P_front_left.h"
 1847              		.file 17 "Generated_Source\\PSoC5/P_left_2.h"
 1848              		.file 18 "Generated_Source\\PSoC5/P_right_1.h"
 1849              		.file 19 "Generated_Source\\PSoC5/P_front_right.h"
 1850              		.file 20 "Generated_Source\\PSoC5/P_right_2.h"
 1851              		.file 21 "Generated_Source\\PSoC5/PWM_1.h"
 1852              		.file 22 "Generated_Source\\PSoC5/UART_2.h"
 1853              		.file 23 "Generated_Source\\PSoC5/CyLib.h"
 1854              		.file 24 "Generated_Source\\PSoC5/UART_3.h"
 1855              		.file 25 "Generated_Source\\PSoC5/UART_4.h"
 1856              		.file 26 "Generated_Source\\PSoC5/HE_Interrupt.h"
 1857              		.file 27 "Generated_Source\\PSoC5/front_interrupt.h"
 1858              		.file 28 "Generated_Source\\PSoC5/front_right_interrupt.h"
 1859              		.file 29 "Generated_Source\\PSoC5/front_left_interrupt.h"
 1860              		.file 30 "Generated_Source\\PSoC5/turn_interrupt.h"
 1861              		.file 31 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1862              		.section	.debug_info,"",%progbits
 1863              	.Ldebug_info0:
 1864 0000 00100000 		.4byte	0x1000
 1865 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 44


 1866 0006 00000000 		.4byte	.Ldebug_abbrev0
 1867 000a 04       		.byte	0x4
 1868 000b 01       		.uleb128 0x1
 1869 000c 33050000 		.4byte	.LASF99
 1870 0010 0C       		.byte	0xc
 1871 0011 C9030000 		.4byte	.LASF100
 1872 0015 ED040000 		.4byte	.LASF101
 1873 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1874 001d 00000000 		.4byte	0
 1875 0021 00000000 		.4byte	.Ldebug_line0
 1876 0025 02       		.uleb128 0x2
 1877 0026 01       		.byte	0x1
 1878 0027 06       		.byte	0x6
 1879 0028 2B030000 		.4byte	.LASF0
 1880 002c 02       		.uleb128 0x2
 1881 002d 01       		.byte	0x1
 1882 002e 08       		.byte	0x8
 1883 002f 90020000 		.4byte	.LASF1
 1884 0033 02       		.uleb128 0x2
 1885 0034 02       		.byte	0x2
 1886 0035 05       		.byte	0x5
 1887 0036 70000000 		.4byte	.LASF2
 1888 003a 02       		.uleb128 0x2
 1889 003b 02       		.byte	0x2
 1890 003c 07       		.byte	0x7
 1891 003d 18030000 		.4byte	.LASF3
 1892 0041 03       		.uleb128 0x3
 1893 0042 61040000 		.4byte	.LASF9
 1894 0046 02       		.byte	0x2
 1895 0047 3F       		.byte	0x3f
 1896 0048 4C000000 		.4byte	0x4c
 1897 004c 02       		.uleb128 0x2
 1898 004d 04       		.byte	0x4
 1899 004e 05       		.byte	0x5
 1900 004f F1010000 		.4byte	.LASF4
 1901 0053 02       		.uleb128 0x2
 1902 0054 04       		.byte	0x4
 1903 0055 07       		.byte	0x7
 1904 0056 D0030000 		.4byte	.LASF5
 1905 005a 02       		.uleb128 0x2
 1906 005b 08       		.byte	0x8
 1907 005c 05       		.byte	0x5
 1908 005d C0010000 		.4byte	.LASF6
 1909 0061 02       		.uleb128 0x2
 1910 0062 08       		.byte	0x8
 1911 0063 07       		.byte	0x7
 1912 0064 BC020000 		.4byte	.LASF7
 1913 0068 04       		.uleb128 0x4
 1914 0069 04       		.byte	0x4
 1915 006a 05       		.byte	0x5
 1916 006b 696E7400 		.ascii	"int\000"
 1917 006f 02       		.uleb128 0x2
 1918 0070 04       		.byte	0x4
 1919 0071 07       		.byte	0x7
 1920 0072 D3020000 		.4byte	.LASF8
 1921 0076 03       		.uleb128 0x3
 1922 0077 4F030000 		.4byte	.LASF10
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 45


 1923 007b 03       		.byte	0x3
 1924 007c 2C       		.byte	0x2c
 1925 007d 41000000 		.4byte	0x41
 1926 0081 05       		.uleb128 0x5
 1927 0082 55010000 		.4byte	.LASF11
 1928 0086 04       		.byte	0x4
 1929 0087 E901     		.2byte	0x1e9
 1930 0089 2C000000 		.4byte	0x2c
 1931 008d 05       		.uleb128 0x5
 1932 008e 4E010000 		.4byte	.LASF12
 1933 0092 04       		.byte	0x4
 1934 0093 EA01     		.2byte	0x1ea
 1935 0095 3A000000 		.4byte	0x3a
 1936 0099 02       		.uleb128 0x2
 1937 009a 04       		.byte	0x4
 1938 009b 04       		.byte	0x4
 1939 009c A7010000 		.4byte	.LASF13
 1940 00a0 02       		.uleb128 0x2
 1941 00a1 08       		.byte	0x8
 1942 00a2 04       		.byte	0x4
 1943 00a3 AD010000 		.4byte	.LASF14
 1944 00a7 02       		.uleb128 0x2
 1945 00a8 01       		.byte	0x1
 1946 00a9 08       		.byte	0x8
 1947 00aa 37030000 		.4byte	.LASF15
 1948 00ae 02       		.uleb128 0x2
 1949 00af 08       		.byte	0x8
 1950 00b0 04       		.byte	0x4
 1951 00b1 33010000 		.4byte	.LASF16
 1952 00b5 02       		.uleb128 0x2
 1953 00b6 04       		.byte	0x4
 1954 00b7 07       		.byte	0x7
 1955 00b8 91000000 		.4byte	.LASF17
 1956 00bc 06       		.uleb128 0x6
 1957 00bd 04       		.byte	0x4
 1958 00be A7000000 		.4byte	0xa7
 1959 00c2 07       		.uleb128 0x7
 1960 00c3 7A000000 		.4byte	.LASF18
 1961 00c7 01       		.byte	0x1
 1962 00c8 2B       		.byte	0x2b
 1963 00c9 00000000 		.4byte	.LFB64
 1964 00cd 40010000 		.4byte	.LFE64-.LFB64
 1965 00d1 01       		.uleb128 0x1
 1966 00d2 9C       		.byte	0x9c
 1967 00d3 19010000 		.4byte	0x119
 1968 00d7 08       		.uleb128 0x8
 1969 00d8 0A000000 		.4byte	.LVL0
 1970 00dc E80D0000 		.4byte	0xde8
 1971 00e0 08       		.uleb128 0x8
 1972 00e1 2C000000 		.4byte	.LVL1
 1973 00e5 F30D0000 		.4byte	0xdf3
 1974 00e9 09       		.uleb128 0x9
 1975 00ea CC000000 		.4byte	.LVL12
 1976 00ee FE0D0000 		.4byte	0xdfe
 1977 00f2 0F010000 		.4byte	0x10f
 1978 00f6 0A       		.uleb128 0xa
 1979 00f7 01       		.uleb128 0x1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 46


 1980 00f8 50       		.byte	0x50
 1981 00f9 05       		.uleb128 0x5
 1982 00fa 03       		.byte	0x3
 1983 00fb 00000000 		.4byte	strbuf2
 1984 00ff 0A       		.uleb128 0xa
 1985 0100 01       		.uleb128 0x1
 1986 0101 51       		.byte	0x51
 1987 0102 05       		.uleb128 0x5
 1988 0103 03       		.byte	0x3
 1989 0104 00000000 		.4byte	.LC0
 1990 0108 0A       		.uleb128 0xa
 1991 0109 01       		.uleb128 0x1
 1992 010a 52       		.byte	0x52
 1993 010b 02       		.uleb128 0x2
 1994 010c 7A       		.byte	0x7a
 1995 010d 00       		.sleb128 0
 1996 010e 00       		.byte	0
 1997 010f 08       		.uleb128 0x8
 1998 0110 0E010000 		.4byte	.LVL16
 1999 0114 090E0000 		.4byte	0xe09
 2000 0118 00       		.byte	0
 2001 0119 07       		.uleb128 0x7
 2002 011a D4050000 		.4byte	.LASF19
 2003 011e 01       		.byte	0x1
 2004 011f 57       		.byte	0x57
 2005 0120 00000000 		.4byte	.LFB65
 2006 0124 C0010000 		.4byte	.LFE65-.LFB65
 2007 0128 01       		.uleb128 0x1
 2008 0129 9C       		.byte	0x9c
 2009 012a 2C030000 		.4byte	0x32c
 2010 012e 0B       		.uleb128 0xb
 2011 012f DC050000 		.4byte	.LASF20
 2012 0133 01       		.byte	0x1
 2013 0134 69       		.byte	0x69
 2014 0135 2C030000 		.4byte	0x32c
 2015 0139 05       		.uleb128 0x5
 2016 013a 03       		.byte	0x3
 2017 013b 0C000000 		.4byte	rearBuffer.7792
 2018 013f 0B       		.uleb128 0xb
 2019 0140 78040000 		.4byte	.LASF21
 2020 0144 01       		.byte	0x1
 2021 0145 6A       		.byte	0x6a
 2022 0146 81000000 		.4byte	0x81
 2023 014a 05       		.uleb128 0x5
 2024 014b 03       		.byte	0x3
 2025 014c 09000000 		.4byte	readIndex.7793
 2026 0150 0C       		.uleb128 0xc
 2027 0151 B0000000 		.4byte	.LBB2
 2028 0155 D0000000 		.4byte	.LBE2-.LBB2
 2029 0159 AD020000 		.4byte	0x2ad
 2030 015d 0D       		.uleb128 0xd
 2031 015e 7E020000 		.4byte	.LASF22
 2032 0162 01       		.byte	0x1
 2033 0163 6D       		.byte	0x6d
 2034 0164 A7000000 		.4byte	0xa7
 2035 0168 00000000 		.4byte	.LLST0
 2036 016c 0C       		.uleb128 0xc
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 47


 2037 016d D6000000 		.4byte	.LBB3
 2038 0171 7C000000 		.4byte	.LBE3-.LBB3
 2039 0175 5D020000 		.4byte	0x25d
 2040 0179 0D       		.uleb128 0xd
 2041 017a 68000000 		.4byte	.LASF23
 2042 017e 01       		.byte	0x1
 2043 017f 75       		.byte	0x75
 2044 0180 BC000000 		.4byte	0xbc
 2045 0184 1E000000 		.4byte	.LLST1
 2046 0188 09       		.uleb128 0x9
 2047 0189 DE000000 		.4byte	.LVL34
 2048 018d 140E0000 		.4byte	0xe14
 2049 0191 A8010000 		.4byte	0x1a8
 2050 0195 0A       		.uleb128 0xa
 2051 0196 01       		.uleb128 0x1
 2052 0197 50       		.byte	0x50
 2053 0198 05       		.uleb128 0x5
 2054 0199 03       		.byte	0x3
 2055 019a 0C000000 		.4byte	.LANCHOR1+12
 2056 019e 0A       		.uleb128 0xa
 2057 019f 01       		.uleb128 0x1
 2058 01a0 51       		.byte	0x51
 2059 01a1 05       		.uleb128 0x5
 2060 01a2 03       		.byte	0x3
 2061 01a3 1C000000 		.4byte	.LC2
 2062 01a7 00       		.byte	0
 2063 01a8 08       		.uleb128 0x8
 2064 01a9 E8000000 		.4byte	.LVL36
 2065 01ad 1F0E0000 		.4byte	0xe1f
 2066 01b1 09       		.uleb128 0x9
 2067 01b2 16010000 		.4byte	.LVL37
 2068 01b6 2A0E0000 		.4byte	0xe2a
 2069 01ba C4010000 		.4byte	0x1c4
 2070 01be 0A       		.uleb128 0xa
 2071 01bf 01       		.uleb128 0x1
 2072 01c0 50       		.byte	0x50
 2073 01c1 01       		.uleb128 0x1
 2074 01c2 30       		.byte	0x30
 2075 01c3 00       		.byte	0
 2076 01c4 09       		.uleb128 0x9
 2077 01c5 1C010000 		.4byte	.LVL38
 2078 01c9 350E0000 		.4byte	0xe35
 2079 01cd D7010000 		.4byte	0x1d7
 2080 01d1 0A       		.uleb128 0xa
 2081 01d2 01       		.uleb128 0x1
 2082 01d3 50       		.byte	0x50
 2083 01d4 01       		.uleb128 0x1
 2084 01d5 30       		.byte	0x30
 2085 01d6 00       		.byte	0
 2086 01d7 09       		.uleb128 0x9
 2087 01d8 22010000 		.4byte	.LVL39
 2088 01dc 400E0000 		.4byte	0xe40
 2089 01e0 EA010000 		.4byte	0x1ea
 2090 01e4 0A       		.uleb128 0xa
 2091 01e5 01       		.uleb128 0x1
 2092 01e6 50       		.byte	0x50
 2093 01e7 01       		.uleb128 0x1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 48


 2094 01e8 31       		.byte	0x31
 2095 01e9 00       		.byte	0
 2096 01ea 09       		.uleb128 0x9
 2097 01eb 28010000 		.4byte	.LVL40
 2098 01ef 4B0E0000 		.4byte	0xe4b
 2099 01f3 01020000 		.4byte	0x201
 2100 01f7 0A       		.uleb128 0xa
 2101 01f8 01       		.uleb128 0x1
 2102 01f9 50       		.byte	0x50
 2103 01fa 05       		.uleb128 0x5
 2104 01fb 03       		.byte	0x3
 2105 01fc 24000000 		.4byte	.LC3
 2106 0200 00       		.byte	0
 2107 0201 09       		.uleb128 0x9
 2108 0202 36010000 		.4byte	.LVL41
 2109 0206 FE0D0000 		.4byte	0xdfe
 2110 020a 1E020000 		.4byte	0x21e
 2111 020e 0A       		.uleb128 0xa
 2112 020f 01       		.uleb128 0x1
 2113 0210 50       		.byte	0x50
 2114 0211 02       		.uleb128 0x2
 2115 0212 74       		.byte	0x74
 2116 0213 00       		.sleb128 0
 2117 0214 0A       		.uleb128 0xa
 2118 0215 01       		.uleb128 0x1
 2119 0216 51       		.byte	0x51
 2120 0217 05       		.uleb128 0x5
 2121 0218 03       		.byte	0x3
 2122 0219 30000000 		.4byte	.LC4
 2123 021d 00       		.byte	0
 2124 021e 09       		.uleb128 0x9
 2125 021f 3C010000 		.4byte	.LVL42
 2126 0223 4B0E0000 		.4byte	0xe4b
 2127 0227 32020000 		.4byte	0x232
 2128 022b 0A       		.uleb128 0xa
 2129 022c 01       		.uleb128 0x1
 2130 022d 50       		.byte	0x50
 2131 022e 02       		.uleb128 0x2
 2132 022f 74       		.byte	0x74
 2133 0230 00       		.sleb128 0
 2134 0231 00       		.byte	0
 2135 0232 09       		.uleb128 0x9
 2136 0233 42010000 		.4byte	.LVL43
 2137 0237 4B0E0000 		.4byte	0xe4b
 2138 023b 49020000 		.4byte	0x249
 2139 023f 0A       		.uleb128 0xa
 2140 0240 01       		.uleb128 0x1
 2141 0241 50       		.byte	0x50
 2142 0242 05       		.uleb128 0x5
 2143 0243 03       		.byte	0x3
 2144 0244 34000000 		.4byte	.LC5
 2145 0248 00       		.byte	0
 2146 0249 0E       		.uleb128 0xe
 2147 024a 48010000 		.4byte	.LVL44
 2148 024e 4B0E0000 		.4byte	0xe4b
 2149 0252 0A       		.uleb128 0xa
 2150 0253 01       		.uleb128 0x1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 49


 2151 0254 50       		.byte	0x50
 2152 0255 05       		.uleb128 0x5
 2153 0256 03       		.byte	0x3
 2154 0257 38000000 		.4byte	.LC6
 2155 025b 00       		.byte	0
 2156 025c 00       		.byte	0
 2157 025d 08       		.uleb128 0x8
 2158 025e B4000000 		.4byte	.LVL31
 2159 0262 560E0000 		.4byte	0xe56
 2160 0266 09       		.uleb128 0x9
 2161 0267 D2000000 		.4byte	.LVL33
 2162 026b 610E0000 		.4byte	0xe61
 2163 026f 8B020000 		.4byte	0x28b
 2164 0273 0A       		.uleb128 0xa
 2165 0274 01       		.uleb128 0x1
 2166 0275 50       		.byte	0x50
 2167 0276 05       		.uleb128 0x5
 2168 0277 03       		.byte	0x3
 2169 0278 0C000000 		.4byte	.LANCHOR1+12
 2170 027c 0A       		.uleb128 0xa
 2171 027d 01       		.uleb128 0x1
 2172 027e 51       		.byte	0x51
 2173 027f 05       		.uleb128 0x5
 2174 0280 03       		.byte	0x3
 2175 0281 0C000000 		.4byte	.LC1
 2176 0285 0A       		.uleb128 0xa
 2177 0286 01       		.uleb128 0x1
 2178 0287 52       		.byte	0x52
 2179 0288 01       		.uleb128 0x1
 2180 0289 3D       		.byte	0x3d
 2181 028a 00       		.byte	0
 2182 028b 0E       		.uleb128 0xe
 2183 028c 5C010000 		.4byte	.LVL47
 2184 0290 610E0000 		.4byte	0xe61
 2185 0294 0A       		.uleb128 0xa
 2186 0295 01       		.uleb128 0x1
 2187 0296 50       		.byte	0x50
 2188 0297 05       		.uleb128 0x5
 2189 0298 03       		.byte	0x3
 2190 0299 0C000000 		.4byte	.LANCHOR1+12
 2191 029d 0A       		.uleb128 0xa
 2192 029e 01       		.uleb128 0x1
 2193 029f 51       		.byte	0x51
 2194 02a0 05       		.uleb128 0x5
 2195 02a1 03       		.byte	0x3
 2196 02a2 58000000 		.4byte	.LC7
 2197 02a6 0A       		.uleb128 0xa
 2198 02a7 01       		.uleb128 0x1
 2199 02a8 52       		.byte	0x52
 2200 02a9 01       		.uleb128 0x1
 2201 02aa 3D       		.byte	0x3d
 2202 02ab 00       		.byte	0
 2203 02ac 00       		.byte	0
 2204 02ad 08       		.uleb128 0x8
 2205 02ae 06000000 		.4byte	.LVL17
 2206 02b2 6C0E0000 		.4byte	0xe6c
 2207 02b6 08       		.uleb128 0x8
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 50


 2208 02b7 0E000000 		.4byte	.LVL18
 2209 02bb 770E0000 		.4byte	0xe77
 2210 02bf 08       		.uleb128 0x8
 2211 02c0 16000000 		.4byte	.LVL19
 2212 02c4 820E0000 		.4byte	0xe82
 2213 02c8 08       		.uleb128 0x8
 2214 02c9 2A000000 		.4byte	.LVL20
 2215 02cd 8D0E0000 		.4byte	0xe8d
 2216 02d1 08       		.uleb128 0x8
 2217 02d2 32000000 		.4byte	.LVL21
 2218 02d6 980E0000 		.4byte	0xe98
 2219 02da 08       		.uleb128 0x8
 2220 02db 3A000000 		.4byte	.LVL22
 2221 02df A30E0000 		.4byte	0xea3
 2222 02e3 08       		.uleb128 0x8
 2223 02e4 54000000 		.4byte	.LVL23
 2224 02e8 8D0E0000 		.4byte	0xe8d
 2225 02ec 08       		.uleb128 0x8
 2226 02ed 5C000000 		.4byte	.LVL24
 2227 02f1 980E0000 		.4byte	0xe98
 2228 02f5 08       		.uleb128 0x8
 2229 02f6 64000000 		.4byte	.LVL25
 2230 02fa A30E0000 		.4byte	0xea3
 2231 02fe 08       		.uleb128 0x8
 2232 02ff 80000000 		.4byte	.LVL26
 2233 0303 6C0E0000 		.4byte	0xe6c
 2234 0307 08       		.uleb128 0x8
 2235 0308 88000000 		.4byte	.LVL27
 2236 030c 770E0000 		.4byte	0xe77
 2237 0310 08       		.uleb128 0x8
 2238 0311 90000000 		.4byte	.LVL28
 2239 0315 820E0000 		.4byte	0xe82
 2240 0319 08       		.uleb128 0x8
 2241 031a AE000000 		.4byte	.LVL30
 2242 031e AE0E0000 		.4byte	0xeae
 2243 0322 08       		.uleb128 0x8
 2244 0323 84010000 		.4byte	.LVL50
 2245 0327 B90E0000 		.4byte	0xeb9
 2246 032b 00       		.byte	0
 2247 032c 0F       		.uleb128 0xf
 2248 032d A7000000 		.4byte	0xa7
 2249 0331 3C030000 		.4byte	0x33c
 2250 0335 10       		.uleb128 0x10
 2251 0336 B5000000 		.4byte	0xb5
 2252 033a 1F       		.byte	0x1f
 2253 033b 00       		.byte	0
 2254 033c 11       		.uleb128 0x11
 2255 033d 9D010000 		.4byte	.LASF32
 2256 0341 01       		.byte	0x1
 2257 0342 A3       		.byte	0xa3
 2258 0343 00000000 		.4byte	.LFB66
 2259 0347 5C030000 		.4byte	.LFE66-.LFB66
 2260 034b 01       		.uleb128 0x1
 2261 034c 9C       		.byte	0x9c
 2262 034d B5070000 		.4byte	0x7b5
 2263 0351 0B       		.uleb128 0xb
 2264 0352 B4010000 		.4byte	.LASF24
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 51


 2265 0356 01       		.byte	0x1
 2266 0357 A4       		.byte	0xa4
 2267 0358 2C030000 		.4byte	0x32c
 2268 035c 05       		.uleb128 0x5
 2269 035d 03       		.byte	0x3
 2270 035e 30000000 		.4byte	frontBuffer.7801
 2271 0362 0B       		.uleb128 0xb
 2272 0363 DC050000 		.4byte	.LASF20
 2273 0367 01       		.byte	0x1
 2274 0368 A5       		.byte	0xa5
 2275 0369 2C030000 		.4byte	0x32c
 2276 036d 05       		.uleb128 0x5
 2277 036e 03       		.byte	0x3
 2278 036f 58000000 		.4byte	rearBuffer.7802
 2279 0373 0B       		.uleb128 0xb
 2280 0374 C9050000 		.4byte	.LASF25
 2281 0378 01       		.byte	0x1
 2282 0379 A6       		.byte	0xa6
 2283 037a 2C030000 		.4byte	0x32c
 2284 037e 05       		.uleb128 0x5
 2285 037f 03       		.byte	0x3
 2286 0380 7C000000 		.4byte	leftBuffer.7803
 2287 0384 0B       		.uleb128 0xb
 2288 0385 4F040000 		.4byte	.LASF26
 2289 0389 01       		.byte	0x1
 2290 038a A7       		.byte	0xa7
 2291 038b 2C030000 		.4byte	0x32c
 2292 038f 05       		.uleb128 0x5
 2293 0390 03       		.byte	0x3
 2294 0391 A0000000 		.4byte	rightBuffer.7804
 2295 0395 0B       		.uleb128 0xb
 2296 0396 44040000 		.4byte	.LASF27
 2297 039a 01       		.byte	0x1
 2298 039b A8       		.byte	0xa8
 2299 039c 81000000 		.4byte	0x81
 2300 03a0 05       		.uleb128 0x5
 2301 03a1 03       		.byte	0x3
 2302 03a2 2E000000 		.4byte	frontIndex.7805
 2303 03a6 0B       		.uleb128 0xb
 2304 03a7 BF030000 		.4byte	.LASF28
 2305 03ab 01       		.byte	0x1
 2306 03ac A9       		.byte	0xa9
 2307 03ad 81000000 		.4byte	0x81
 2308 03b1 05       		.uleb128 0x5
 2309 03b2 03       		.byte	0x3
 2310 03b3 56000000 		.4byte	rearIndex.7806
 2311 03b7 0B       		.uleb128 0xb
 2312 03b8 9A030000 		.4byte	.LASF29
 2313 03bc 01       		.byte	0x1
 2314 03bd AA       		.byte	0xaa
 2315 03be 81000000 		.4byte	0x81
 2316 03c2 05       		.uleb128 0x5
 2317 03c3 03       		.byte	0x3
 2318 03c4 78000000 		.4byte	leftIndex.7807
 2319 03c8 0B       		.uleb128 0xb
 2320 03c9 22040000 		.4byte	.LASF30
 2321 03cd 01       		.byte	0x1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 52


 2322 03ce AB       		.byte	0xab
 2323 03cf 81000000 		.4byte	0x81
 2324 03d3 05       		.uleb128 0x5
 2325 03d4 03       		.byte	0x3
 2326 03d5 9C000000 		.4byte	rightIndex.7808
 2327 03d9 0C       		.uleb128 0xc
 2328 03da 04000000 		.4byte	.LBB4
 2329 03de 46010000 		.4byte	.LBE4-.LBB4
 2330 03e2 2C050000 		.4byte	0x52c
 2331 03e6 0D       		.uleb128 0xd
 2332 03e7 7E020000 		.4byte	.LASF22
 2333 03eb 01       		.byte	0x1
 2334 03ec AF       		.byte	0xaf
 2335 03ed A7000000 		.4byte	0xa7
 2336 03f1 49000000 		.4byte	.LLST2
 2337 03f5 0C       		.uleb128 0xc
 2338 03f6 12000000 		.4byte	.LBB5
 2339 03fa 16010000 		.4byte	.LBE5-.LBB5
 2340 03fe 22050000 		.4byte	0x522
 2341 0402 0D       		.uleb128 0xd
 2342 0403 09000000 		.4byte	.LASF31
 2343 0407 01       		.byte	0x1
 2344 0408 B5       		.byte	0xb5
 2345 0409 BC000000 		.4byte	0xbc
 2346 040d 67000000 		.4byte	.LLST3
 2347 0411 0D       		.uleb128 0xd
 2348 0412 68000000 		.4byte	.LASF23
 2349 0416 01       		.byte	0x1
 2350 0417 B6       		.byte	0xb6
 2351 0418 BC000000 		.4byte	0xbc
 2352 041c 85000000 		.4byte	.LLST4
 2353 0420 09       		.uleb128 0x9
 2354 0421 30000000 		.4byte	.LVL53
 2355 0425 140E0000 		.4byte	0xe14
 2356 0429 3D040000 		.4byte	0x43d
 2357 042d 0A       		.uleb128 0xa
 2358 042e 01       		.uleb128 0x1
 2359 042f 50       		.byte	0x50
 2360 0430 02       		.uleb128 0x2
 2361 0431 74       		.byte	0x74
 2362 0432 00       		.sleb128 0
 2363 0433 0A       		.uleb128 0xa
 2364 0434 01       		.uleb128 0x1
 2365 0435 51       		.byte	0x51
 2366 0436 05       		.uleb128 0x5
 2367 0437 03       		.byte	0x3
 2368 0438 68000000 		.4byte	.LC8
 2369 043c 00       		.byte	0
 2370 043d 09       		.uleb128 0x9
 2371 043e 3A000000 		.4byte	.LVL56
 2372 0442 140E0000 		.4byte	0xe14
 2373 0446 5A040000 		.4byte	0x45a
 2374 044a 0A       		.uleb128 0xa
 2375 044b 01       		.uleb128 0x1
 2376 044c 50       		.byte	0x50
 2377 044d 02       		.uleb128 0x2
 2378 044e 74       		.byte	0x74
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 53


 2379 044f 00       		.sleb128 0
 2380 0450 0A       		.uleb128 0xa
 2381 0451 01       		.uleb128 0x1
 2382 0452 51       		.byte	0x51
 2383 0453 05       		.uleb128 0x5
 2384 0454 03       		.byte	0x3
 2385 0455 1C000000 		.4byte	.LC2
 2386 0459 00       		.byte	0
 2387 045a 09       		.uleb128 0x9
 2388 045b 4E000000 		.4byte	.LVL59
 2389 045f C40E0000 		.4byte	0xec4
 2390 0463 6E040000 		.4byte	0x46e
 2391 0467 0A       		.uleb128 0xa
 2392 0468 01       		.uleb128 0x1
 2393 0469 50       		.byte	0x50
 2394 046a 02       		.uleb128 0x2
 2395 046b 75       		.byte	0x75
 2396 046c 03       		.sleb128 3
 2397 046d 00       		.byte	0
 2398 046e 09       		.uleb128 0x9
 2399 046f 5C000000 		.4byte	.LVL61
 2400 0473 1F0E0000 		.4byte	0xe1f
 2401 0477 82040000 		.4byte	0x482
 2402 047b 0A       		.uleb128 0xa
 2403 047c 01       		.uleb128 0x1
 2404 047d 50       		.byte	0x50
 2405 047e 02       		.uleb128 0x2
 2406 047f 76       		.byte	0x76
 2407 0480 05       		.sleb128 5
 2408 0481 00       		.byte	0
 2409 0482 09       		.uleb128 0x9
 2410 0483 66000000 		.4byte	.LVL62
 2411 0487 4B0E0000 		.4byte	0xe4b
 2412 048b 99040000 		.4byte	0x499
 2413 048f 0A       		.uleb128 0xa
 2414 0490 01       		.uleb128 0x1
 2415 0491 50       		.byte	0x50
 2416 0492 05       		.uleb128 0x5
 2417 0493 03       		.byte	0x3
 2418 0494 6C000000 		.4byte	.LC9
 2419 0498 00       		.byte	0
 2420 0499 09       		.uleb128 0x9
 2421 049a 6E000000 		.4byte	.LVL63
 2422 049e 4B0E0000 		.4byte	0xe4b
 2423 04a2 AD040000 		.4byte	0x4ad
 2424 04a6 0A       		.uleb128 0xa
 2425 04a7 01       		.uleb128 0x1
 2426 04a8 50       		.byte	0x50
 2427 04a9 02       		.uleb128 0x2
 2428 04aa 74       		.byte	0x74
 2429 04ab 30       		.sleb128 48
 2430 04ac 00       		.byte	0
 2431 04ad 09       		.uleb128 0x9
 2432 04ae 74000000 		.4byte	.LVL64
 2433 04b2 4B0E0000 		.4byte	0xe4b
 2434 04b6 C4040000 		.4byte	0x4c4
 2435 04ba 0A       		.uleb128 0xa
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 54


 2436 04bb 01       		.uleb128 0x1
 2437 04bc 50       		.byte	0x50
 2438 04bd 05       		.uleb128 0x5
 2439 04be 03       		.byte	0x3
 2440 04bf 34000000 		.4byte	.LC5
 2441 04c3 00       		.byte	0
 2442 04c4 09       		.uleb128 0x9
 2443 04c5 A0000000 		.4byte	.LVL65
 2444 04c9 350E0000 		.4byte	0xe35
 2445 04cd D7040000 		.4byte	0x4d7
 2446 04d1 0A       		.uleb128 0xa
 2447 04d2 01       		.uleb128 0x1
 2448 04d3 50       		.byte	0x50
 2449 04d4 01       		.uleb128 0x1
 2450 04d5 31       		.byte	0x31
 2451 04d6 00       		.byte	0
 2452 04d7 09       		.uleb128 0x9
 2453 04d8 A6000000 		.4byte	.LVL66
 2454 04dc 400E0000 		.4byte	0xe40
 2455 04e0 EA040000 		.4byte	0x4ea
 2456 04e4 0A       		.uleb128 0xa
 2457 04e5 01       		.uleb128 0x1
 2458 04e6 50       		.byte	0x50
 2459 04e7 01       		.uleb128 0x1
 2460 04e8 30       		.byte	0x30
 2461 04e9 00       		.byte	0
 2462 04ea 09       		.uleb128 0x9
 2463 04eb AC000000 		.4byte	.LVL67
 2464 04ef 4B0E0000 		.4byte	0xe4b
 2465 04f3 01050000 		.4byte	0x501
 2466 04f7 0A       		.uleb128 0xa
 2467 04f8 01       		.uleb128 0x1
 2468 04f9 50       		.byte	0x50
 2469 04fa 05       		.uleb128 0x5
 2470 04fb 03       		.byte	0x3
 2471 04fc 7C000000 		.4byte	.LC10
 2472 0500 00       		.byte	0
 2473 0501 09       		.uleb128 0x9
 2474 0502 B2000000 		.4byte	.LVL68
 2475 0506 4B0E0000 		.4byte	0xe4b
 2476 050a 18050000 		.4byte	0x518
 2477 050e 0A       		.uleb128 0xa
 2478 050f 01       		.uleb128 0x1
 2479 0510 50       		.byte	0x50
 2480 0511 05       		.uleb128 0x5
 2481 0512 03       		.byte	0x3
 2482 0513 34000000 		.4byte	.LC5
 2483 0517 00       		.byte	0
 2484 0518 08       		.uleb128 0x8
 2485 0519 26010000 		.4byte	.LVL76
 2486 051d AE0E0000 		.4byte	0xeae
 2487 0521 00       		.byte	0
 2488 0522 08       		.uleb128 0x8
 2489 0523 08000000 		.4byte	.LVL51
 2490 0527 CF0E0000 		.4byte	0xecf
 2491 052b 00       		.byte	0
 2492 052c 0C       		.uleb128 0xc
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 55


 2493 052d 60010000 		.4byte	.LBB6
 2494 0531 94000000 		.4byte	.LBE6-.LBB6
 2495 0535 FD050000 		.4byte	0x5fd
 2496 0539 0D       		.uleb128 0xd
 2497 053a 7E020000 		.4byte	.LASF22
 2498 053e 01       		.byte	0x1
 2499 053f E4       		.byte	0xe4
 2500 0540 A7000000 		.4byte	0xa7
 2501 0544 A3000000 		.4byte	.LLST5
 2502 0548 08       		.uleb128 0x8
 2503 0549 64010000 		.4byte	.LVL80
 2504 054d 560E0000 		.4byte	0xe56
 2505 0551 09       		.uleb128 0x9
 2506 0552 88010000 		.4byte	.LVL82
 2507 0556 610E0000 		.4byte	0xe61
 2508 055a 76050000 		.4byte	0x576
 2509 055e 0A       		.uleb128 0xa
 2510 055f 01       		.uleb128 0x1
 2511 0560 50       		.byte	0x50
 2512 0561 05       		.uleb128 0x5
 2513 0562 03       		.byte	0x3
 2514 0563 58000000 		.4byte	.LANCHOR1+88
 2515 0567 0A       		.uleb128 0xa
 2516 0568 01       		.uleb128 0x1
 2517 0569 51       		.byte	0x51
 2518 056a 05       		.uleb128 0x5
 2519 056b 03       		.byte	0x3
 2520 056c 0C000000 		.4byte	.LC1
 2521 0570 0A       		.uleb128 0xa
 2522 0571 01       		.uleb128 0x1
 2523 0572 52       		.byte	0x52
 2524 0573 01       		.uleb128 0x1
 2525 0574 3D       		.byte	0x3d
 2526 0575 00       		.byte	0
 2527 0576 09       		.uleb128 0x9
 2528 0577 90010000 		.4byte	.LVL83
 2529 057b 4B0E0000 		.4byte	0xe4b
 2530 057f 8D050000 		.4byte	0x58d
 2531 0583 0A       		.uleb128 0xa
 2532 0584 01       		.uleb128 0x1
 2533 0585 50       		.byte	0x50
 2534 0586 05       		.uleb128 0x5
 2535 0587 03       		.byte	0x3
 2536 0588 98000000 		.4byte	.LC11
 2537 058c 00       		.byte	0
 2538 058d 09       		.uleb128 0x9
 2539 058e 96010000 		.4byte	.LVL84
 2540 0592 4B0E0000 		.4byte	0xe4b
 2541 0596 A4050000 		.4byte	0x5a4
 2542 059a 0A       		.uleb128 0xa
 2543 059b 01       		.uleb128 0x1
 2544 059c 50       		.byte	0x50
 2545 059d 05       		.uleb128 0x5
 2546 059e 03       		.byte	0x3
 2547 059f 58000000 		.4byte	.LANCHOR1+88
 2548 05a3 00       		.byte	0
 2549 05a4 09       		.uleb128 0x9
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 56


 2550 05a5 9C010000 		.4byte	.LVL85
 2551 05a9 4B0E0000 		.4byte	0xe4b
 2552 05ad BB050000 		.4byte	0x5bb
 2553 05b1 0A       		.uleb128 0xa
 2554 05b2 01       		.uleb128 0x1
 2555 05b3 50       		.byte	0x50
 2556 05b4 05       		.uleb128 0x5
 2557 05b5 03       		.byte	0x3
 2558 05b6 34000000 		.4byte	.LC5
 2559 05ba 00       		.byte	0
 2560 05bb 08       		.uleb128 0x8
 2561 05bc A0010000 		.4byte	.LVL86
 2562 05c0 DA0E0000 		.4byte	0xeda
 2563 05c4 09       		.uleb128 0x9
 2564 05c5 BC010000 		.4byte	.LVL87
 2565 05c9 AE0E0000 		.4byte	0xeae
 2566 05cd D7050000 		.4byte	0x5d7
 2567 05d1 0A       		.uleb128 0xa
 2568 05d2 01       		.uleb128 0x1
 2569 05d3 50       		.byte	0x50
 2570 05d4 01       		.uleb128 0x1
 2571 05d5 44       		.byte	0x44
 2572 05d6 00       		.byte	0
 2573 05d7 09       		.uleb128 0x9
 2574 05d8 C8010000 		.4byte	.LVL88
 2575 05dc AE0E0000 		.4byte	0xeae
 2576 05e0 EB050000 		.4byte	0x5eb
 2577 05e4 0A       		.uleb128 0xa
 2578 05e5 01       		.uleb128 0x1
 2579 05e6 50       		.byte	0x50
 2580 05e7 02       		.uleb128 0x2
 2581 05e8 09       		.byte	0x9
 2582 05e9 C8       		.byte	0xc8
 2583 05ea 00       		.byte	0
 2584 05eb 0E       		.uleb128 0xe
 2585 05ec D0010000 		.4byte	.LVL89
 2586 05f0 E50E0000 		.4byte	0xee5
 2587 05f4 0A       		.uleb128 0xa
 2588 05f5 01       		.uleb128 0x1
 2589 05f6 50       		.byte	0x50
 2590 05f7 03       		.uleb128 0x3
 2591 05f8 0A       		.byte	0xa
 2592 05f9 D007     		.2byte	0x7d0
 2593 05fb 00       		.byte	0
 2594 05fc 00       		.byte	0
 2595 05fd 0C       		.uleb128 0xc
 2596 05fe FE010000 		.4byte	.LBB7
 2597 0602 78000000 		.4byte	.LBE7-.LBB7
 2598 0606 C6060000 		.4byte	0x6c6
 2599 060a 12       		.uleb128 0x12
 2600 060b 7E020000 		.4byte	.LASF22
 2601 060f 01       		.byte	0x1
 2602 0610 0001     		.2byte	0x100
 2603 0612 A7000000 		.4byte	0xa7
 2604 0616 C1000000 		.4byte	.LLST6
 2605 061a 08       		.uleb128 0x8
 2606 061b 02020000 		.4byte	.LVL93
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 57


 2607 061f F00E0000 		.4byte	0xef0
 2608 0623 09       		.uleb128 0x9
 2609 0624 22020000 		.4byte	.LVL95
 2610 0628 4B0E0000 		.4byte	0xe4b
 2611 062c 3A060000 		.4byte	0x63a
 2612 0630 0A       		.uleb128 0xa
 2613 0631 01       		.uleb128 0x1
 2614 0632 50       		.byte	0x50
 2615 0633 05       		.uleb128 0x5
 2616 0634 03       		.byte	0x3
 2617 0635 A4000000 		.4byte	.LC12
 2618 0639 00       		.byte	0
 2619 063a 09       		.uleb128 0x9
 2620 063b 2A020000 		.4byte	.LVL96
 2621 063f 4B0E0000 		.4byte	0xe4b
 2622 0643 4E060000 		.4byte	0x64e
 2623 0647 0A       		.uleb128 0xa
 2624 0648 01       		.uleb128 0x1
 2625 0649 50       		.byte	0x50
 2626 064a 02       		.uleb128 0x2
 2627 064b 74       		.byte	0x74
 2628 064c 00       		.sleb128 0
 2629 064d 00       		.byte	0
 2630 064e 09       		.uleb128 0x9
 2631 064f 30020000 		.4byte	.LVL97
 2632 0653 4B0E0000 		.4byte	0xe4b
 2633 0657 65060000 		.4byte	0x665
 2634 065b 0A       		.uleb128 0xa
 2635 065c 01       		.uleb128 0x1
 2636 065d 50       		.byte	0x50
 2637 065e 05       		.uleb128 0x5
 2638 065f 03       		.byte	0x3
 2639 0660 34000000 		.4byte	.LC5
 2640 0664 00       		.byte	0
 2641 0665 09       		.uleb128 0x9
 2642 0666 38020000 		.4byte	.LVL98
 2643 066a FB0E0000 		.4byte	0xefb
 2644 066e 82060000 		.4byte	0x682
 2645 0672 0A       		.uleb128 0xa
 2646 0673 01       		.uleb128 0x1
 2647 0674 50       		.byte	0x50
 2648 0675 02       		.uleb128 0x2
 2649 0676 74       		.byte	0x74
 2650 0677 00       		.sleb128 0
 2651 0678 0A       		.uleb128 0xa
 2652 0679 01       		.uleb128 0x1
 2653 067a 51       		.byte	0x51
 2654 067b 05       		.uleb128 0x5
 2655 067c 03       		.byte	0x3
 2656 067d B0000000 		.4byte	.LC13
 2657 0681 00       		.byte	0
 2658 0682 09       		.uleb128 0x9
 2659 0683 40020000 		.4byte	.LVL99
 2660 0687 AE0E0000 		.4byte	0xeae
 2661 068b 95060000 		.4byte	0x695
 2662 068f 0A       		.uleb128 0xa
 2663 0690 01       		.uleb128 0x1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 58


 2664 0691 50       		.byte	0x50
 2665 0692 01       		.uleb128 0x1
 2666 0693 44       		.byte	0x44
 2667 0694 00       		.byte	0
 2668 0695 09       		.uleb128 0x9
 2669 0696 4A020000 		.4byte	.LVL100
 2670 069a FB0E0000 		.4byte	0xefb
 2671 069e B5060000 		.4byte	0x6b5
 2672 06a2 0A       		.uleb128 0xa
 2673 06a3 01       		.uleb128 0x1
 2674 06a4 50       		.byte	0x50
 2675 06a5 05       		.uleb128 0x5
 2676 06a6 03       		.byte	0x3
 2677 06a7 7C000000 		.4byte	.LANCHOR1+124
 2678 06ab 0A       		.uleb128 0xa
 2679 06ac 01       		.uleb128 0x1
 2680 06ad 51       		.byte	0x51
 2681 06ae 05       		.uleb128 0x5
 2682 06af 03       		.byte	0x3
 2683 06b0 B4000000 		.4byte	.LC14
 2684 06b4 00       		.byte	0
 2685 06b5 0E       		.uleb128 0xe
 2686 06b6 52020000 		.4byte	.LVL101
 2687 06ba AE0E0000 		.4byte	0xeae
 2688 06be 0A       		.uleb128 0xa
 2689 06bf 01       		.uleb128 0x1
 2690 06c0 50       		.byte	0x50
 2691 06c1 02       		.uleb128 0x2
 2692 06c2 08       		.byte	0x8
 2693 06c3 7F       		.byte	0x7f
 2694 06c4 00       		.byte	0
 2695 06c5 00       		.byte	0
 2696 06c6 0C       		.uleb128 0xc
 2697 06c7 80020000 		.4byte	.LBB8
 2698 06cb CC000000 		.4byte	.LBE8-.LBB8
 2699 06cf 90070000 		.4byte	0x790
 2700 06d3 12       		.uleb128 0x12
 2701 06d4 7E020000 		.4byte	.LASF22
 2702 06d8 01       		.byte	0x1
 2703 06d9 1A01     		.2byte	0x11a
 2704 06db A7000000 		.4byte	0xa7
 2705 06df DF000000 		.4byte	.LLST7
 2706 06e3 08       		.uleb128 0x8
 2707 06e4 84020000 		.4byte	.LVL105
 2708 06e8 060F0000 		.4byte	0xf06
 2709 06ec 09       		.uleb128 0x9
 2710 06ed A4020000 		.4byte	.LVL107
 2711 06f1 4B0E0000 		.4byte	0xe4b
 2712 06f5 03070000 		.4byte	0x703
 2713 06f9 0A       		.uleb128 0xa
 2714 06fa 01       		.uleb128 0x1
 2715 06fb 50       		.byte	0x50
 2716 06fc 05       		.uleb128 0x5
 2717 06fd 03       		.byte	0x3
 2718 06fe B8000000 		.4byte	.LC15
 2719 0702 00       		.byte	0
 2720 0703 09       		.uleb128 0x9
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 59


 2721 0704 AC020000 		.4byte	.LVL108
 2722 0708 4B0E0000 		.4byte	0xe4b
 2723 070c 17070000 		.4byte	0x717
 2724 0710 0A       		.uleb128 0xa
 2725 0711 01       		.uleb128 0x1
 2726 0712 50       		.byte	0x50
 2727 0713 02       		.uleb128 0x2
 2728 0714 74       		.byte	0x74
 2729 0715 00       		.sleb128 0
 2730 0716 00       		.byte	0
 2731 0717 09       		.uleb128 0x9
 2732 0718 B2020000 		.4byte	.LVL109
 2733 071c 4B0E0000 		.4byte	0xe4b
 2734 0720 2E070000 		.4byte	0x72e
 2735 0724 0A       		.uleb128 0xa
 2736 0725 01       		.uleb128 0x1
 2737 0726 50       		.byte	0x50
 2738 0727 05       		.uleb128 0x5
 2739 0728 03       		.byte	0x3
 2740 0729 34000000 		.4byte	.LC5
 2741 072d 00       		.byte	0
 2742 072e 09       		.uleb128 0x9
 2743 072f BA020000 		.4byte	.LVL110
 2744 0733 FB0E0000 		.4byte	0xefb
 2745 0737 4B070000 		.4byte	0x74b
 2746 073b 0A       		.uleb128 0xa
 2747 073c 01       		.uleb128 0x1
 2748 073d 50       		.byte	0x50
 2749 073e 02       		.uleb128 0x2
 2750 073f 74       		.byte	0x74
 2751 0740 00       		.sleb128 0
 2752 0741 0A       		.uleb128 0xa
 2753 0742 01       		.uleb128 0x1
 2754 0743 51       		.byte	0x51
 2755 0744 05       		.uleb128 0x5
 2756 0745 03       		.byte	0x3
 2757 0746 B0000000 		.4byte	.LC13
 2758 074a 00       		.byte	0
 2759 074b 09       		.uleb128 0x9
 2760 074c C2020000 		.4byte	.LVL111
 2761 0750 AE0E0000 		.4byte	0xeae
 2762 0754 5F070000 		.4byte	0x75f
 2763 0758 0A       		.uleb128 0xa
 2764 0759 01       		.uleb128 0x1
 2765 075a 50       		.byte	0x50
 2766 075b 02       		.uleb128 0x2
 2767 075c 09       		.byte	0x9
 2768 075d C8       		.byte	0xc8
 2769 075e 00       		.byte	0
 2770 075f 09       		.uleb128 0x9
 2771 0760 CC020000 		.4byte	.LVL112
 2772 0764 FB0E0000 		.4byte	0xefb
 2773 0768 7F070000 		.4byte	0x77f
 2774 076c 0A       		.uleb128 0xa
 2775 076d 01       		.uleb128 0x1
 2776 076e 50       		.byte	0x50
 2777 076f 05       		.uleb128 0x5
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 60


 2778 0770 03       		.byte	0x3
 2779 0771 A0000000 		.4byte	.LANCHOR1+160
 2780 0775 0A       		.uleb128 0xa
 2781 0776 01       		.uleb128 0x1
 2782 0777 51       		.byte	0x51
 2783 0778 05       		.uleb128 0x5
 2784 0779 03       		.byte	0x3
 2785 077a B4000000 		.4byte	.LC14
 2786 077e 00       		.byte	0
 2787 077f 0E       		.uleb128 0xe
 2788 0780 D6020000 		.4byte	.LVL113
 2789 0784 AE0E0000 		.4byte	0xeae
 2790 0788 0A       		.uleb128 0xa
 2791 0789 01       		.uleb128 0x1
 2792 078a 50       		.byte	0x50
 2793 078b 02       		.uleb128 0x2
 2794 078c 08       		.byte	0x8
 2795 078d 7F       		.byte	0x7f
 2796 078e 00       		.byte	0
 2797 078f 00       		.byte	0
 2798 0790 08       		.uleb128 0x8
 2799 0791 4E010000 		.4byte	.LVL79
 2800 0795 110F0000 		.4byte	0xf11
 2801 0799 08       		.uleb128 0x8
 2802 079a F8010000 		.4byte	.LVL92
 2803 079e B90E0000 		.4byte	0xeb9
 2804 07a2 08       		.uleb128 0x8
 2805 07a3 7A020000 		.4byte	.LVL104
 2806 07a7 1C0F0000 		.4byte	0xf1c
 2807 07ab 08       		.uleb128 0x8
 2808 07ac 50030000 		.4byte	.LVL116
 2809 07b0 270F0000 		.4byte	0xf27
 2810 07b4 00       		.byte	0
 2811 07b5 13       		.uleb128 0x13
 2812 07b6 08040000 		.4byte	.LASF33
 2813 07ba 01       		.byte	0x1
 2814 07bb 3501     		.2byte	0x135
 2815 07bd 00000000 		.4byte	.LFB67
 2816 07c1 08020000 		.4byte	.LFE67-.LFB67
 2817 07c5 01       		.uleb128 0x1
 2818 07c6 9C       		.byte	0x9c
 2819 07c7 960A0000 		.4byte	0xa96
 2820 07cb 14       		.uleb128 0x14
 2821 07cc DC050000 		.4byte	.LASF20
 2822 07d0 01       		.byte	0x1
 2823 07d1 3601     		.2byte	0x136
 2824 07d3 2C030000 		.4byte	0x32c
 2825 07d7 05       		.uleb128 0x5
 2826 07d8 03       		.byte	0x3
 2827 07d9 C4000000 		.4byte	rearBuffer.7829
 2828 07dd 14       		.uleb128 0x14
 2829 07de C9050000 		.4byte	.LASF25
 2830 07e2 01       		.byte	0x1
 2831 07e3 3701     		.2byte	0x137
 2832 07e5 2C030000 		.4byte	0x32c
 2833 07e9 05       		.uleb128 0x5
 2834 07ea 03       		.byte	0x3
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 61


 2835 07eb E8000000 		.4byte	leftBuffer.7830
 2836 07ef 14       		.uleb128 0x14
 2837 07f0 4F040000 		.4byte	.LASF26
 2838 07f4 01       		.byte	0x1
 2839 07f5 3801     		.2byte	0x138
 2840 07f7 2C030000 		.4byte	0x32c
 2841 07fb 05       		.uleb128 0x5
 2842 07fc 03       		.byte	0x3
 2843 07fd 0C010000 		.4byte	rightBuffer.7831
 2844 0801 14       		.uleb128 0x14
 2845 0802 BF030000 		.4byte	.LASF28
 2846 0806 01       		.byte	0x1
 2847 0807 3901     		.2byte	0x139
 2848 0809 81000000 		.4byte	0x81
 2849 080d 05       		.uleb128 0x5
 2850 080e 03       		.byte	0x3
 2851 080f C0000000 		.4byte	rearIndex.7832
 2852 0813 14       		.uleb128 0x14
 2853 0814 9A030000 		.4byte	.LASF29
 2854 0818 01       		.byte	0x1
 2855 0819 3A01     		.2byte	0x13a
 2856 081b 81000000 		.4byte	0x81
 2857 081f 05       		.uleb128 0x5
 2858 0820 03       		.byte	0x3
 2859 0821 E5000000 		.4byte	leftIndex.7833
 2860 0825 14       		.uleb128 0x14
 2861 0826 22040000 		.4byte	.LASF30
 2862 082a 01       		.byte	0x1
 2863 082b 3B01     		.2byte	0x13b
 2864 082d 81000000 		.4byte	0x81
 2865 0831 05       		.uleb128 0x5
 2866 0832 03       		.byte	0x3
 2867 0833 08010000 		.4byte	rightIndex.7834
 2868 0837 0C       		.uleb128 0xc
 2869 0838 04000000 		.4byte	.LBB9
 2870 083c E0000000 		.4byte	.LBE9-.LBB9
 2871 0840 65090000 		.4byte	0x965
 2872 0844 12       		.uleb128 0x12
 2873 0845 7E020000 		.4byte	.LASF22
 2874 0849 01       		.byte	0x1
 2875 084a 3F01     		.2byte	0x13f
 2876 084c A7000000 		.4byte	0xa7
 2877 0850 FD000000 		.4byte	.LLST8
 2878 0854 0C       		.uleb128 0xc
 2879 0855 30000000 		.4byte	.LBB10
 2880 0859 7A000000 		.4byte	.LBE10-.LBB10
 2881 085d 15090000 		.4byte	0x915
 2882 0861 12       		.uleb128 0x12
 2883 0862 68000000 		.4byte	.LASF23
 2884 0866 01       		.byte	0x1
 2885 0867 4B01     		.2byte	0x14b
 2886 0869 BC000000 		.4byte	0xbc
 2887 086d 1B010000 		.4byte	.LLST9
 2888 0871 09       		.uleb128 0x9
 2889 0872 38000000 		.4byte	.LVL120
 2890 0876 140E0000 		.4byte	0xe14
 2891 087a 91080000 		.4byte	0x891
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 62


 2892 087e 0A       		.uleb128 0xa
 2893 087f 01       		.uleb128 0x1
 2894 0880 50       		.byte	0x50
 2895 0881 05       		.uleb128 0x5
 2896 0882 03       		.byte	0x3
 2897 0883 C4000000 		.4byte	.LANCHOR1+196
 2898 0887 0A       		.uleb128 0xa
 2899 0888 01       		.uleb128 0x1
 2900 0889 51       		.byte	0x51
 2901 088a 05       		.uleb128 0x5
 2902 088b 03       		.byte	0x3
 2903 088c 1C000000 		.4byte	.LC2
 2904 0890 00       		.byte	0
 2905 0891 08       		.uleb128 0x8
 2906 0892 40000000 		.4byte	.LVL122
 2907 0896 1F0E0000 		.4byte	0xe1f
 2908 089a 09       		.uleb128 0x9
 2909 089b 64000000 		.4byte	.LVL123
 2910 089f 4B0E0000 		.4byte	0xe4b
 2911 08a3 B1080000 		.4byte	0x8b1
 2912 08a7 0A       		.uleb128 0xa
 2913 08a8 01       		.uleb128 0x1
 2914 08a9 50       		.byte	0x50
 2915 08aa 05       		.uleb128 0x5
 2916 08ab 03       		.byte	0x3
 2917 08ac C8000000 		.4byte	.LC16
 2918 08b0 00       		.byte	0
 2919 08b1 09       		.uleb128 0x9
 2920 08b2 7E000000 		.4byte	.LVL124
 2921 08b6 4B0E0000 		.4byte	0xe4b
 2922 08ba C8080000 		.4byte	0x8c8
 2923 08be 0A       		.uleb128 0xa
 2924 08bf 01       		.uleb128 0x1
 2925 08c0 50       		.byte	0x50
 2926 08c1 05       		.uleb128 0x5
 2927 08c2 03       		.byte	0x3
 2928 08c3 E4000000 		.4byte	.LC17
 2929 08c7 00       		.byte	0
 2930 08c8 09       		.uleb128 0x9
 2931 08c9 8A000000 		.4byte	.LVL125
 2932 08cd 2A0E0000 		.4byte	0xe2a
 2933 08d1 DB080000 		.4byte	0x8db
 2934 08d5 0A       		.uleb128 0xa
 2935 08d6 01       		.uleb128 0x1
 2936 08d7 50       		.byte	0x50
 2937 08d8 01       		.uleb128 0x1
 2938 08d9 30       		.byte	0x30
 2939 08da 00       		.byte	0
 2940 08db 09       		.uleb128 0x9
 2941 08dc 90000000 		.4byte	.LVL126
 2942 08e0 350E0000 		.4byte	0xe35
 2943 08e4 EE080000 		.4byte	0x8ee
 2944 08e8 0A       		.uleb128 0xa
 2945 08e9 01       		.uleb128 0x1
 2946 08ea 50       		.byte	0x50
 2947 08eb 01       		.uleb128 0x1
 2948 08ec 30       		.byte	0x30
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 63


 2949 08ed 00       		.byte	0
 2950 08ee 09       		.uleb128 0x9
 2951 08ef 96000000 		.4byte	.LVL127
 2952 08f3 400E0000 		.4byte	0xe40
 2953 08f7 01090000 		.4byte	0x901
 2954 08fb 0A       		.uleb128 0xa
 2955 08fc 01       		.uleb128 0x1
 2956 08fd 50       		.byte	0x50
 2957 08fe 01       		.uleb128 0x1
 2958 08ff 31       		.byte	0x31
 2959 0900 00       		.byte	0
 2960 0901 0E       		.uleb128 0xe
 2961 0902 9C000000 		.4byte	.LVL128
 2962 0906 4B0E0000 		.4byte	0xe4b
 2963 090a 0A       		.uleb128 0xa
 2964 090b 01       		.uleb128 0x1
 2965 090c 50       		.byte	0x50
 2966 090d 05       		.uleb128 0x5
 2967 090e 03       		.byte	0x3
 2968 090f 00010000 		.4byte	.LC18
 2969 0913 00       		.byte	0
 2970 0914 00       		.byte	0
 2971 0915 08       		.uleb128 0x8
 2972 0916 08000000 		.4byte	.LVL117
 2973 091a 560E0000 		.4byte	0xe56
 2974 091e 09       		.uleb128 0x9
 2975 091f 2C000000 		.4byte	.LVL119
 2976 0923 610E0000 		.4byte	0xe61
 2977 0927 43090000 		.4byte	0x943
 2978 092b 0A       		.uleb128 0xa
 2979 092c 01       		.uleb128 0x1
 2980 092d 50       		.byte	0x50
 2981 092e 05       		.uleb128 0x5
 2982 092f 03       		.byte	0x3
 2983 0930 C4000000 		.4byte	.LANCHOR1+196
 2984 0934 0A       		.uleb128 0xa
 2985 0935 01       		.uleb128 0x1
 2986 0936 51       		.byte	0x51
 2987 0937 05       		.uleb128 0x5
 2988 0938 03       		.byte	0x3
 2989 0939 0C000000 		.4byte	.LC1
 2990 093d 0A       		.uleb128 0xa
 2991 093e 01       		.uleb128 0x1
 2992 093f 52       		.byte	0x52
 2993 0940 01       		.uleb128 0x1
 2994 0941 3D       		.byte	0x3d
 2995 0942 00       		.byte	0
 2996 0943 0E       		.uleb128 0xe
 2997 0944 B4000000 		.4byte	.LVL131
 2998 0948 610E0000 		.4byte	0xe61
 2999 094c 0A       		.uleb128 0xa
 3000 094d 01       		.uleb128 0x1
 3001 094e 50       		.byte	0x50
 3002 094f 05       		.uleb128 0x5
 3003 0950 03       		.byte	0x3
 3004 0951 C4000000 		.4byte	.LANCHOR1+196
 3005 0955 0A       		.uleb128 0xa
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 64


 3006 0956 01       		.uleb128 0x1
 3007 0957 51       		.byte	0x51
 3008 0958 05       		.uleb128 0x5
 3009 0959 03       		.byte	0x3
 3010 095a 58000000 		.4byte	.LC7
 3011 095e 0A       		.uleb128 0xa
 3012 095f 01       		.uleb128 0x1
 3013 0960 52       		.byte	0x52
 3014 0961 01       		.uleb128 0x1
 3015 0962 3D       		.byte	0x3d
 3016 0963 00       		.byte	0
 3017 0964 00       		.byte	0
 3018 0965 0C       		.uleb128 0xc
 3019 0966 F4000000 		.4byte	.LBB11
 3020 096a 64000000 		.4byte	.LBE11-.LBB11
 3021 096e F0090000 		.4byte	0x9f0
 3022 0972 12       		.uleb128 0x12
 3023 0973 7E020000 		.4byte	.LASF22
 3024 0977 01       		.byte	0x1
 3025 0978 7A01     		.2byte	0x17a
 3026 097a A7000000 		.4byte	0xa7
 3027 097e 46010000 		.4byte	.LLST10
 3028 0982 08       		.uleb128 0x8
 3029 0983 F8000000 		.4byte	.LVL135
 3030 0987 F00E0000 		.4byte	0xef0
 3031 098b 09       		.uleb128 0x9
 3032 098c 1A010000 		.4byte	.LVL137
 3033 0990 FB0E0000 		.4byte	0xefb
 3034 0994 AB090000 		.4byte	0x9ab
 3035 0998 0A       		.uleb128 0xa
 3036 0999 01       		.uleb128 0x1
 3037 099a 50       		.byte	0x50
 3038 099b 05       		.uleb128 0x5
 3039 099c 03       		.byte	0x3
 3040 099d E8000000 		.4byte	.LANCHOR1+232
 3041 09a1 0A       		.uleb128 0xa
 3042 09a2 01       		.uleb128 0x1
 3043 09a3 51       		.byte	0x51
 3044 09a4 05       		.uleb128 0x5
 3045 09a5 03       		.byte	0x3
 3046 09a6 B0000000 		.4byte	.LC13
 3047 09aa 00       		.byte	0
 3048 09ab 09       		.uleb128 0x9
 3049 09ac 22010000 		.4byte	.LVL138
 3050 09b0 AE0E0000 		.4byte	0xeae
 3051 09b4 BF090000 		.4byte	0x9bf
 3052 09b8 0A       		.uleb128 0xa
 3053 09b9 01       		.uleb128 0x1
 3054 09ba 50       		.byte	0x50
 3055 09bb 02       		.uleb128 0x2
 3056 09bc 09       		.byte	0x9
 3057 09bd C8       		.byte	0xc8
 3058 09be 00       		.byte	0
 3059 09bf 09       		.uleb128 0x9
 3060 09c0 2C010000 		.4byte	.LVL139
 3061 09c4 FB0E0000 		.4byte	0xefb
 3062 09c8 DF090000 		.4byte	0x9df
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 65


 3063 09cc 0A       		.uleb128 0xa
 3064 09cd 01       		.uleb128 0x1
 3065 09ce 50       		.byte	0x50
 3066 09cf 05       		.uleb128 0x5
 3067 09d0 03       		.byte	0x3
 3068 09d1 E8000000 		.4byte	.LANCHOR1+232
 3069 09d5 0A       		.uleb128 0xa
 3070 09d6 01       		.uleb128 0x1
 3071 09d7 51       		.byte	0x51
 3072 09d8 05       		.uleb128 0x5
 3073 09d9 03       		.byte	0x3
 3074 09da B4000000 		.4byte	.LC14
 3075 09de 00       		.byte	0
 3076 09df 0E       		.uleb128 0xe
 3077 09e0 34010000 		.4byte	.LVL140
 3078 09e4 AE0E0000 		.4byte	0xeae
 3079 09e8 0A       		.uleb128 0xa
 3080 09e9 01       		.uleb128 0x1
 3081 09ea 50       		.byte	0x50
 3082 09eb 02       		.uleb128 0x2
 3083 09ec 08       		.byte	0x8
 3084 09ed 7F       		.byte	0x7f
 3085 09ee 00       		.byte	0
 3086 09ef 00       		.byte	0
 3087 09f0 0C       		.uleb128 0xc
 3088 09f1 62010000 		.4byte	.LBB12
 3089 09f5 66000000 		.4byte	.LBE12-.LBB12
 3090 09f9 7A0A0000 		.4byte	0xa7a
 3091 09fd 12       		.uleb128 0x12
 3092 09fe 7E020000 		.4byte	.LASF22
 3093 0a02 01       		.byte	0x1
 3094 0a03 9401     		.2byte	0x194
 3095 0a05 A7000000 		.4byte	0xa7
 3096 0a09 64010000 		.4byte	.LLST11
 3097 0a0d 08       		.uleb128 0x8
 3098 0a0e 66010000 		.4byte	.LVL144
 3099 0a12 060F0000 		.4byte	0xf06
 3100 0a16 09       		.uleb128 0x9
 3101 0a17 8A010000 		.4byte	.LVL146
 3102 0a1b FB0E0000 		.4byte	0xefb
 3103 0a1f 360A0000 		.4byte	0xa36
 3104 0a23 0A       		.uleb128 0xa
 3105 0a24 01       		.uleb128 0x1
 3106 0a25 50       		.byte	0x50
 3107 0a26 05       		.uleb128 0x5
 3108 0a27 03       		.byte	0x3
 3109 0a28 0C010000 		.4byte	.LANCHOR1+268
 3110 0a2c 0A       		.uleb128 0xa
 3111 0a2d 01       		.uleb128 0x1
 3112 0a2e 51       		.byte	0x51
 3113 0a2f 05       		.uleb128 0x5
 3114 0a30 03       		.byte	0x3
 3115 0a31 B0000000 		.4byte	.LC13
 3116 0a35 00       		.byte	0
 3117 0a36 09       		.uleb128 0x9
 3118 0a37 92010000 		.4byte	.LVL147
 3119 0a3b AE0E0000 		.4byte	0xeae
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 66


 3120 0a3f 490A0000 		.4byte	0xa49
 3121 0a43 0A       		.uleb128 0xa
 3122 0a44 01       		.uleb128 0x1
 3123 0a45 50       		.byte	0x50
 3124 0a46 01       		.uleb128 0x1
 3125 0a47 44       		.byte	0x44
 3126 0a48 00       		.byte	0
 3127 0a49 09       		.uleb128 0x9
 3128 0a4a 9C010000 		.4byte	.LVL148
 3129 0a4e FB0E0000 		.4byte	0xefb
 3130 0a52 690A0000 		.4byte	0xa69
 3131 0a56 0A       		.uleb128 0xa
 3132 0a57 01       		.uleb128 0x1
 3133 0a58 50       		.byte	0x50
 3134 0a59 05       		.uleb128 0x5
 3135 0a5a 03       		.byte	0x3
 3136 0a5b 0C010000 		.4byte	.LANCHOR1+268
 3137 0a5f 0A       		.uleb128 0xa
 3138 0a60 01       		.uleb128 0x1
 3139 0a61 51       		.byte	0x51
 3140 0a62 05       		.uleb128 0x5
 3141 0a63 03       		.byte	0x3
 3142 0a64 B4000000 		.4byte	.LC14
 3143 0a68 00       		.byte	0
 3144 0a69 0E       		.uleb128 0xe
 3145 0a6a A4010000 		.4byte	.LVL149
 3146 0a6e AE0E0000 		.4byte	0xeae
 3147 0a72 0A       		.uleb128 0xa
 3148 0a73 01       		.uleb128 0x1
 3149 0a74 50       		.byte	0x50
 3150 0a75 02       		.uleb128 0x2
 3151 0a76 08       		.byte	0x8
 3152 0a77 7F       		.byte	0x7f
 3153 0a78 00       		.byte	0
 3154 0a79 00       		.byte	0
 3155 0a7a 08       		.uleb128 0x8
 3156 0a7b E8000000 		.4byte	.LVL134
 3157 0a7f B90E0000 		.4byte	0xeb9
 3158 0a83 08       		.uleb128 0x8
 3159 0a84 5C010000 		.4byte	.LVL143
 3160 0a88 1C0F0000 		.4byte	0xf1c
 3161 0a8c 08       		.uleb128 0x8
 3162 0a8d CC010000 		.4byte	.LVL152
 3163 0a91 270F0000 		.4byte	0xf27
 3164 0a95 00       		.byte	0
 3165 0a96 15       		.uleb128 0x15
 3166 0a97 9A000000 		.4byte	.LASF34
 3167 0a9b 01       		.byte	0x1
 3168 0a9c AF01     		.2byte	0x1af
 3169 0a9e 00000000 		.4byte	.LFB68
 3170 0aa2 D0000000 		.4byte	.LFE68-.LFB68
 3171 0aa6 01       		.uleb128 0x1
 3172 0aa7 9C       		.byte	0x9c
 3173 0aa8 7D0B0000 		.4byte	0xb7d
 3174 0aac 0C       		.uleb128 0xc
 3175 0aad 0E000000 		.4byte	.LBB13
 3176 0ab1 84000000 		.4byte	.LBE13-.LBB13
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 67


 3177 0ab5 6C0B0000 		.4byte	0xb6c
 3178 0ab9 16       		.uleb128 0x16
 3179 0aba 6C6F6700 		.ascii	"log\000"
 3180 0abe 01       		.byte	0x1
 3181 0abf B501     		.2byte	0x1b5
 3182 0ac1 2C030000 		.4byte	0x32c
 3183 0ac5 02       		.uleb128 0x2
 3184 0ac6 91       		.byte	0x91
 3185 0ac7 58       		.sleb128 -40
 3186 0ac8 12       		.uleb128 0x12
 3187 0ac9 16020000 		.4byte	.LASF35
 3188 0acd 01       		.byte	0x1
 3189 0ace BA01     		.2byte	0x1ba
 3190 0ad0 68000000 		.4byte	0x68
 3191 0ad4 82010000 		.4byte	.LLST12
 3192 0ad8 08       		.uleb128 0x8
 3193 0ad9 12000000 		.4byte	.LVL153
 3194 0add DA0E0000 		.4byte	0xeda
 3195 0ae1 08       		.uleb128 0x8
 3196 0ae2 40000000 		.4byte	.LVL156
 3197 0ae6 AE0E0000 		.4byte	0xeae
 3198 0aea 09       		.uleb128 0x9
 3199 0aeb 52000000 		.4byte	.LVL158
 3200 0aef FE0D0000 		.4byte	0xdfe
 3201 0af3 070B0000 		.4byte	0xb07
 3202 0af7 0A       		.uleb128 0xa
 3203 0af8 01       		.uleb128 0x1
 3204 0af9 50       		.byte	0x50
 3205 0afa 02       		.uleb128 0x2
 3206 0afb 7D       		.byte	0x7d
 3207 0afc 00       		.sleb128 0
 3208 0afd 0A       		.uleb128 0xa
 3209 0afe 01       		.uleb128 0x1
 3210 0aff 51       		.byte	0x51
 3211 0b00 05       		.uleb128 0x5
 3212 0b01 03       		.byte	0x3
 3213 0b02 20010000 		.4byte	.LC19
 3214 0b06 00       		.byte	0
 3215 0b07 09       		.uleb128 0x9
 3216 0b08 58000000 		.4byte	.LVL159
 3217 0b0c 4B0E0000 		.4byte	0xe4b
 3218 0b10 1B0B0000 		.4byte	0xb1b
 3219 0b14 0A       		.uleb128 0xa
 3220 0b15 01       		.uleb128 0x1
 3221 0b16 50       		.byte	0x50
 3222 0b17 02       		.uleb128 0x2
 3223 0b18 7D       		.byte	0x7d
 3224 0b19 00       		.sleb128 0
 3225 0b1a 00       		.byte	0
 3226 0b1b 08       		.uleb128 0x8
 3227 0b1c 5C000000 		.4byte	.LVL160
 3228 0b20 DA0E0000 		.4byte	0xeda
 3229 0b24 09       		.uleb128 0x9
 3230 0b25 7A000000 		.4byte	.LVL162
 3231 0b29 E50E0000 		.4byte	0xee5
 3232 0b2d 380B0000 		.4byte	0xb38
 3233 0b31 0A       		.uleb128 0xa
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 68


 3234 0b32 01       		.uleb128 0x1
 3235 0b33 50       		.byte	0x50
 3236 0b34 02       		.uleb128 0x2
 3237 0b35 74       		.byte	0x74
 3238 0b36 00       		.sleb128 0
 3239 0b37 00       		.byte	0
 3240 0b38 09       		.uleb128 0x9
 3241 0b39 84000000 		.4byte	.LVL163
 3242 0b3d FE0D0000 		.4byte	0xdfe
 3243 0b41 5B0B0000 		.4byte	0xb5b
 3244 0b45 0A       		.uleb128 0xa
 3245 0b46 01       		.uleb128 0x1
 3246 0b47 50       		.byte	0x50
 3247 0b48 02       		.uleb128 0x2
 3248 0b49 7D       		.byte	0x7d
 3249 0b4a 00       		.sleb128 0
 3250 0b4b 0A       		.uleb128 0xa
 3251 0b4c 01       		.uleb128 0x1
 3252 0b4d 51       		.byte	0x51
 3253 0b4e 05       		.uleb128 0x5
 3254 0b4f 03       		.byte	0x3
 3255 0b50 2C010000 		.4byte	.LC20
 3256 0b54 0A       		.uleb128 0xa
 3257 0b55 01       		.uleb128 0x1
 3258 0b56 52       		.byte	0x52
 3259 0b57 02       		.uleb128 0x2
 3260 0b58 74       		.byte	0x74
 3261 0b59 00       		.sleb128 0
 3262 0b5a 00       		.byte	0
 3263 0b5b 0E       		.uleb128 0xe
 3264 0b5c 8A000000 		.4byte	.LVL164
 3265 0b60 4B0E0000 		.4byte	0xe4b
 3266 0b64 0A       		.uleb128 0xa
 3267 0b65 01       		.uleb128 0x1
 3268 0b66 50       		.byte	0x50
 3269 0b67 02       		.uleb128 0x2
 3270 0b68 7D       		.byte	0x7d
 3271 0b69 00       		.sleb128 0
 3272 0b6a 00       		.byte	0
 3273 0b6b 00       		.byte	0
 3274 0b6c 0E       		.uleb128 0xe
 3275 0b6d A6000000 		.4byte	.LVL166
 3276 0b71 AE0E0000 		.4byte	0xeae
 3277 0b75 0A       		.uleb128 0xa
 3278 0b76 01       		.uleb128 0x1
 3279 0b77 50       		.byte	0x50
 3280 0b78 02       		.uleb128 0x2
 3281 0b79 08       		.byte	0x8
 3282 0b7a 7F       		.byte	0x7f
 3283 0b7b 00       		.byte	0
 3284 0b7c 00       		.byte	0
 3285 0b7d 17       		.uleb128 0x17
 3286 0b7e 4A030000 		.4byte	.LASF102
 3287 0b82 01       		.byte	0x1
 3288 0b83 C901     		.2byte	0x1c9
 3289 0b85 68000000 		.4byte	0x68
 3290 0b89 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 69


 3291 0b8d 84000000 		.4byte	.LFE69-.LFB69
 3292 0b91 01       		.uleb128 0x1
 3293 0b92 9C       		.byte	0x9c
 3294 0b93 B40C0000 		.4byte	0xcb4
 3295 0b97 08       		.uleb128 0x8
 3296 0b98 08000000 		.4byte	.LVL167
 3297 0b9c 320F0000 		.4byte	0xf32
 3298 0ba0 08       		.uleb128 0x8
 3299 0ba1 0C000000 		.4byte	.LVL168
 3300 0ba5 3D0F0000 		.4byte	0xf3d
 3301 0ba9 08       		.uleb128 0x8
 3302 0baa 10000000 		.4byte	.LVL169
 3303 0bae 480F0000 		.4byte	0xf48
 3304 0bb2 08       		.uleb128 0x8
 3305 0bb3 14000000 		.4byte	.LVL170
 3306 0bb7 530F0000 		.4byte	0xf53
 3307 0bbb 08       		.uleb128 0x8
 3308 0bbc 18000000 		.4byte	.LVL171
 3309 0bc0 5E0F0000 		.4byte	0xf5e
 3310 0bc4 08       		.uleb128 0x8
 3311 0bc5 1C000000 		.4byte	.LVL172
 3312 0bc9 690F0000 		.4byte	0xf69
 3313 0bcd 08       		.uleb128 0x8
 3314 0bce 20000000 		.4byte	.LVL173
 3315 0bd2 740F0000 		.4byte	0xf74
 3316 0bd6 09       		.uleb128 0x9
 3317 0bd7 26000000 		.4byte	.LVL174
 3318 0bdb 7F0F0000 		.4byte	0xf7f
 3319 0bdf ED0B0000 		.4byte	0xbed
 3320 0be3 0A       		.uleb128 0xa
 3321 0be4 01       		.uleb128 0x1
 3322 0be5 50       		.byte	0x50
 3323 0be6 05       		.uleb128 0x5
 3324 0be7 03       		.byte	0x3
 3325 0be8 00000000 		.4byte	inter_1
 3326 0bec 00       		.byte	0
 3327 0bed 09       		.uleb128 0x9
 3328 0bee 2E000000 		.4byte	.LVL175
 3329 0bf2 8A0F0000 		.4byte	0xf8a
 3330 0bf6 010C0000 		.4byte	0xc01
 3331 0bfa 0A       		.uleb128 0xa
 3332 0bfb 01       		.uleb128 0x1
 3333 0bfc 50       		.byte	0x50
 3334 0bfd 02       		.uleb128 0x2
 3335 0bfe 74       		.byte	0x74
 3336 0bff 00       		.sleb128 0
 3337 0c00 00       		.byte	0
 3338 0c01 09       		.uleb128 0x9
 3339 0c02 34000000 		.4byte	.LVL176
 3340 0c06 950F0000 		.4byte	0xf95
 3341 0c0a 150C0000 		.4byte	0xc15
 3342 0c0e 0A       		.uleb128 0xa
 3343 0c0f 01       		.uleb128 0x1
 3344 0c10 50       		.byte	0x50
 3345 0c11 02       		.uleb128 0x2
 3346 0c12 74       		.byte	0x74
 3347 0c13 00       		.sleb128 0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 70


 3348 0c14 00       		.byte	0
 3349 0c15 09       		.uleb128 0x9
 3350 0c16 3A000000 		.4byte	.LVL177
 3351 0c1a A00F0000 		.4byte	0xfa0
 3352 0c1e 290C0000 		.4byte	0xc29
 3353 0c22 0A       		.uleb128 0xa
 3354 0c23 01       		.uleb128 0x1
 3355 0c24 50       		.byte	0x50
 3356 0c25 02       		.uleb128 0x2
 3357 0c26 74       		.byte	0x74
 3358 0c27 00       		.sleb128 0
 3359 0c28 00       		.byte	0
 3360 0c29 08       		.uleb128 0x8
 3361 0c2a 3E000000 		.4byte	.LVL178
 3362 0c2e AB0F0000 		.4byte	0xfab
 3363 0c32 08       		.uleb128 0x8
 3364 0c33 42000000 		.4byte	.LVL179
 3365 0c37 B60F0000 		.4byte	0xfb6
 3366 0c3b 08       		.uleb128 0x8
 3367 0c3c 46000000 		.4byte	.LVL180
 3368 0c40 C10F0000 		.4byte	0xfc1
 3369 0c44 08       		.uleb128 0x8
 3370 0c45 4A000000 		.4byte	.LVL181
 3371 0c49 CC0F0000 		.4byte	0xfcc
 3372 0c4d 08       		.uleb128 0x8
 3373 0c4e 4E000000 		.4byte	.LVL182
 3374 0c52 D70F0000 		.4byte	0xfd7
 3375 0c56 09       		.uleb128 0x9
 3376 0c57 54000000 		.4byte	.LVL183
 3377 0c5b AE0E0000 		.4byte	0xeae
 3378 0c5f 6A0C0000 		.4byte	0xc6a
 3379 0c63 0A       		.uleb128 0xa
 3380 0c64 01       		.uleb128 0x1
 3381 0c65 50       		.byte	0x50
 3382 0c66 02       		.uleb128 0x2
 3383 0c67 08       		.byte	0x8
 3384 0c68 7F       		.byte	0x7f
 3385 0c69 00       		.byte	0
 3386 0c6a 09       		.uleb128 0x9
 3387 0c6b 5A000000 		.4byte	.LVL184
 3388 0c6f E20F0000 		.4byte	0xfe2
 3389 0c73 7D0C0000 		.4byte	0xc7d
 3390 0c77 0A       		.uleb128 0xa
 3391 0c78 01       		.uleb128 0x1
 3392 0c79 50       		.byte	0x50
 3393 0c7a 01       		.uleb128 0x1
 3394 0c7b 30       		.byte	0x30
 3395 0c7c 00       		.byte	0
 3396 0c7d 08       		.uleb128 0x8
 3397 0c7e 5E000000 		.4byte	.LVL185
 3398 0c82 ED0F0000 		.4byte	0xfed
 3399 0c86 08       		.uleb128 0x8
 3400 0c87 62000000 		.4byte	.LVL186
 3401 0c8b F80F0000 		.4byte	0xff8
 3402 0c8f 08       		.uleb128 0x8
 3403 0c90 68000000 		.4byte	.LVL187
 3404 0c94 3C030000 		.4byte	0x33c
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 71


 3405 0c98 08       		.uleb128 0x8
 3406 0c99 6E000000 		.4byte	.LVL188
 3407 0c9d F80F0000 		.4byte	0xff8
 3408 0ca1 08       		.uleb128 0x8
 3409 0ca2 76000000 		.4byte	.LVL189
 3410 0ca6 B5070000 		.4byte	0x7b5
 3411 0caa 08       		.uleb128 0x8
 3412 0cab 7A000000 		.4byte	.LVL190
 3413 0caf 960A0000 		.4byte	0xa96
 3414 0cb3 00       		.byte	0
 3415 0cb4 18       		.uleb128 0x18
 3416 0cb5 26050000 		.4byte	.LASF36
 3417 0cb9 05       		.byte	0x5
 3418 0cba 1207     		.2byte	0x712
 3419 0cbc C00C0000 		.4byte	0xcc0
 3420 0cc0 19       		.uleb128 0x19
 3421 0cc1 76000000 		.4byte	0x76
 3422 0cc5 1A       		.uleb128 0x1a
 3423 0cc6 637800   		.ascii	"cx\000"
 3424 0cc9 01       		.byte	0x1
 3425 0cca 12       		.byte	0x12
 3426 0ccb 99000000 		.4byte	0x99
 3427 0ccf 05       		.uleb128 0x5
 3428 0cd0 03       		.byte	0x3
 3429 0cd1 00000000 		.4byte	cx
 3430 0cd5 1B       		.uleb128 0x1b
 3431 0cd6 00000000 		.4byte	.LASF37
 3432 0cda 01       		.byte	0x1
 3433 0cdb 13       		.byte	0x13
 3434 0cdc A0000000 		.4byte	0xa0
 3435 0ce0 05       		.uleb128 0x5
 3436 0ce1 03       		.byte	0x3
 3437 0ce2 00000000 		.4byte	servoPWM
 3438 0ce6 1B       		.uleb128 0x1b
 3439 0ce7 5C000000 		.4byte	.LASF38
 3440 0ceb 01       		.byte	0x1
 3441 0cec 14       		.byte	0x14
 3442 0ced 81000000 		.4byte	0x81
 3443 0cf1 05       		.uleb128 0x5
 3444 0cf2 03       		.byte	0x3
 3445 0cf3 00000000 		.4byte	evasiveMode
 3446 0cf7 1B       		.uleb128 0x1b
 3447 0cf8 77030000 		.4byte	.LASF39
 3448 0cfc 01       		.byte	0x1
 3449 0cfd 15       		.byte	0x15
 3450 0cfe 8D000000 		.4byte	0x8d
 3451 0d02 05       		.uleb128 0x5
 3452 0d03 03       		.byte	0x3
 3453 0d04 00000000 		.4byte	frontDistance
 3454 0d08 1B       		.uleb128 0x1b
 3455 0d09 39020000 		.4byte	.LASF40
 3456 0d0d 01       		.byte	0x1
 3457 0d0e 16       		.byte	0x16
 3458 0d0f 8D000000 		.4byte	0x8d
 3459 0d13 05       		.uleb128 0x5
 3460 0d14 03       		.byte	0x3
 3461 0d15 00000000 		.4byte	rearDistance
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 72


 3462 0d19 1B       		.uleb128 0x1b
 3463 0d1a E0020000 		.4byte	.LASF41
 3464 0d1e 01       		.byte	0x1
 3465 0d1f 18       		.byte	0x18
 3466 0d20 81000000 		.4byte	0x81
 3467 0d24 05       		.uleb128 0x5
 3468 0d25 03       		.byte	0x3
 3469 0d26 00000000 		.4byte	turn
 3470 0d2a 1B       		.uleb128 0x1b
 3471 0d2b D4040000 		.4byte	.LASF42
 3472 0d2f 01       		.byte	0x1
 3473 0d30 19       		.byte	0x19
 3474 0d31 8D000000 		.4byte	0x8d
 3475 0d35 05       		.uleb128 0x5
 3476 0d36 03       		.byte	0x3
 3477 0d37 00000000 		.4byte	targetSpeed
 3478 0d3b 1B       		.uleb128 0x1b
 3479 0d3c E7050000 		.4byte	.LASF43
 3480 0d40 01       		.byte	0x1
 3481 0d41 1C       		.byte	0x1c
 3482 0d42 8D000000 		.4byte	0x8d
 3483 0d46 05       		.uleb128 0x5
 3484 0d47 03       		.byte	0x3
 3485 0d48 00000000 		.4byte	old_time
 3486 0d4c 1B       		.uleb128 0x1b
 3487 0d4d 57030000 		.4byte	.LASF44
 3488 0d51 01       		.byte	0x1
 3489 0d52 1D       		.byte	0x1d
 3490 0d53 8D000000 		.4byte	0x8d
 3491 0d57 05       		.uleb128 0x5
 3492 0d58 03       		.byte	0x3
 3493 0d59 00000000 		.4byte	new_time
 3494 0d5d 1B       		.uleb128 0x1b
 3495 0d5e 26010000 		.4byte	.LASF45
 3496 0d62 01       		.byte	0x1
 3497 0d63 1E       		.byte	0x1e
 3498 0d64 8D000000 		.4byte	0x8d
 3499 0d68 05       		.uleb128 0x5
 3500 0d69 03       		.byte	0x3
 3501 0d6a 00000000 		.4byte	elapsed_time
 3502 0d6e 1B       		.uleb128 0x1b
 3503 0d6f B8040000 		.4byte	.LASF46
 3504 0d73 01       		.byte	0x1
 3505 0d74 1F       		.byte	0x1f
 3506 0d75 2C030000 		.4byte	0x32c
 3507 0d79 05       		.uleb128 0x5
 3508 0d7a 03       		.byte	0x3
 3509 0d7b 00000000 		.4byte	strbuf2
 3510 0d7f 1A       		.uleb128 0x1a
 3511 0d80 50574D00 		.ascii	"PWM\000"
 3512 0d84 01       		.byte	0x1
 3513 0d85 21       		.byte	0x21
 3514 0d86 A0000000 		.4byte	0xa0
 3515 0d8a 05       		.uleb128 0x5
 3516 0d8b 03       		.byte	0x3
 3517 0d8c 00000000 		.4byte	PWM
 3518 0d90 1B       		.uleb128 0x1b
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 73


 3519 0d91 E5020000 		.4byte	.LASF47
 3520 0d95 01       		.byte	0x1
 3521 0d96 22       		.byte	0x22
 3522 0d97 A10D0000 		.4byte	0xda1
 3523 0d9b 05       		.uleb128 0x5
 3524 0d9c 03       		.byte	0x3
 3525 0d9d 00000000 		.4byte	speed
 3526 0da1 19       		.uleb128 0x19
 3527 0da2 A0000000 		.4byte	0xa0
 3528 0da6 1A       		.uleb128 0x1a
 3529 0da7 6B7000   		.ascii	"kp\000"
 3530 0daa 01       		.byte	0x1
 3531 0dab 25       		.byte	0x25
 3532 0dac A0000000 		.4byte	0xa0
 3533 0db0 05       		.uleb128 0x5
 3534 0db1 03       		.byte	0x3
 3535 0db2 00000000 		.4byte	kp
 3536 0db6 1A       		.uleb128 0x1a
 3537 0db7 6B6900   		.ascii	"ki\000"
 3538 0dba 01       		.byte	0x1
 3539 0dbb 26       		.byte	0x26
 3540 0dbc A0000000 		.4byte	0xa0
 3541 0dc0 05       		.uleb128 0x5
 3542 0dc1 03       		.byte	0x3
 3543 0dc2 00000000 		.4byte	ki
 3544 0dc6 1B       		.uleb128 0x1b
 3545 0dc7 59020000 		.4byte	.LASF48
 3546 0dcb 01       		.byte	0x1
 3547 0dcc 27       		.byte	0x27
 3548 0dcd A0000000 		.4byte	0xa0
 3549 0dd1 05       		.uleb128 0x5
 3550 0dd2 03       		.byte	0x3
 3551 0dd3 00000000 		.4byte	accumulated_error
 3552 0dd7 1B       		.uleb128 0x1b
 3553 0dd8 30020000 		.4byte	.LASF49
 3554 0ddc 01       		.byte	0x1
 3555 0ddd 28       		.byte	0x28
 3556 0dde A0000000 		.4byte	0xa0
 3557 0de2 05       		.uleb128 0x5
 3558 0de3 03       		.byte	0x3
 3559 0de4 00000000 		.4byte	PWM_base
 3560 0de8 1C       		.uleb128 0x1c
 3561 0de9 8C040000 		.4byte	.LASF50
 3562 0ded 8C040000 		.4byte	.LASF50
 3563 0df1 06       		.byte	0x6
 3564 0df2 6B       		.byte	0x6b
 3565 0df3 1C       		.uleb128 0x1c
 3566 0df4 1E000000 		.4byte	.LASF51
 3567 0df8 1E000000 		.4byte	.LASF51
 3568 0dfc 06       		.byte	0x6
 3569 0dfd 5E       		.byte	0x5e
 3570 0dfe 1C       		.uleb128 0x1c
 3571 0dff 9E020000 		.4byte	.LASF52
 3572 0e03 9E020000 		.4byte	.LASF52
 3573 0e07 07       		.byte	0x7
 3574 0e08 E7       		.byte	0xe7
 3575 0e09 1C       		.uleb128 0x1c
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 74


 3576 0e0a EB020000 		.4byte	.LASF53
 3577 0e0e EB020000 		.4byte	.LASF53
 3578 0e12 08       		.byte	0x8
 3579 0e13 C3       		.byte	0xc3
 3580 0e14 1C       		.uleb128 0x1c
 3581 0e15 9E040000 		.4byte	.LASF54
 3582 0e19 9E040000 		.4byte	.LASF54
 3583 0e1d 09       		.byte	0x9
 3584 0e1e 28       		.byte	0x28
 3585 0e1f 1C       		.uleb128 0x1c
 3586 0e20 8B020000 		.4byte	.LASF55
 3587 0e24 8B020000 		.4byte	.LASF55
 3588 0e28 0A       		.byte	0xa
 3589 0e29 4D       		.byte	0x4d
 3590 0e2a 1C       		.uleb128 0x1c
 3591 0e2b 60010000 		.4byte	.LASF56
 3592 0e2f 60010000 		.4byte	.LASF56
 3593 0e33 0B       		.byte	0xb
 3594 0e34 2F       		.byte	0x2f
 3595 0e35 1C       		.uleb128 0x1c
 3596 0e36 25020000 		.4byte	.LASF57
 3597 0e3a 25020000 		.4byte	.LASF57
 3598 0e3e 0C       		.byte	0xc
 3599 0e3f 2F       		.byte	0x2f
 3600 0e40 1C       		.uleb128 0x1c
 3601 0e41 52000000 		.4byte	.LASF58
 3602 0e45 52000000 		.4byte	.LASF58
 3603 0e49 0D       		.byte	0xd
 3604 0e4a 2F       		.byte	0x2f
 3605 0e4b 1C       		.uleb128 0x1c
 3606 0e4c 11040000 		.4byte	.LASF59
 3607 0e50 11040000 		.4byte	.LASF59
 3608 0e54 0E       		.byte	0xe
 3609 0e55 8B       		.byte	0x8b
 3610 0e56 1C       		.uleb128 0x1c
 3611 0e57 0F000000 		.4byte	.LASF60
 3612 0e5b 0F000000 		.4byte	.LASF60
 3613 0e5f 0E       		.byte	0xe
 3614 0e60 71       		.byte	0x71
 3615 0e61 1C       		.uleb128 0x1c
 3616 0e62 3F010000 		.4byte	.LASF61
 3617 0e66 3F010000 		.4byte	.LASF61
 3618 0e6a 09       		.byte	0x9
 3619 0e6b 23       		.byte	0x23
 3620 0e6c 1C       		.uleb128 0x1c
 3621 0e6d 6B010000 		.4byte	.LASF62
 3622 0e71 6B010000 		.4byte	.LASF62
 3623 0e75 0F       		.byte	0xf
 3624 0e76 29       		.byte	0x29
 3625 0e77 1C       		.uleb128 0x1c
 3626 0e78 DA000000 		.4byte	.LASF63
 3627 0e7c DA000000 		.4byte	.LASF63
 3628 0e80 10       		.byte	0x10
 3629 0e81 29       		.byte	0x29
 3630 0e82 1C       		.uleb128 0x1c
 3631 0e83 3C030000 		.4byte	.LASF64
 3632 0e87 3C030000 		.4byte	.LASF64
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 75


 3633 0e8b 11       		.byte	0x11
 3634 0e8c 29       		.byte	0x29
 3635 0e8d 1C       		.uleb128 0x1c
 3636 0e8e 07020000 		.4byte	.LASF65
 3637 0e92 07020000 		.4byte	.LASF65
 3638 0e96 12       		.byte	0x12
 3639 0e97 29       		.byte	0x29
 3640 0e98 1C       		.uleb128 0x1c
 3641 0e99 6B020000 		.4byte	.LASF66
 3642 0e9d 6B020000 		.4byte	.LASF66
 3643 0ea1 13       		.byte	0x13
 3644 0ea2 29       		.byte	0x29
 3645 0ea3 1C       		.uleb128 0x1c
 3646 0ea4 C0040000 		.4byte	.LASF67
 3647 0ea8 C0040000 		.4byte	.LASF67
 3648 0eac 14       		.byte	0x14
 3649 0ead 29       		.byte	0x29
 3650 0eae 1C       		.uleb128 0x1c
 3651 0eaf 46020000 		.4byte	.LASF68
 3652 0eb3 46020000 		.4byte	.LASF68
 3653 0eb7 15       		.byte	0x15
 3654 0eb8 C3       		.byte	0xc3
 3655 0eb9 1C       		.uleb128 0x1c
 3656 0eba F1030000 		.4byte	.LASF69
 3657 0ebe F1030000 		.4byte	.LASF69
 3658 0ec2 0E       		.byte	0xe
 3659 0ec3 73       		.byte	0x73
 3660 0ec4 1C       		.uleb128 0x1c
 3661 0ec5 20020000 		.4byte	.LASF70
 3662 0ec9 20020000 		.4byte	.LASF70
 3663 0ecd 0A       		.byte	0xa
 3664 0ece 49       		.byte	0x49
 3665 0ecf 1C       		.uleb128 0x1c
 3666 0ed0 43000000 		.4byte	.LASF71
 3667 0ed4 43000000 		.4byte	.LASF71
 3668 0ed8 16       		.byte	0x16
 3669 0ed9 71       		.byte	0x71
 3670 0eda 1C       		.uleb128 0x1c
 3671 0edb 5B010000 		.4byte	.LASF72
 3672 0edf 5B010000 		.4byte	.LASF72
 3673 0ee3 0A       		.byte	0xa
 3674 0ee4 88       		.byte	0x88
 3675 0ee5 1C       		.uleb128 0x1c
 3676 0ee6 C1050000 		.4byte	.LASF73
 3677 0eea C1050000 		.4byte	.LASF73
 3678 0eee 17       		.byte	0x17
 3679 0eef 76       		.byte	0x76
 3680 0ef0 1C       		.uleb128 0x1c
 3681 0ef1 82000000 		.4byte	.LASF74
 3682 0ef5 82000000 		.4byte	.LASF74
 3683 0ef9 18       		.byte	0x18
 3684 0efa 71       		.byte	0x71
 3685 0efb 1C       		.uleb128 0x1c
 3686 0efc 47010000 		.4byte	.LASF75
 3687 0f00 47010000 		.4byte	.LASF75
 3688 0f04 09       		.byte	0x9
 3689 0f05 1C       		.byte	0x1c
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 76


 3690 0f06 1C       		.uleb128 0x1c
 3691 0f07 E2030000 		.4byte	.LASF76
 3692 0f0b E2030000 		.4byte	.LASF76
 3693 0f0f 19       		.byte	0x19
 3694 0f10 71       		.byte	0x71
 3695 0f11 1C       		.uleb128 0x1c
 3696 0f12 86010000 		.4byte	.LASF77
 3697 0f16 86010000 		.4byte	.LASF77
 3698 0f1a 16       		.byte	0x16
 3699 0f1b 73       		.byte	0x73
 3700 0f1c 1C       		.uleb128 0x1c
 3701 0f1d CE010000 		.4byte	.LASF78
 3702 0f21 CE010000 		.4byte	.LASF78
 3703 0f25 18       		.byte	0x18
 3704 0f26 73       		.byte	0x73
 3705 0f27 1C       		.uleb128 0x1c
 3706 0f28 2D040000 		.4byte	.LASF79
 3707 0f2c 2D040000 		.4byte	.LASF79
 3708 0f30 19       		.byte	0x19
 3709 0f31 73       		.byte	0x73
 3710 0f32 1C       		.uleb128 0x1c
 3711 0f33 A5040000 		.4byte	.LASF80
 3712 0f37 A5040000 		.4byte	.LASF80
 3713 0f3b 1A       		.byte	0x1a
 3714 0f3c 17       		.byte	0x17
 3715 0f3d 1C       		.uleb128 0x1c
 3716 0f3e A6020000 		.4byte	.LASF81
 3717 0f42 A6020000 		.4byte	.LASF81
 3718 0f46 1B       		.byte	0x1b
 3719 0f47 17       		.byte	0x17
 3720 0f48 1C       		.uleb128 0x1c
 3721 0f49 FC020000 		.4byte	.LASF82
 3722 0f4d FC020000 		.4byte	.LASF82
 3723 0f51 1C       		.byte	0x1c
 3724 0f52 17       		.byte	0x17
 3725 0f53 1C       		.uleb128 0x1c
 3726 0f54 A4030000 		.4byte	.LASF83
 3727 0f58 A4030000 		.4byte	.LASF83
 3728 0f5c 1D       		.byte	0x1d
 3729 0f5d 17       		.byte	0x17
 3730 0f5e 1C       		.uleb128 0x1c
 3731 0f5f 85030000 		.4byte	.LASF84
 3732 0f63 85030000 		.4byte	.LASF84
 3733 0f67 1E       		.byte	0x1e
 3734 0f68 17       		.byte	0x17
 3735 0f69 1C       		.uleb128 0x1c
 3736 0f6a E5010000 		.4byte	.LASF85
 3737 0f6e E5010000 		.4byte	.LASF85
 3738 0f72 06       		.byte	0x6
 3739 0f73 5A       		.byte	0x5a
 3740 0f74 1C       		.uleb128 0x1c
 3741 0f75 82040000 		.4byte	.LASF86
 3742 0f79 82040000 		.4byte	.LASF86
 3743 0f7d 08       		.byte	0x8
 3744 0f7e 92       		.byte	0x92
 3745 0f7f 1C       		.uleb128 0x1c
 3746 0f80 60030000 		.4byte	.LASF87
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 77


 3747 0f84 60030000 		.4byte	.LASF87
 3748 0f88 1A       		.byte	0x1a
 3749 0f89 1D       		.byte	0x1d
 3750 0f8a 1C       		.uleb128 0x1c
 3751 0f8b 0C010000 		.4byte	.LASF88
 3752 0f8f 0C010000 		.4byte	.LASF88
 3753 0f93 1B       		.byte	0x1b
 3754 0f94 1D       		.byte	0x1d
 3755 0f95 1C       		.uleb128 0x1c
 3756 0f96 EC000000 		.4byte	.LASF89
 3757 0f9a EC000000 		.4byte	.LASF89
 3758 0f9e 1C       		.byte	0x1c
 3759 0f9f 1D       		.byte	0x1d
 3760 0fa0 1C       		.uleb128 0x1c
 3761 0fa1 B1000000 		.4byte	.LASF90
 3762 0fa5 B1000000 		.4byte	.LASF90
 3763 0fa9 1D       		.byte	0x1d
 3764 0faa 1D       		.byte	0x1d
 3765 0fab 1C       		.uleb128 0x1c
 3766 0fac 79010000 		.4byte	.LASF91
 3767 0fb0 79010000 		.4byte	.LASF91
 3768 0fb4 0E       		.byte	0xe
 3769 0fb5 54       		.byte	0x54
 3770 0fb6 1C       		.uleb128 0x1c
 3771 0fb7 6B040000 		.4byte	.LASF92
 3772 0fbb 6B040000 		.4byte	.LASF92
 3773 0fbf 16       		.byte	0x16
 3774 0fc0 54       		.byte	0x54
 3775 0fc1 1C       		.uleb128 0x1c
 3776 0fc2 FA010000 		.4byte	.LASF93
 3777 0fc6 FA010000 		.4byte	.LASF93
 3778 0fca 18       		.byte	0x18
 3779 0fcb 54       		.byte	0x54
 3780 0fcc 1C       		.uleb128 0x1c
 3781 0fcd E0040000 		.4byte	.LASF94
 3782 0fd1 E0040000 		.4byte	.LASF94
 3783 0fd5 19       		.byte	0x19
 3784 0fd6 54       		.byte	0x54
 3785 0fd7 1C       		.uleb128 0x1c
 3786 0fd8 37000000 		.4byte	.LASF95
 3787 0fdc 37000000 		.4byte	.LASF95
 3788 0fe0 15       		.byte	0x15
 3789 0fe1 92       		.byte	0x92
 3790 0fe2 1C       		.uleb128 0x1c
 3791 0fe3 CF040000 		.4byte	.LASF96
 3792 0fe7 CF040000 		.4byte	.LASF96
 3793 0feb 1F       		.byte	0x1f
 3794 0fec 37       		.byte	0x37
 3795 0fed 1C       		.uleb128 0x1c
 3796 0fee 5B040000 		.4byte	.LASF97
 3797 0ff2 5B040000 		.4byte	.LASF97
 3798 0ff6 0A       		.byte	0xa
 3799 0ff7 96       		.byte	0x96
 3800 0ff8 1C       		.uleb128 0x1c
 3801 0ff9 D0000000 		.4byte	.LASF98
 3802 0ffd D0000000 		.4byte	.LASF98
 3803 1001 0C       		.byte	0xc
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 78


 3804 1002 30       		.byte	0x30
 3805 1003 00       		.byte	0
 3806              		.section	.debug_abbrev,"",%progbits
 3807              	.Ldebug_abbrev0:
 3808 0000 01       		.uleb128 0x1
 3809 0001 11       		.uleb128 0x11
 3810 0002 01       		.byte	0x1
 3811 0003 25       		.uleb128 0x25
 3812 0004 0E       		.uleb128 0xe
 3813 0005 13       		.uleb128 0x13
 3814 0006 0B       		.uleb128 0xb
 3815 0007 03       		.uleb128 0x3
 3816 0008 0E       		.uleb128 0xe
 3817 0009 1B       		.uleb128 0x1b
 3818 000a 0E       		.uleb128 0xe
 3819 000b 55       		.uleb128 0x55
 3820 000c 17       		.uleb128 0x17
 3821 000d 11       		.uleb128 0x11
 3822 000e 01       		.uleb128 0x1
 3823 000f 10       		.uleb128 0x10
 3824 0010 17       		.uleb128 0x17
 3825 0011 00       		.byte	0
 3826 0012 00       		.byte	0
 3827 0013 02       		.uleb128 0x2
 3828 0014 24       		.uleb128 0x24
 3829 0015 00       		.byte	0
 3830 0016 0B       		.uleb128 0xb
 3831 0017 0B       		.uleb128 0xb
 3832 0018 3E       		.uleb128 0x3e
 3833 0019 0B       		.uleb128 0xb
 3834 001a 03       		.uleb128 0x3
 3835 001b 0E       		.uleb128 0xe
 3836 001c 00       		.byte	0
 3837 001d 00       		.byte	0
 3838 001e 03       		.uleb128 0x3
 3839 001f 16       		.uleb128 0x16
 3840 0020 00       		.byte	0
 3841 0021 03       		.uleb128 0x3
 3842 0022 0E       		.uleb128 0xe
 3843 0023 3A       		.uleb128 0x3a
 3844 0024 0B       		.uleb128 0xb
 3845 0025 3B       		.uleb128 0x3b
 3846 0026 0B       		.uleb128 0xb
 3847 0027 49       		.uleb128 0x49
 3848 0028 13       		.uleb128 0x13
 3849 0029 00       		.byte	0
 3850 002a 00       		.byte	0
 3851 002b 04       		.uleb128 0x4
 3852 002c 24       		.uleb128 0x24
 3853 002d 00       		.byte	0
 3854 002e 0B       		.uleb128 0xb
 3855 002f 0B       		.uleb128 0xb
 3856 0030 3E       		.uleb128 0x3e
 3857 0031 0B       		.uleb128 0xb
 3858 0032 03       		.uleb128 0x3
 3859 0033 08       		.uleb128 0x8
 3860 0034 00       		.byte	0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 79


 3861 0035 00       		.byte	0
 3862 0036 05       		.uleb128 0x5
 3863 0037 16       		.uleb128 0x16
 3864 0038 00       		.byte	0
 3865 0039 03       		.uleb128 0x3
 3866 003a 0E       		.uleb128 0xe
 3867 003b 3A       		.uleb128 0x3a
 3868 003c 0B       		.uleb128 0xb
 3869 003d 3B       		.uleb128 0x3b
 3870 003e 05       		.uleb128 0x5
 3871 003f 49       		.uleb128 0x49
 3872 0040 13       		.uleb128 0x13
 3873 0041 00       		.byte	0
 3874 0042 00       		.byte	0
 3875 0043 06       		.uleb128 0x6
 3876 0044 0F       		.uleb128 0xf
 3877 0045 00       		.byte	0
 3878 0046 0B       		.uleb128 0xb
 3879 0047 0B       		.uleb128 0xb
 3880 0048 49       		.uleb128 0x49
 3881 0049 13       		.uleb128 0x13
 3882 004a 00       		.byte	0
 3883 004b 00       		.byte	0
 3884 004c 07       		.uleb128 0x7
 3885 004d 2E       		.uleb128 0x2e
 3886 004e 01       		.byte	0x1
 3887 004f 3F       		.uleb128 0x3f
 3888 0050 19       		.uleb128 0x19
 3889 0051 03       		.uleb128 0x3
 3890 0052 0E       		.uleb128 0xe
 3891 0053 3A       		.uleb128 0x3a
 3892 0054 0B       		.uleb128 0xb
 3893 0055 3B       		.uleb128 0x3b
 3894 0056 0B       		.uleb128 0xb
 3895 0057 27       		.uleb128 0x27
 3896 0058 19       		.uleb128 0x19
 3897 0059 11       		.uleb128 0x11
 3898 005a 01       		.uleb128 0x1
 3899 005b 12       		.uleb128 0x12
 3900 005c 06       		.uleb128 0x6
 3901 005d 40       		.uleb128 0x40
 3902 005e 18       		.uleb128 0x18
 3903 005f 9642     		.uleb128 0x2116
 3904 0061 19       		.uleb128 0x19
 3905 0062 01       		.uleb128 0x1
 3906 0063 13       		.uleb128 0x13
 3907 0064 00       		.byte	0
 3908 0065 00       		.byte	0
 3909 0066 08       		.uleb128 0x8
 3910 0067 898201   		.uleb128 0x4109
 3911 006a 00       		.byte	0
 3912 006b 11       		.uleb128 0x11
 3913 006c 01       		.uleb128 0x1
 3914 006d 31       		.uleb128 0x31
 3915 006e 13       		.uleb128 0x13
 3916 006f 00       		.byte	0
 3917 0070 00       		.byte	0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 80


 3918 0071 09       		.uleb128 0x9
 3919 0072 898201   		.uleb128 0x4109
 3920 0075 01       		.byte	0x1
 3921 0076 11       		.uleb128 0x11
 3922 0077 01       		.uleb128 0x1
 3923 0078 31       		.uleb128 0x31
 3924 0079 13       		.uleb128 0x13
 3925 007a 01       		.uleb128 0x1
 3926 007b 13       		.uleb128 0x13
 3927 007c 00       		.byte	0
 3928 007d 00       		.byte	0
 3929 007e 0A       		.uleb128 0xa
 3930 007f 8A8201   		.uleb128 0x410a
 3931 0082 00       		.byte	0
 3932 0083 02       		.uleb128 0x2
 3933 0084 18       		.uleb128 0x18
 3934 0085 9142     		.uleb128 0x2111
 3935 0087 18       		.uleb128 0x18
 3936 0088 00       		.byte	0
 3937 0089 00       		.byte	0
 3938 008a 0B       		.uleb128 0xb
 3939 008b 34       		.uleb128 0x34
 3940 008c 00       		.byte	0
 3941 008d 03       		.uleb128 0x3
 3942 008e 0E       		.uleb128 0xe
 3943 008f 3A       		.uleb128 0x3a
 3944 0090 0B       		.uleb128 0xb
 3945 0091 3B       		.uleb128 0x3b
 3946 0092 0B       		.uleb128 0xb
 3947 0093 49       		.uleb128 0x49
 3948 0094 13       		.uleb128 0x13
 3949 0095 02       		.uleb128 0x2
 3950 0096 18       		.uleb128 0x18
 3951 0097 00       		.byte	0
 3952 0098 00       		.byte	0
 3953 0099 0C       		.uleb128 0xc
 3954 009a 0B       		.uleb128 0xb
 3955 009b 01       		.byte	0x1
 3956 009c 11       		.uleb128 0x11
 3957 009d 01       		.uleb128 0x1
 3958 009e 12       		.uleb128 0x12
 3959 009f 06       		.uleb128 0x6
 3960 00a0 01       		.uleb128 0x1
 3961 00a1 13       		.uleb128 0x13
 3962 00a2 00       		.byte	0
 3963 00a3 00       		.byte	0
 3964 00a4 0D       		.uleb128 0xd
 3965 00a5 34       		.uleb128 0x34
 3966 00a6 00       		.byte	0
 3967 00a7 03       		.uleb128 0x3
 3968 00a8 0E       		.uleb128 0xe
 3969 00a9 3A       		.uleb128 0x3a
 3970 00aa 0B       		.uleb128 0xb
 3971 00ab 3B       		.uleb128 0x3b
 3972 00ac 0B       		.uleb128 0xb
 3973 00ad 49       		.uleb128 0x49
 3974 00ae 13       		.uleb128 0x13
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 81


 3975 00af 02       		.uleb128 0x2
 3976 00b0 17       		.uleb128 0x17
 3977 00b1 00       		.byte	0
 3978 00b2 00       		.byte	0
 3979 00b3 0E       		.uleb128 0xe
 3980 00b4 898201   		.uleb128 0x4109
 3981 00b7 01       		.byte	0x1
 3982 00b8 11       		.uleb128 0x11
 3983 00b9 01       		.uleb128 0x1
 3984 00ba 31       		.uleb128 0x31
 3985 00bb 13       		.uleb128 0x13
 3986 00bc 00       		.byte	0
 3987 00bd 00       		.byte	0
 3988 00be 0F       		.uleb128 0xf
 3989 00bf 01       		.uleb128 0x1
 3990 00c0 01       		.byte	0x1
 3991 00c1 49       		.uleb128 0x49
 3992 00c2 13       		.uleb128 0x13
 3993 00c3 01       		.uleb128 0x1
 3994 00c4 13       		.uleb128 0x13
 3995 00c5 00       		.byte	0
 3996 00c6 00       		.byte	0
 3997 00c7 10       		.uleb128 0x10
 3998 00c8 21       		.uleb128 0x21
 3999 00c9 00       		.byte	0
 4000 00ca 49       		.uleb128 0x49
 4001 00cb 13       		.uleb128 0x13
 4002 00cc 2F       		.uleb128 0x2f
 4003 00cd 0B       		.uleb128 0xb
 4004 00ce 00       		.byte	0
 4005 00cf 00       		.byte	0
 4006 00d0 11       		.uleb128 0x11
 4007 00d1 2E       		.uleb128 0x2e
 4008 00d2 01       		.byte	0x1
 4009 00d3 3F       		.uleb128 0x3f
 4010 00d4 19       		.uleb128 0x19
 4011 00d5 03       		.uleb128 0x3
 4012 00d6 0E       		.uleb128 0xe
 4013 00d7 3A       		.uleb128 0x3a
 4014 00d8 0B       		.uleb128 0xb
 4015 00d9 3B       		.uleb128 0x3b
 4016 00da 0B       		.uleb128 0xb
 4017 00db 11       		.uleb128 0x11
 4018 00dc 01       		.uleb128 0x1
 4019 00dd 12       		.uleb128 0x12
 4020 00de 06       		.uleb128 0x6
 4021 00df 40       		.uleb128 0x40
 4022 00e0 18       		.uleb128 0x18
 4023 00e1 9642     		.uleb128 0x2116
 4024 00e3 19       		.uleb128 0x19
 4025 00e4 01       		.uleb128 0x1
 4026 00e5 13       		.uleb128 0x13
 4027 00e6 00       		.byte	0
 4028 00e7 00       		.byte	0
 4029 00e8 12       		.uleb128 0x12
 4030 00e9 34       		.uleb128 0x34
 4031 00ea 00       		.byte	0
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 82


 4032 00eb 03       		.uleb128 0x3
 4033 00ec 0E       		.uleb128 0xe
 4034 00ed 3A       		.uleb128 0x3a
 4035 00ee 0B       		.uleb128 0xb
 4036 00ef 3B       		.uleb128 0x3b
 4037 00f0 05       		.uleb128 0x5
 4038 00f1 49       		.uleb128 0x49
 4039 00f2 13       		.uleb128 0x13
 4040 00f3 02       		.uleb128 0x2
 4041 00f4 17       		.uleb128 0x17
 4042 00f5 00       		.byte	0
 4043 00f6 00       		.byte	0
 4044 00f7 13       		.uleb128 0x13
 4045 00f8 2E       		.uleb128 0x2e
 4046 00f9 01       		.byte	0x1
 4047 00fa 3F       		.uleb128 0x3f
 4048 00fb 19       		.uleb128 0x19
 4049 00fc 03       		.uleb128 0x3
 4050 00fd 0E       		.uleb128 0xe
 4051 00fe 3A       		.uleb128 0x3a
 4052 00ff 0B       		.uleb128 0xb
 4053 0100 3B       		.uleb128 0x3b
 4054 0101 05       		.uleb128 0x5
 4055 0102 11       		.uleb128 0x11
 4056 0103 01       		.uleb128 0x1
 4057 0104 12       		.uleb128 0x12
 4058 0105 06       		.uleb128 0x6
 4059 0106 40       		.uleb128 0x40
 4060 0107 18       		.uleb128 0x18
 4061 0108 9742     		.uleb128 0x2117
 4062 010a 19       		.uleb128 0x19
 4063 010b 01       		.uleb128 0x1
 4064 010c 13       		.uleb128 0x13
 4065 010d 00       		.byte	0
 4066 010e 00       		.byte	0
 4067 010f 14       		.uleb128 0x14
 4068 0110 34       		.uleb128 0x34
 4069 0111 00       		.byte	0
 4070 0112 03       		.uleb128 0x3
 4071 0113 0E       		.uleb128 0xe
 4072 0114 3A       		.uleb128 0x3a
 4073 0115 0B       		.uleb128 0xb
 4074 0116 3B       		.uleb128 0x3b
 4075 0117 05       		.uleb128 0x5
 4076 0118 49       		.uleb128 0x49
 4077 0119 13       		.uleb128 0x13
 4078 011a 02       		.uleb128 0x2
 4079 011b 18       		.uleb128 0x18
 4080 011c 00       		.byte	0
 4081 011d 00       		.byte	0
 4082 011e 15       		.uleb128 0x15
 4083 011f 2E       		.uleb128 0x2e
 4084 0120 01       		.byte	0x1
 4085 0121 3F       		.uleb128 0x3f
 4086 0122 19       		.uleb128 0x19
 4087 0123 03       		.uleb128 0x3
 4088 0124 0E       		.uleb128 0xe
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 83


 4089 0125 3A       		.uleb128 0x3a
 4090 0126 0B       		.uleb128 0xb
 4091 0127 3B       		.uleb128 0x3b
 4092 0128 05       		.uleb128 0x5
 4093 0129 11       		.uleb128 0x11
 4094 012a 01       		.uleb128 0x1
 4095 012b 12       		.uleb128 0x12
 4096 012c 06       		.uleb128 0x6
 4097 012d 40       		.uleb128 0x40
 4098 012e 18       		.uleb128 0x18
 4099 012f 9642     		.uleb128 0x2116
 4100 0131 19       		.uleb128 0x19
 4101 0132 01       		.uleb128 0x1
 4102 0133 13       		.uleb128 0x13
 4103 0134 00       		.byte	0
 4104 0135 00       		.byte	0
 4105 0136 16       		.uleb128 0x16
 4106 0137 34       		.uleb128 0x34
 4107 0138 00       		.byte	0
 4108 0139 03       		.uleb128 0x3
 4109 013a 08       		.uleb128 0x8
 4110 013b 3A       		.uleb128 0x3a
 4111 013c 0B       		.uleb128 0xb
 4112 013d 3B       		.uleb128 0x3b
 4113 013e 05       		.uleb128 0x5
 4114 013f 49       		.uleb128 0x49
 4115 0140 13       		.uleb128 0x13
 4116 0141 02       		.uleb128 0x2
 4117 0142 18       		.uleb128 0x18
 4118 0143 00       		.byte	0
 4119 0144 00       		.byte	0
 4120 0145 17       		.uleb128 0x17
 4121 0146 2E       		.uleb128 0x2e
 4122 0147 01       		.byte	0x1
 4123 0148 3F       		.uleb128 0x3f
 4124 0149 19       		.uleb128 0x19
 4125 014a 03       		.uleb128 0x3
 4126 014b 0E       		.uleb128 0xe
 4127 014c 3A       		.uleb128 0x3a
 4128 014d 0B       		.uleb128 0xb
 4129 014e 3B       		.uleb128 0x3b
 4130 014f 05       		.uleb128 0x5
 4131 0150 27       		.uleb128 0x27
 4132 0151 19       		.uleb128 0x19
 4133 0152 49       		.uleb128 0x49
 4134 0153 13       		.uleb128 0x13
 4135 0154 8701     		.uleb128 0x87
 4136 0156 19       		.uleb128 0x19
 4137 0157 11       		.uleb128 0x11
 4138 0158 01       		.uleb128 0x1
 4139 0159 12       		.uleb128 0x12
 4140 015a 06       		.uleb128 0x6
 4141 015b 40       		.uleb128 0x40
 4142 015c 18       		.uleb128 0x18
 4143 015d 9742     		.uleb128 0x2117
 4144 015f 19       		.uleb128 0x19
 4145 0160 01       		.uleb128 0x1
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 84


 4146 0161 13       		.uleb128 0x13
 4147 0162 00       		.byte	0
 4148 0163 00       		.byte	0
 4149 0164 18       		.uleb128 0x18
 4150 0165 34       		.uleb128 0x34
 4151 0166 00       		.byte	0
 4152 0167 03       		.uleb128 0x3
 4153 0168 0E       		.uleb128 0xe
 4154 0169 3A       		.uleb128 0x3a
 4155 016a 0B       		.uleb128 0xb
 4156 016b 3B       		.uleb128 0x3b
 4157 016c 05       		.uleb128 0x5
 4158 016d 49       		.uleb128 0x49
 4159 016e 13       		.uleb128 0x13
 4160 016f 3F       		.uleb128 0x3f
 4161 0170 19       		.uleb128 0x19
 4162 0171 3C       		.uleb128 0x3c
 4163 0172 19       		.uleb128 0x19
 4164 0173 00       		.byte	0
 4165 0174 00       		.byte	0
 4166 0175 19       		.uleb128 0x19
 4167 0176 35       		.uleb128 0x35
 4168 0177 00       		.byte	0
 4169 0178 49       		.uleb128 0x49
 4170 0179 13       		.uleb128 0x13
 4171 017a 00       		.byte	0
 4172 017b 00       		.byte	0
 4173 017c 1A       		.uleb128 0x1a
 4174 017d 34       		.uleb128 0x34
 4175 017e 00       		.byte	0
 4176 017f 03       		.uleb128 0x3
 4177 0180 08       		.uleb128 0x8
 4178 0181 3A       		.uleb128 0x3a
 4179 0182 0B       		.uleb128 0xb
 4180 0183 3B       		.uleb128 0x3b
 4181 0184 0B       		.uleb128 0xb
 4182 0185 49       		.uleb128 0x49
 4183 0186 13       		.uleb128 0x13
 4184 0187 3F       		.uleb128 0x3f
 4185 0188 19       		.uleb128 0x19
 4186 0189 02       		.uleb128 0x2
 4187 018a 18       		.uleb128 0x18
 4188 018b 00       		.byte	0
 4189 018c 00       		.byte	0
 4190 018d 1B       		.uleb128 0x1b
 4191 018e 34       		.uleb128 0x34
 4192 018f 00       		.byte	0
 4193 0190 03       		.uleb128 0x3
 4194 0191 0E       		.uleb128 0xe
 4195 0192 3A       		.uleb128 0x3a
 4196 0193 0B       		.uleb128 0xb
 4197 0194 3B       		.uleb128 0x3b
 4198 0195 0B       		.uleb128 0xb
 4199 0196 49       		.uleb128 0x49
 4200 0197 13       		.uleb128 0x13
 4201 0198 3F       		.uleb128 0x3f
 4202 0199 19       		.uleb128 0x19
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 85


 4203 019a 02       		.uleb128 0x2
 4204 019b 18       		.uleb128 0x18
 4205 019c 00       		.byte	0
 4206 019d 00       		.byte	0
 4207 019e 1C       		.uleb128 0x1c
 4208 019f 2E       		.uleb128 0x2e
 4209 01a0 00       		.byte	0
 4210 01a1 3F       		.uleb128 0x3f
 4211 01a2 19       		.uleb128 0x19
 4212 01a3 3C       		.uleb128 0x3c
 4213 01a4 19       		.uleb128 0x19
 4214 01a5 6E       		.uleb128 0x6e
 4215 01a6 0E       		.uleb128 0xe
 4216 01a7 03       		.uleb128 0x3
 4217 01a8 0E       		.uleb128 0xe
 4218 01a9 3A       		.uleb128 0x3a
 4219 01aa 0B       		.uleb128 0xb
 4220 01ab 3B       		.uleb128 0x3b
 4221 01ac 0B       		.uleb128 0xb
 4222 01ad 00       		.byte	0
 4223 01ae 00       		.byte	0
 4224 01af 00       		.byte	0
 4225              		.section	.debug_loc,"",%progbits
 4226              	.Ldebug_loc0:
 4227              	.LLST0:
 4228 0000 B4000000 		.4byte	.LVL31
 4229 0004 BE000000 		.4byte	.LVL32
 4230 0008 0100     		.2byte	0x1
 4231 000a 50       		.byte	0x50
 4232 000b 66010000 		.4byte	.LVL48
 4233 000f 80010000 		.4byte	.LVL49
 4234 0013 0100     		.2byte	0x1
 4235 0015 50       		.byte	0x50
 4236 0016 00000000 		.4byte	0
 4237 001a 00000000 		.4byte	0
 4238              	.LLST1:
 4239 001e DE000000 		.4byte	.LVL34
 4240 0022 E4000000 		.4byte	.LVL35
 4241 0026 0100     		.2byte	0x1
 4242 0028 50       		.byte	0x50
 4243 0029 E4000000 		.4byte	.LVL35
 4244 002d E7000000 		.4byte	.LVL36-1
 4245 0031 0300     		.2byte	0x3
 4246 0033 70       		.byte	0x70
 4247 0034 7B       		.sleb128 -5
 4248 0035 9F       		.byte	0x9f
 4249 0036 4A010000 		.4byte	.LVL45
 4250 003a 52010000 		.4byte	.LVL46
 4251 003e 0100     		.2byte	0x1
 4252 0040 50       		.byte	0x50
 4253 0041 00000000 		.4byte	0
 4254 0045 00000000 		.4byte	0
 4255              	.LLST2:
 4256 0049 08000000 		.4byte	.LVL51
 4257 004d 14000000 		.4byte	.LVL52
 4258 0051 0100     		.2byte	0x1
 4259 0053 50       		.byte	0x50
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 86


 4260 0054 28010000 		.4byte	.LVL77
 4261 0058 4A010000 		.4byte	.LVL78
 4262 005c 0100     		.2byte	0x1
 4263 005e 50       		.byte	0x50
 4264 005f 00000000 		.4byte	0
 4265 0063 00000000 		.4byte	0
 4266              	.LLST3:
 4267 0067 32000000 		.4byte	.LVL54
 4268 006b 36000000 		.4byte	.LVL55
 4269 006f 0100     		.2byte	0x1
 4270 0071 50       		.byte	0x50
 4271 0072 36000000 		.4byte	.LVL55
 4272 0076 28010000 		.4byte	.LVL77
 4273 007a 0100     		.2byte	0x1
 4274 007c 55       		.byte	0x55
 4275 007d 00000000 		.4byte	0
 4276 0081 00000000 		.4byte	0
 4277              	.LLST4:
 4278 0085 3C000000 		.4byte	.LVL57
 4279 0089 4A000000 		.4byte	.LVL58
 4280 008d 0100     		.2byte	0x1
 4281 008f 50       		.byte	0x50
 4282 0090 4A000000 		.4byte	.LVL58
 4283 0094 28010000 		.4byte	.LVL77
 4284 0098 0100     		.2byte	0x1
 4285 009a 56       		.byte	0x56
 4286 009b 00000000 		.4byte	0
 4287 009f 00000000 		.4byte	0
 4288              	.LLST5:
 4289 00a3 64010000 		.4byte	.LVL80
 4290 00a7 6E010000 		.4byte	.LVL81
 4291 00ab 0100     		.2byte	0x1
 4292 00ad 50       		.byte	0x50
 4293 00ae D2010000 		.4byte	.LVL90
 4294 00b2 F4010000 		.4byte	.LVL91
 4295 00b6 0100     		.2byte	0x1
 4296 00b8 50       		.byte	0x50
 4297 00b9 00000000 		.4byte	0
 4298 00bd 00000000 		.4byte	0
 4299              	.LLST6:
 4300 00c1 02020000 		.4byte	.LVL93
 4301 00c5 1E020000 		.4byte	.LVL94
 4302 00c9 0100     		.2byte	0x1
 4303 00cb 50       		.byte	0x50
 4304 00cc 54020000 		.4byte	.LVL102
 4305 00d0 76020000 		.4byte	.LVL103
 4306 00d4 0100     		.2byte	0x1
 4307 00d6 50       		.byte	0x50
 4308 00d7 00000000 		.4byte	0
 4309 00db 00000000 		.4byte	0
 4310              	.LLST7:
 4311 00df 84020000 		.4byte	.LVL105
 4312 00e3 A0020000 		.4byte	.LVL106
 4313 00e7 0100     		.2byte	0x1
 4314 00e9 50       		.byte	0x50
 4315 00ea D8020000 		.4byte	.LVL114
 4316 00ee 4C030000 		.4byte	.LVL115
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 87


 4317 00f2 0100     		.2byte	0x1
 4318 00f4 50       		.byte	0x50
 4319 00f5 00000000 		.4byte	0
 4320 00f9 00000000 		.4byte	0
 4321              	.LLST8:
 4322 00fd 08000000 		.4byte	.LVL117
 4323 0101 12000000 		.4byte	.LVL118
 4324 0105 0100     		.2byte	0x1
 4325 0107 50       		.byte	0x50
 4326 0108 C2000000 		.4byte	.LVL132
 4327 010c E4000000 		.4byte	.LVL133
 4328 0110 0100     		.2byte	0x1
 4329 0112 50       		.byte	0x50
 4330 0113 00000000 		.4byte	0
 4331 0117 00000000 		.4byte	0
 4332              	.LLST9:
 4333 011b 38000000 		.4byte	.LVL120
 4334 011f 3C000000 		.4byte	.LVL121
 4335 0123 0100     		.2byte	0x1
 4336 0125 50       		.byte	0x50
 4337 0126 3C000000 		.4byte	.LVL121
 4338 012a 3F000000 		.4byte	.LVL122-1
 4339 012e 0300     		.2byte	0x3
 4340 0130 70       		.byte	0x70
 4341 0131 7B       		.sleb128 -5
 4342 0132 9F       		.byte	0x9f
 4343 0133 9E000000 		.4byte	.LVL129
 4344 0137 AA000000 		.4byte	.LVL130
 4345 013b 0100     		.2byte	0x1
 4346 013d 50       		.byte	0x50
 4347 013e 00000000 		.4byte	0
 4348 0142 00000000 		.4byte	0
 4349              	.LLST10:
 4350 0146 F8000000 		.4byte	.LVL135
 4351 014a 02010000 		.4byte	.LVL136
 4352 014e 0100     		.2byte	0x1
 4353 0150 50       		.byte	0x50
 4354 0151 36010000 		.4byte	.LVL141
 4355 0155 58010000 		.4byte	.LVL142
 4356 0159 0100     		.2byte	0x1
 4357 015b 50       		.byte	0x50
 4358 015c 00000000 		.4byte	0
 4359 0160 00000000 		.4byte	0
 4360              	.LLST11:
 4361 0164 66010000 		.4byte	.LVL144
 4362 0168 70010000 		.4byte	.LVL145
 4363 016c 0100     		.2byte	0x1
 4364 016e 50       		.byte	0x50
 4365 016f A6010000 		.4byte	.LVL150
 4366 0173 C8010000 		.4byte	.LVL151
 4367 0177 0100     		.2byte	0x1
 4368 0179 50       		.byte	0x50
 4369 017a 00000000 		.4byte	0
 4370 017e 00000000 		.4byte	0
 4371              	.LLST12:
 4372 0182 74000000 		.4byte	.LVL161
 4373 0186 94000000 		.4byte	.LVL165
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 88


 4374 018a 0100     		.2byte	0x1
 4375 018c 54       		.byte	0x54
 4376 018d 00000000 		.4byte	0
 4377 0191 00000000 		.4byte	0
 4378              		.section	.debug_aranges,"",%progbits
 4379 0000 44000000 		.4byte	0x44
 4380 0004 0200     		.2byte	0x2
 4381 0006 00000000 		.4byte	.Ldebug_info0
 4382 000a 04       		.byte	0x4
 4383 000b 00       		.byte	0
 4384 000c 0000     		.2byte	0
 4385 000e 0000     		.2byte	0
 4386 0010 00000000 		.4byte	.LFB64
 4387 0014 40010000 		.4byte	.LFE64-.LFB64
 4388 0018 00000000 		.4byte	.LFB65
 4389 001c C0010000 		.4byte	.LFE65-.LFB65
 4390 0020 00000000 		.4byte	.LFB66
 4391 0024 5C030000 		.4byte	.LFE66-.LFB66
 4392 0028 00000000 		.4byte	.LFB67
 4393 002c 08020000 		.4byte	.LFE67-.LFB67
 4394 0030 00000000 		.4byte	.LFB68
 4395 0034 D0000000 		.4byte	.LFE68-.LFB68
 4396 0038 00000000 		.4byte	.LFB69
 4397 003c 84000000 		.4byte	.LFE69-.LFB69
 4398 0040 00000000 		.4byte	0
 4399 0044 00000000 		.4byte	0
 4400              		.section	.debug_ranges,"",%progbits
 4401              	.Ldebug_ranges0:
 4402 0000 00000000 		.4byte	.LFB64
 4403 0004 40010000 		.4byte	.LFE64
 4404 0008 00000000 		.4byte	.LFB65
 4405 000c C0010000 		.4byte	.LFE65
 4406 0010 00000000 		.4byte	.LFB66
 4407 0014 5C030000 		.4byte	.LFE66
 4408 0018 00000000 		.4byte	.LFB67
 4409 001c 08020000 		.4byte	.LFE67
 4410 0020 00000000 		.4byte	.LFB68
 4411 0024 D0000000 		.4byte	.LFE68
 4412 0028 00000000 		.4byte	.LFB69
 4413 002c 84000000 		.4byte	.LFE69
 4414 0030 00000000 		.4byte	0
 4415 0034 00000000 		.4byte	0
 4416              		.section	.debug_line,"",%progbits
 4417              	.Ldebug_line0:
 4418 0000 32050000 		.section	.debug_str,"MS",%progbits,1
 4418      02002703 
 4418      00000201 
 4418      FB0E0D00 
 4418      01010101 
 4419              	.LASF37:
 4420 0000 73657276 		.ascii	"servoPWM\000"
 4420      6F50574D 
 4420      00
 4421              	.LASF31:
 4422 0009 63785074 		.ascii	"cxPtr\000"
 4422      7200
 4423              	.LASF60:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 89


 4424 000f 55415254 		.ascii	"UART_1_GetChar\000"
 4424      5F315F47 
 4424      65744368 
 4424      617200
 4425              	.LASF51:
 4426 001e 54696D65 		.ascii	"Timer_ReadStatusRegister\000"
 4426      725F5265 
 4426      61645374 
 4426      61747573 
 4426      52656769 
 4427              	.LASF95:
 4428 0037 50574D5F 		.ascii	"PWM_1_Start\000"
 4428      315F5374 
 4428      61727400 
 4429              	.LASF71:
 4430 0043 55415254 		.ascii	"UART_2_GetChar\000"
 4430      5F325F47 
 4430      65744368 
 4430      617200
 4431              	.LASF58:
 4432 0052 4C45445F 		.ascii	"LED_Write\000"
 4432      57726974 
 4432      6500
 4433              	.LASF38:
 4434 005c 65766173 		.ascii	"evasiveMode\000"
 4434      6976654D 
 4434      6F646500 
 4435              	.LASF23:
 4436 0068 64697374 		.ascii	"distPtr\000"
 4436      50747200 
 4437              	.LASF2:
 4438 0070 73686F72 		.ascii	"short int\000"
 4438      7420696E 
 4438      7400
 4439              	.LASF18:
 4440 007a 696E7465 		.ascii	"inter_1\000"
 4440      725F3100 
 4441              	.LASF74:
 4442 0082 55415254 		.ascii	"UART_3_GetChar\000"
 4442      5F335F47 
 4442      65744368 
 4442      617200
 4443              	.LASF17:
 4444 0091 73697A65 		.ascii	"sizetype\000"
 4444      74797065 
 4444      00
 4445              	.LASF34:
 4446 009a 70657266 		.ascii	"performEvasiveManeuver\000"
 4446      6F726D45 
 4446      76617369 
 4446      76654D61 
 4446      6E657576 
 4447              	.LASF90:
 4448 00b1 66726F6E 		.ascii	"front_left_interrupt_SetVector\000"
 4448      745F6C65 
 4448      66745F69 
 4448      6E746572 
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 90


 4448      72757074 
 4449              	.LASF98:
 4450 00d0 4D4F4445 		.ascii	"MODE_Read\000"
 4450      5F526561 
 4450      6400
 4451              	.LASF63:
 4452 00da 505F6672 		.ascii	"P_front_left_Read\000"
 4452      6F6E745F 
 4452      6C656674 
 4452      5F526561 
 4452      6400
 4453              	.LASF89:
 4454 00ec 66726F6E 		.ascii	"front_right_interrupt_SetVector\000"
 4454      745F7269 
 4454      6768745F 
 4454      696E7465 
 4454      72727570 
 4455              	.LASF88:
 4456 010c 66726F6E 		.ascii	"front_interrupt_SetVector\000"
 4456      745F696E 
 4456      74657272 
 4456      7570745F 
 4456      53657456 
 4457              	.LASF45:
 4458 0126 656C6170 		.ascii	"elapsed_time\000"
 4458      7365645F 
 4458      74696D65 
 4458      00
 4459              	.LASF16:
 4460 0133 6C6F6E67 		.ascii	"long double\000"
 4460      20646F75 
 4460      626C6500 
 4461              	.LASF61:
 4462 013f 7374726E 		.ascii	"strncmp\000"
 4462      636D7000 
 4463              	.LASF75:
 4464 0147 73747263 		.ascii	"strcmp\000"
 4464      6D7000
 4465              	.LASF12:
 4466 014e 75696E74 		.ascii	"uint16\000"
 4466      313600
 4467              	.LASF11:
 4468 0155 75696E74 		.ascii	"uint8\000"
 4468      3800
 4469              	.LASF72:
 4470 015b 72616E64 		.ascii	"rand\000"
 4470      00
 4471              	.LASF56:
 4472 0160 53544F50 		.ascii	"STOP_Write\000"
 4472      5F577269 
 4472      746500
 4473              	.LASF62:
 4474 016b 505F6C65 		.ascii	"P_left_1_Read\000"
 4474      66745F31 
 4474      5F526561 
 4474      6400
 4475              	.LASF91:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 91


 4476 0179 55415254 		.ascii	"UART_1_Start\000"
 4476      5F315F53 
 4476      74617274 
 4476      00
 4477              	.LASF77:
 4478 0186 55415254 		.ascii	"UART_2_GetRxBufferSize\000"
 4478      5F325F47 
 4478      65745278 
 4478      42756666 
 4478      65725369 
 4479              	.LASF32:
 4480 019d 63686173 		.ascii	"chaseMode\000"
 4480      654D6F64 
 4480      6500
 4481              	.LASF13:
 4482 01a7 666C6F61 		.ascii	"float\000"
 4482      7400
 4483              	.LASF14:
 4484 01ad 646F7562 		.ascii	"double\000"
 4484      6C6500
 4485              	.LASF24:
 4486 01b4 66726F6E 		.ascii	"frontBuffer\000"
 4486      74427566 
 4486      66657200 
 4487              	.LASF6:
 4488 01c0 6C6F6E67 		.ascii	"long long int\000"
 4488      206C6F6E 
 4488      6720696E 
 4488      7400
 4489              	.LASF78:
 4490 01ce 55415254 		.ascii	"UART_3_GetRxBufferSize\000"
 4490      5F335F47 
 4490      65745278 
 4490      42756666 
 4490      65725369 
 4491              	.LASF85:
 4492 01e5 54696D65 		.ascii	"Timer_Start\000"
 4492      725F5374 
 4492      61727400 
 4493              	.LASF4:
 4494 01f1 6C6F6E67 		.ascii	"long int\000"
 4494      20696E74 
 4494      00
 4495              	.LASF93:
 4496 01fa 55415254 		.ascii	"UART_3_Start\000"
 4496      5F335F53 
 4496      74617274 
 4496      00
 4497              	.LASF65:
 4498 0207 505F7269 		.ascii	"P_right_1_Read\000"
 4498      6768745F 
 4498      315F5265 
 4498      616400
 4499              	.LASF35:
 4500 0216 64656C61 		.ascii	"delayTime\000"
 4500      7954696D 
 4500      6500
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 92


 4501              	.LASF70:
 4502 0220 61746F66 		.ascii	"atof\000"
 4502      00
 4503              	.LASF57:
 4504 0225 4D4F4445 		.ascii	"MODE_Write\000"
 4504      5F577269 
 4504      746500
 4505              	.LASF49:
 4506 0230 50574D5F 		.ascii	"PWM_base\000"
 4506      62617365 
 4506      00
 4507              	.LASF40:
 4508 0239 72656172 		.ascii	"rearDistance\000"
 4508      44697374 
 4508      616E6365 
 4508      00
 4509              	.LASF68:
 4510 0246 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4510      315F5772 
 4510      69746543 
 4510      6F6D7061 
 4510      726500
 4511              	.LASF48:
 4512 0259 61636375 		.ascii	"accumulated_error\000"
 4512      6D756C61 
 4512      7465645F 
 4512      6572726F 
 4512      7200
 4513              	.LASF66:
 4514 026b 505F6672 		.ascii	"P_front_right_Read\000"
 4514      6F6E745F 
 4514      72696768 
 4514      745F5265 
 4514      616400
 4515              	.LASF22:
 4516 027e 72656365 		.ascii	"receivedChar\000"
 4516      69766564 
 4516      43686172 
 4516      00
 4517              	.LASF55:
 4518 028b 61746F69 		.ascii	"atoi\000"
 4518      00
 4519              	.LASF1:
 4520 0290 756E7369 		.ascii	"unsigned char\000"
 4520      676E6564 
 4520      20636861 
 4520      7200
 4521              	.LASF52:
 4522 029e 73707269 		.ascii	"sprintf\000"
 4522      6E746600 
 4523              	.LASF81:
 4524 02a6 66726F6E 		.ascii	"front_interrupt_Start\000"
 4524      745F696E 
 4524      74657272 
 4524      7570745F 
 4524      53746172 
 4525              	.LASF7:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 93


 4526 02bc 6C6F6E67 		.ascii	"long long unsigned int\000"
 4526      206C6F6E 
 4526      6720756E 
 4526      7369676E 
 4526      65642069 
 4527              	.LASF8:
 4528 02d3 756E7369 		.ascii	"unsigned int\000"
 4528      676E6564 
 4528      20696E74 
 4528      00
 4529              	.LASF41:
 4530 02e0 7475726E 		.ascii	"turn\000"
 4530      00
 4531              	.LASF47:
 4532 02e5 73706565 		.ascii	"speed\000"
 4532      6400
 4533              	.LASF53:
 4534 02eb 50574D5F 		.ascii	"PWM_WriteCompare\000"
 4534      57726974 
 4534      65436F6D 
 4534      70617265 
 4534      00
 4535              	.LASF82:
 4536 02fc 66726F6E 		.ascii	"front_right_interrupt_Start\000"
 4536      745F7269 
 4536      6768745F 
 4536      696E7465 
 4536      72727570 
 4537              	.LASF3:
 4538 0318 73686F72 		.ascii	"short unsigned int\000"
 4538      7420756E 
 4538      7369676E 
 4538      65642069 
 4538      6E7400
 4539              	.LASF0:
 4540 032b 7369676E 		.ascii	"signed char\000"
 4540      65642063 
 4540      68617200 
 4541              	.LASF15:
 4542 0337 63686172 		.ascii	"char\000"
 4542      00
 4543              	.LASF64:
 4544 033c 505F6C65 		.ascii	"P_left_2_Read\000"
 4544      66745F32 
 4544      5F526561 
 4544      6400
 4545              	.LASF102:
 4546 034a 6D61696E 		.ascii	"main\000"
 4546      00
 4547              	.LASF10:
 4548 034f 696E7433 		.ascii	"int32_t\000"
 4548      325F7400 
 4549              	.LASF44:
 4550 0357 6E65775F 		.ascii	"new_time\000"
 4550      74696D65 
 4550      00
 4551              	.LASF87:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 94


 4552 0360 48455F49 		.ascii	"HE_Interrupt_SetVector\000"
 4552      6E746572 
 4552      72757074 
 4552      5F536574 
 4552      56656374 
 4553              	.LASF39:
 4554 0377 66726F6E 		.ascii	"frontDistance\000"
 4554      74446973 
 4554      74616E63 
 4554      6500
 4555              	.LASF84:
 4556 0385 7475726E 		.ascii	"turn_interrupt_Start\000"
 4556      5F696E74 
 4556      65727275 
 4556      70745F53 
 4556      74617274 
 4557              	.LASF29:
 4558 039a 6C656674 		.ascii	"leftIndex\000"
 4558      496E6465 
 4558      7800
 4559              	.LASF83:
 4560 03a4 66726F6E 		.ascii	"front_left_interrupt_Start\000"
 4560      745F6C65 
 4560      66745F69 
 4560      6E746572 
 4560      72757074 
 4561              	.LASF28:
 4562 03bf 72656172 		.ascii	"rearIndex\000"
 4562      496E6465 
 4562      7800
 4563              	.LASF100:
 4564 03c9 6D61696E 		.ascii	"main.c\000"
 4564      2E6300
 4565              	.LASF5:
 4566 03d0 6C6F6E67 		.ascii	"long unsigned int\000"
 4566      20756E73 
 4566      69676E65 
 4566      6420696E 
 4566      7400
 4567              	.LASF76:
 4568 03e2 55415254 		.ascii	"UART_4_GetChar\000"
 4568      5F345F47 
 4568      65744368 
 4568      617200
 4569              	.LASF69:
 4570 03f1 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 4570      5F315F47 
 4570      65745278 
 4570      42756666 
 4570      65725369 
 4571              	.LASF33:
 4572 0408 666C6565 		.ascii	"fleeMode\000"
 4572      4D6F6465 
 4572      00
 4573              	.LASF59:
 4574 0411 55415254 		.ascii	"UART_1_PutString\000"
 4574      5F315F50 
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 95


 4574      75745374 
 4574      72696E67 
 4574      00
 4575              	.LASF30:
 4576 0422 72696768 		.ascii	"rightIndex\000"
 4576      74496E64 
 4576      657800
 4577              	.LASF79:
 4578 042d 55415254 		.ascii	"UART_4_GetRxBufferSize\000"
 4578      5F345F47 
 4578      65745278 
 4578      42756666 
 4578      65725369 
 4579              	.LASF27:
 4580 0444 66726F6E 		.ascii	"frontIndex\000"
 4580      74496E64 
 4580      657800
 4581              	.LASF26:
 4582 044f 72696768 		.ascii	"rightBuffer\000"
 4582      74427566 
 4582      66657200 
 4583              	.LASF97:
 4584 045b 7372616E 		.ascii	"srand\000"
 4584      6400
 4585              	.LASF9:
 4586 0461 5F5F696E 		.ascii	"__int32_t\000"
 4586      7433325F 
 4586      7400
 4587              	.LASF92:
 4588 046b 55415254 		.ascii	"UART_2_Start\000"
 4588      5F325F53 
 4588      74617274 
 4588      00
 4589              	.LASF21:
 4590 0478 72656164 		.ascii	"readIndex\000"
 4590      496E6465 
 4590      7800
 4591              	.LASF86:
 4592 0482 50574D5F 		.ascii	"PWM_Start\000"
 4592      53746172 
 4592      7400
 4593              	.LASF50:
 4594 048c 54696D65 		.ascii	"Timer_ReadCapture\000"
 4594      725F5265 
 4594      61644361 
 4594      70747572 
 4594      6500
 4595              	.LASF54:
 4596 049e 73747273 		.ascii	"strstr\000"
 4596      747200
 4597              	.LASF80:
 4598 04a5 48455F49 		.ascii	"HE_Interrupt_Start\000"
 4598      6E746572 
 4598      72757074 
 4598      5F537461 
 4598      727400
 4599              	.LASF46:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 96


 4600 04b8 73747262 		.ascii	"strbuf2\000"
 4600      75663200 
 4601              	.LASF67:
 4602 04c0 505F7269 		.ascii	"P_right_2_Read\000"
 4602      6768745F 
 4602      325F5265 
 4602      616400
 4603              	.LASF96:
 4604 04cf 74696D65 		.ascii	"time\000"
 4604      00
 4605              	.LASF42:
 4606 04d4 74617267 		.ascii	"targetSpeed\000"
 4606      65745370 
 4606      65656400 
 4607              	.LASF94:
 4608 04e0 55415254 		.ascii	"UART_4_Start\000"
 4608      5F345F53 
 4608      74617274 
 4608      00
 4609              	.LASF101:
 4610 04ed 433A5C55 		.ascii	"C:\\Users\\stanl\\Documents\\PSoC Creator\\CarLab\\"
 4610      73657273 
 4610      5C737461 
 4610      6E6C5C44 
 4610      6F63756D 
 4611 051a 46696E61 		.ascii	"Final.cydsn\000"
 4611      6C2E6379 
 4611      64736E00 
 4612              	.LASF36:
 4613 0526 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4613      52784275 
 4613      66666572 
 4613      00
 4614              	.LASF99:
 4615 0533 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4615      43313120 
 4615      352E342E 
 4615      31203230 
 4615      31363036 
 4616 0566 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4616      20726576 
 4616      6973696F 
 4616      6E203233 
 4616      37373135 
 4617 0599 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4617      66756E63 
 4617      74696F6E 
 4617      2D736563 
 4617      74696F6E 
 4618              	.LASF73:
 4619 05c1 43794465 		.ascii	"CyDelay\000"
 4619      6C617900 
 4620              	.LASF25:
 4621 05c9 6C656674 		.ascii	"leftBuffer\000"
 4621      42756666 
 4621      657200
 4622              	.LASF19:
ARM GAS  C:\Users\stanl\AppData\Local\Temp\ccLCLeUf.s 			page 97


 4623 05d4 696E7465 		.ascii	"inter_2\000"
 4623      725F3200 
 4624              	.LASF20:
 4625 05dc 72656172 		.ascii	"rearBuffer\000"
 4625      42756666 
 4625      657200
 4626              	.LASF43:
 4627 05e7 6F6C645F 		.ascii	"old_time\000"
 4627      74696D65 
 4627      00
 4628              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
